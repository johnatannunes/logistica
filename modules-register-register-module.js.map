{"version":3,"sources":["./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/overlay.js","./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/portal.js","./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/stepper.js","./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/text-field.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/autocomplete.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/icon.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/menu.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/stepper.js","./node_modules/@ng-select/ng-select/__ivy_ngcc__/fesm2015/ng-select-ng-select.js","./node_modules/ng2-search-filter/__ivy_ngcc__/ng2-search-filter.js","./node_modules/primeng/__ivy_ngcc__/fesm2015/primeng-keyfilter.js","./src/app/core/config/httpParams.ts","./src/app/core/routes/routesCore.ts","./src/app/core/routes/routes_obj/register_route.ts","./src/app/core/services/cep.service.ts","./src/app/modules/register/alert/alert.component.ts","./src/app/modules/register/alert/alert.component.html","./src/app/modules/register/alert/build_payload.ts","./src/app/modules/register/img/img.component.ts","./src/app/modules/register/img/img.component.html","./src/app/modules/register/img/img.service.ts","./src/app/modules/register/register-customer/build_payload.ts","./src/app/modules/register/register-customer/register-customer.component.ts","./src/app/modules/register/register-customer/register-customer.component.html","./src/app/modules/register/register-employee/register-driver/build_payload.ts","./src/app/modules/register/register-employee/register-driver/register-driver.component.ts","./src/app/modules/register/register-employee/register-driver/register-driver.component.html","./src/app/modules/register/register-employee/register-employee/build_payload.ts","./src/app/modules/register/register-employee/register-employee/constants-employee.ts","./src/app/modules/register/register-employee/register-employee/register-employee.component.ts","./src/app/modules/register/register-employee/register-employee/register-employee.component.html","./src/app/modules/register/register-employee/register-function/register-function.component.ts","./src/app/modules/register/register-employee/register-function/register-function.component.html","./src/app/modules/register/register-expenses/register-expenses.component.ts","./src/app/modules/register/register-expenses/register-expenses.component.html","./src/app/modules/register/register-fuel/register-fuel.component.ts","./src/app/modules/register/register-fuel/register-fuel.component.html","./src/app/modules/register/register-journey/build_payload.ts","./src/app/modules/register/register-journey/register-journey.component.ts","./src/app/modules/register/register-journey/register-journey.component.html","./src/app/modules/register/register-km/register-km.component.ts","./src/app/modules/register/register-km/register-km.component.html","./src/app/modules/register/register-maintenance/maintenance/build_payload.ts","./src/app/modules/register/register-maintenance/maintenance/controls_maintence.ts","./src/app/modules/register/register-maintenance/maintenance/maintenance.component.ts","./src/app/modules/register/register-maintenance/maintenance/maintenance.component.html","./src/app/modules/register/register-maintenance/type-maintenance/type-maintenance.component.ts","./src/app/modules/register/register-maintenance/type-maintenance/type-maintenance.component.html","./src/app/modules/register/register-perfil/register-perfil.component.ts","./src/app/modules/register/register-perfil/register-perfil.component.html","./src/app/modules/register/register-report/register-report.component.ts","./src/app/modules/register/register-report/register-report.component.html","./src/app/modules/register/register-routing.module.ts","./src/app/modules/register/register-scheduling/register-scheduling.component.ts","./src/app/modules/register/register-scheduling/register-scheduling.component.html","./src/app/modules/register/register-supplier/build_payload.ts","./src/app/modules/register/register-supplier/register-supplier.component.ts","./src/app/modules/register/register-supplier/register-supplier.component.html","./src/app/modules/register/register-vehicles/build_payload.ts","./src/app/modules/register/register-vehicles/controls_controls_form.ts","./src/app/modules/register/register-vehicles/register-vehicles.component.ts","./src/app/modules/register/register-vehicles/register-vehicles.component.html","./src/app/modules/register/register.module.ts","./src/app/modules/register/vehicle-accident/register-vehicle-accident-type/register-vehicle-accident-type.component.ts","./src/app/modules/register/vehicle-accident/register-vehicle-accident-type/register-vehicle-accident-type.component.html","./src/app/modules/register/vehicle-accident/register-vehicle-accident/build_payload.ts","./src/app/modules/register/vehicle-accident/register-vehicle-accident/register-vehicle-accident.component.ts","./src/app/modules/register/vehicle-accident/register-vehicle-accident/register-vehicle-accident.component.html","./src/app/shared/FormBuilderControls/controls_alert_form.ts","./src/app/shared/FormBuilderControls/controls_detail_form.ts","./src/app/shared/pipes/dateFormate.pipe.ts","./src/app/shared/search/autocomplete.ts","./src/app/shared/storage/crudStorageDriverRegister.ts","./src/app/shared/utils/builWordKey.ts","./src/app/shared/utils/build_link_googleMaps.ts","./src/app/shared/utils/filterDebounceTime.ts","./src/app/shared/utils/position.ts","./src/app/shared/utils/validateDate.ts","./src/environments/environment.prod.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0F;AAClD;AACS;AACD;AACJ;AACF;AAC8C;AACnC;AACyN;AAC9K;AACjC;AACqB;AACnC;AACG;AACQ;AACG;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iFAAmB;AACjD,6BAA6B,iFAAmB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,eAAe;AACf;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA,0CAA0C,+DAA+D;AACzG;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,yCAAyC,sDAAe,CAAC,uEAAuB,GAAG,sDAAe,CAAC,oEAAoB,GAAG,sDAAe,CAAC,oDAAa,GAAG,sDAAe,CAAC,wDAAQ,GAAG;AAC7P,8BAA8B,wEAAkB,EAAE,oDAAoD,kCAAkC,8DAAQ,CAAC,uEAAgB,GAAG,8DAAQ,CAAC,oEAAa,GAAG,8DAAQ,CAAC,oDAAM,GAAG,8DAAQ,CAAC,wDAAQ,GAAG,EAAE,oDAAoD;AACzR;AACA,KAAK,OAAO,uEAAgB,EAAE;AAC9B,KAAK,OAAO,oEAAa,EAAE;AAC3B,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AACvE;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,UAAU,OAAO,uEAAuB,EAAE,GAAG,OAAO,oEAAoB,EAAE,GAAG,OAAO,oDAAa,EAAE,GAAG;AAC3H,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,+BAA+B;AACpC,KAAK,0CAA0C,OAAO,sDAAQ,EAAE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,SAAS,IAAI,MAAM;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,SAAS,IAAI,MAAM;AACrE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,yCAAyC,sDAAe,CAAC,wDAAQ,GAAG;AAC5I,8BAA8B,wEAAkB,EAAE,oDAAoD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AAClN;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,OAAO,8DAAQ;AACpB;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,GAAG,OAAO,8DAAe,EAAE,EAAE,EAAE,QAAQ,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sDAAQ,QAAQ,sDAAQ;AACrC,QAAQ,wDAAQ;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4CAAO;AACzC,gCAAgC,4CAAO;AACvC,gCAAgC,4CAAO;AACvC,gCAAgC,iDAAY;AAC5C;AACA;AACA,kCAAkC,4CAAO;AACzC;AACA,yCAAyC,4CAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2DAAI;AACtqDAAqD;AACrD;AACA;AACA;AACA;AACA,qDAAqD,kBAAkB,iBAAiB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iFAAmB;AACzC,uBAAuB,iFAAmB;AAC1C,yBAAyB,iFAAmB;AAC5C,0BAA0B,iFAAmB;AAC7C,yBAAyB,iFAAmB;AAC5C,0BAA0B,iFAAmB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yEAAW;AACnB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gEAAS,CAAC,kDAAK;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4CAAO;AAC3C;AACA,mCAAmC,iiBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbgBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C,mDAAmD,QAAQ,GAAG,QAAQ;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iFAAmB;AAC/C,yBAAyB,iFAAmB;AAC5C,4BAA4B,iFAAmB;AAC/C,2BAA2B,iFAAmB;AAC9C,0BAA0B,iFAAmB;AAC7C,2BAA2B,iFAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iFAAmB;AACtD;AACA;AACA,kCAAkC,iFAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iFAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iFAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6DAA6D;AAC5F;AACA;AACA,yBAAyB,iFAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2DAA2D;AACzF;AACA;AACA,0BAA0B,iFAAmB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,YAAY,yEAAW;AACvB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,wDAAU;AACxmCAAmC,qBAAqB;AACxD;AACA;AACA,mCAAmC,uBAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,gBAAgB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qCAAqC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,0CAA0C,sDAAe,CAAC,oEAAoB,GAAG,sDAAe,CAAC,wDAAQ,GAAG,sDAAe,CAAC,8DAAe,GAAG,sDAAe,oBAAoB;AAC3P,+BAA+B,wEAAkB,EAAE,qDAAqD,mCAAmC,8DAAQ,CAAC,oEAAa,GAAG,8DAAQ,CAAC,wDAAQ,GAAG,8DAAQ,CAAC,8DAAQ,GAAG,8DAAQ,oBAAoB,EAAE,qDAAqD;AAC/R;AACA,KAAK,OAAO,oEAAa,EAAE;AAC3B,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,OAAO,8DAAQ,EAAE;AACtB,KAAK;AACL;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KA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;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0BAA0B;AACjD,4BAA4B,qBAAqB,mFAAqB,QAAQ;AAC9E;AACA,wBAAwB,2BAA2B;AACnD,6BAA6B,sBAAsB,mFAAqB,QAAQ;AAChF;AACA,8BAA8B,iCAAiC;AAC/D;AACA,mCAAmC,mFAAqB;AACxD;AACA;AACA,yBAAyB,4BAA4B;AACrD,8BAA8B,uBAAuB,mFAAqB,QAAQ;AAClF;AACA,gBAAgB,mBAAmB;AACnC,qBAAqB,cAAc,mFAAqB,QAAQ;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4DAAM,KAAK,4EAAc;AAC3D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gEAAS;AAC/B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAA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AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,6BAA6B,+DAAwB,CAAC,yDAAkB,GAAG,+DAAwB,CAAC,8DAAuB,GAAG;AAC9K,iBAAiB,+DAAwB,EAAE,0FAA0F,wEAAiC,GAAG;AACzK;AACA,KAAK,OAAO,yDAAW,EAAE;AACzB,KAAK,OAAO,8DAAgB;AAC5B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,yDAAkB,EAAE,GAAG,OAAO,8DAAuB,EAAE,EAAE,EAAE,QAAQ,EAAE;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,2EAA2E;AACvJ,+BAA+B,+DAAwB,EAAE,6HAA6H,gEAAyB;AAC/M;AACA;AACA,aAAa,IAAI,wEAAiC,GAAG;AACrD,2DAA2D,mEAA4B;AACvF,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,mCAAmC,+DAAwB,CAAC,sEAA+B,GAAG,+DAAwB,CAAC,8DAAuB,GAAG,+DAAwB,CAAC,wDAAQ,GAAG;AACjP,uBAAuB,+DAAwB,EAAE,2EAA2E,wCAAwC,YAAY,uBAAuB,4CAA4C,wEAAiC,GAAG;AACvR;AACA,KAAK,OAAO,sEAAwB,EAAE;AACtC,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AACvE;AACA;AACA,gBAAgB,OAAO,oDAAM,EAAE;AAC/B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,sEAA+B,EAAE,GAAG,OAAO,8DAAuB,EAAE,GAAG;AAC7G,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,EAAE,EAAE,GAAG;AACvB,kBAAkB,oDAAM;AACxB,SAAS,GAAG,EAAE,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,mEAAmE;AACvI,2BAA2B,+DAAwB,EAAE,qGAAqG,sCAAsC,0CAA0C,gEAAyB;AACnQ;AACA;AACA,aAAa,IAAI,wEAAiC,GAAG;AACrD,uDAAuD,mEAA4B;AACnF,4BAA4B,CAAC,+DAAwB;AA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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mFAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,kFAAoB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gEAAS,eAAe,gEAAS;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,+BAA+B,iEAAe;AAC9C;AACA;AACA;AACA,wCAAwC,+CAAE;AAC1C,kBAAkB,gEAAS,2BAA2B,gEAAS;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc,GAAG,EAAE;AACpD;AACA;AACA;AACA,mCAAmC,cAAc,GAAG,EAAE;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4EAAc;AAC1C;AACA;AACA;AACA,yBAAyB,2DAAK,gBAAgB,2DAAK;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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AA0B,gEAAS,MAAM,gEAAS;AAClD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+BAA+B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,uCAAuC,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,8DAAe,GAAG,+DAAwB,CAAC,oDAAa,GAAG,+DAAwB,CAAC,wDAAQ,MAAM;AACnR,2BAA2B,+DAAwB,EAAE,0MAA0M;AAC/P,QAAQ,wDAAiB,mEAAmE,gCAAgC,EAAE;AAC9H,KAAK,EAAE,WAAW,sIAAsI,qCAAqC;AAC7L;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,8DAAQ,EAAE;AACtB,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AAC3F;AACA;AACA,eAAe,OAAO,mDAAK,iCAAiC;AAC5D,eAAe,OAAO,mDAAK,iCAAiC;AAC5D,eAAe,OAAO,mDAAK,kCAAkC;AAC7D,yBAAyB,OAAO,0DAAY,oBAAoB;AAChE;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,8DAAe,EAAE,GAAG,OAAO,oDAAa,EAAE,GAAG;AAChH,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,EAAE,EAAE,GAAG;AACvB,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8DAAuB,EAAE,wBAAwB;AACxE,uBAAuB,8DAAuB,EAAE,+CAA+C,qCAAqC,EAAE,aAAa,oEAAc,IAAI;AACrK,cAAc,oDAAoD,gEAAyB,mBAAmB,4BAA4B,2CAA2C,EAAE,wBAAwB,SAAS,oEAAc,EAAE,EAAE,wBAAwB,2CAA2C,EAAE,EAAE,EAAE,EAAE;AACrT,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA;AACA,0BAA0B,oEAAc;AACxC;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE8E;;AAE9E,sC;;;;;;;;;;;;ACjbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AACD;AACgO;AACvD;AAC7J;AACjB;AACoB;AACD;AACzB;AAC8C;AAC1C;AACF;AACF;AACyB;AACF;;AAE1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACE;AACK;AACH;AACK;AACM;;AAEvD;AACA,0DAA0D;AAC1D,IAAI,4DAAqB;AACzB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,wDAAiB;AACrB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iFAAkB;AACpD;AACA,6CAA6C,4DAAc;AAC3D;AACA;AACA,CAAC;AACD;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,iDAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA,0BAA0B,0DAAY;AACtC;AACA,0BAA0B,0DAAY;AACtC;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA,sCAAsC,+BAA+B;AACrE;AACA;AACA;AACA,kBAAkB,uCAAuC;AACzD;AACA;AACA;AACA;AACA,iCAAiC,oCAAoC;AACrE;AACA,sCAAsC,mFAAqB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4EAA0B;AACzD;AACA,uCAAuC,8DAA8D;AACrG,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,wCAAwC,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,oCAAoC;AAC3Q,4BAA4B,+DAAwB,EAAE,sFAAsF;AAC5I,QAAQ,+DAAwB,CAAC,yDAAW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AmC;AAC/F;AACA,KAAK,OAAO,wDAAU;AACtB;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,EAAE,EAAE,QAAQ,EAAE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,uEAAuE;AAC/I,6BAA6B,+DAAwB,EAAE,8HAA8H,wEAAiC,GAAG;AACzN,yDAAyD,mEAA4B;AACrF,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,4DAAc;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4DAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,iDAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,4CAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kDAAK;AACrC;AACA,uBAAuB,kDAAK;AAC5B;AACA;AACA;AACA;AACA,sBAAsB,4DAAI,KAAK,iEAAS;AACxC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mCAAmC;AACnE;AACA,qCAAqC,mFAAqB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kDAAK,kEAAkE,8DAAM;AAC5F,gDAAgD,8DAAM;AACtD,YAAY,+CAAE;AACd;AACA,QAAQ,2DAAG,2BAA2B,+EAAwB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kDAAK,CAAC,sDAAS,2BAA2B,sDAAS;AAClE,kBAAkB,8DAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAAM,KAAK,4EAAc;AACjD;AACA;AACA,6CAA6C,2DAAK;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,8DAAQ,gBAAgB,gEAAU;AAC7E,8CAA8C,yDAAG;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,4DAAI;AACzD,qEAAqE,2DAAG;AACxE;AACA;AACA,QAAQ,6DAAK;AACb;AACA,eAAe,kDAAK;AACpB;AACA;AACA;AACA,QAAQ,iEAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,QAAQ,4DAAI;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,6EAAc;AACvD;AACA;AACA;AACA,+BAA+B,mEAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,4DAAM,KAAK,4EAAc;AAChE,uCAAuC,8DAAQ,IAAI,4EAAc;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,2CAA2C,+BAA+B;AAC1E;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,mCAAmC,+BAA+B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kEAAa;AAChC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,0EAA0E;AACvF,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sFAAsF;AACnG,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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Ae,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,MAAM;AAClE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4DAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iBAAiB;AAC/C;AACA;AACA,4CAA4C,6BAA6B;AACzE,eAAe,+DAAwB,EAAE,0IAA0I;AACnL,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,2BAA2B,aAAa,gEAAyB,GAAG,2CAA2C,KAAK;AACtI;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,UAAU,OAAO,mDAAK,EAAE;AACxB;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,6BAA6B,2CAA2C;AACxE,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,8BAA8B;AAC5E,gBAAgB,+DAAwB,EAAE,6CAA6C;AACvF,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,oCAAoC;AAC9F,sBAAsB,+DAAwB,EAAE,yDAAyD;AACzG,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAc;AACrC;AACA;AACA;AACA,gDAAgD,+BAA+B;AAC/E,iBAAiB,+DAAwB,EAAE,iEAAiE,gEAAyB,GAAG,8CAA8C,KAAK;AAC3L,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,6BAA6B,8CAA8C;AAC3E,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAc;AACrC;AACA;AACA;AACA,gDAAgD,+BAA+B;AAC/E,iBAAiB,+DAAwB,EAAE,iEAAiE,gEAAyB,GAAG,8CAA8C,KAAK;AAC3L,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,6BAA6B,8CAA8C;AAC3E,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,yEAAU;AACzC;AACA;AACA;AACA;AACA,2CAA2C,4DAAc;AACzD;AACA;AACA;AACA;AACA;AACA,2BAA2B,4DAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iBAAiB;AACzD;AACA,gDAAgD,iBAAiB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yBAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iCAAiC;AAC/D;AACA,mCAAmC,mFAAqB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oCAAoC;AAC1D;AACA,qBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,oBAAoB;AACpG;AACA;AACA,kCAAkC,gEAAS;AAC3C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,sBAAsB,gEAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,gEAAS;AAChD;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,QAAQ,kDAAK;AACb;AACA;AACA,SAAS;AACT;AACA,wCAAwC,gEAAS;AACjD;AACA;AACA,SAAS;AACT;AACA,yCAAyC,gEAAS;AAClD;AACA;AACA,SAAS;AACT;AACA,kCAAkC,gEAAS;AAC3C;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sDAAS,kDAAkD,2DAAI;AAC/E;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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0BAA0B,8DAAuB,EAAE,2BAA2B;AAC9E,0BAA0B,8DAAuB,EAAE,kDAAkD,wCAAwC,EAAE;AAC/I,YAAY,4DAAY;AACxB,YAAY,sEAAe;AAC3B,YAAY,sEAAe;AAC3B,WAAW,sEAAe,GAAG;AAC7B,cAAc,oDAAoD,gEAAyB,sBAAsB,4BAA4B,0FAA0F,EAAE,wBAAwB,SAAS,4DAAY;AACtR,QAAQ,sEAAe;AACvB,QAAQ,sEAAe,EAAE,EAAE,wBAAwB,SAAS,sEAAe,mFAAmF,EAAE,EAAE,EAAE,EAAE;AACtK,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4DAAY;AAChC,oBAAoB,sEAAe;AACnC,oBAAoB,sEAAe;AACnC;AACA;AACA,oBAAoB,sEAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2W;;AAE3W,sC;;;;;;;;;;;;ACjiCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2P;AACtL;AACP;AACnB;AACmB;AACe;AAC3B;AACO;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACO;AACK;;AAEpD;AACA;AACA,uDAAuD,SAAS;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,IAAI;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,QAAQ;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,6DAAe;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,6DAAe;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,6DAAe;AAC5D;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAE;AACrB;AACA,kFAAkF,0DAAG,+CAA+C,0DAAG;AACvI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAE;AACrB;AACA;AACA;AACA,4DAA4D,0DAAG;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,iEAAU;AAChF,qDAAqD,6DAAe;AACpE;AACA;AACA,8DAA8D,IAAI,WAAW,YAAY;AACzF;AACA,uBAAuB,+CAAE;AACzB,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,qDAAQ,4BAA4B,0DAAG;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,0DAAG,uCAAuC,0DAAG;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAE;AACrB;AACA,4CAA4C,0DAAG;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,SAAS;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA,uBAAuB,+BAA+B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wBAAwB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,QAAQ;AAC/D;AACA,6CAA6C,6DAAe;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,wCAAwC,OAAO,+DAAQ,gDAAgD,4DAAK;AAC3J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,mCAAmC,sDAAe,CAAC,+DAAiB,MAAM,sDAAe,CAAC,sEAAmB,GAAG,sDAAe,CAAC,wDAAQ,MAAM,sDAAe,CAAC,0DAAmB,GAAG;AAChP,wBAAwB,wEAAkB,EAAE,8CAA8C,4BAA4B,8DAAQ,CAAC,+DAAU,MAAM,8DAAQ,CAAC,sEAAY,GAAG,8DAAQ,CAAC,wDAAQ,MAAM,8DAAQ,CAAC,0DAAY,GAAG,EAAE,8CAA8C;AACtQ;AACA,KAAK,OAAO,+DAAU,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAC1D,KAAK,OAAO,sEAAY,EAAE;AAC1B,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC9F,KAAK,OAAO,0DAAY;AACxB;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,UAAU,OAAO,+DAAiB;AACvD,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,GAAG,OAAO,sEAAmB,EAAE,GAAG;AAClD,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,GAAG,OAAO,0DAAmB,EAAE,EAAE,EAAE,QAAQ,EAAE;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sDAAQ,QAAQ,sDAAQ;AACrC,aAAa,sDAAQ,IAAI,+DAAU;AACnC,QAAQ,sEAAY;AACpB,QAAQ,0DAAY;AACpB,aAAa,sDAAQ,IAAI,wDAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,yEAAU;AACpC;AACA;AACA;AACA;AACA;AACA,8BAA8B,4DAAc;AAC5C;AACA;AACA,CAAC;AACD;AACA;AACA,sBAAsB,4DAAM,CAAC,wDAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,KAAK;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iDAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mFAAqB;AAC5C;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA,wDAAwD,SAAS,IAAI;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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A;AAAA;AAAA;AAAA;AAAA;AAAgG;AACqC;AACvE;AACW;AACF;AACK;AACyC;AACtF;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACQ;AACP;AACQ;AACC;AACK;AACvD,kCAAkC,2EAAmB;AACrD,8BAA8B,qBAAqB;AACnD,mCAAmC,sBAAsB;AACzD,8BAA8B,qBAAqB;AACnD,mCAAmC,sBAAsB;AACzD,uBAAuB,qBAAqB;AAC5C,4BAA4B,sBAAsB;AAClD,+BAA+B,qBAAqB;AACpD,oCAAoC,sBAAsB;AAC1D;AACA,oEAAoE,mEAAmE;AACvI,2BAA2B,+DAAwB,EAAE,mMAAmM,mQAAmQ,gDAAgD,wEAAiC,GAAG;AAC/kB;AACA,0BAA0B,OAAO,mDAAK,EAAE;AACxC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,mBAAmB,OAAO,mDAAK,2BAA2B;AAC1D,2BAA2B,OAAO,mDAAK,EAAE;AACzC;AACA,uDAAuD,mEAA4B;AACnF,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,UAAU;AACf,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,KAAK;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4DAAc;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,8EAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,eAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4CAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oFAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,iBAAiB;AAC/B,mBAAmB,+BAA+B;AAClD;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C,yBAAyB,kBAAkB,mFAAqB,QAAQ;AACxE;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,oFAAsB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,uCAAuC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C,yBAAyB,kBAAkB,mFAAqB,QAAQ;AACxE;AACA;AACA;AACA;AACA;AACA,aAAa;AACbwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,8DAAe,GAAG,+DAAwB,CAAC,wDAAgB,OAAO,+DAAwB,CAAC,qDAAa,MAAM,+DAAwB,CAAC,iEAAyB,MAAM,+DAAwB,CAAC,wEAAwB,GAAG,+DAAwB,gCAAgC,+DAAwB,CAAC,uEAAsB,GAAG,+DAAwB,CAAC,oDAAa,GAAG,+DAAwB,CAAC,2EAAc,MAAM;AAC1iB,gBAAgB,+DAAwB,EAAE,gVAAgV;AAC1X,QAAQ,wDAAiB,wDAAwD,gCA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vB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,wDAAiB;AACrB,IAAI,yDAAkB;AACtB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mEAAO;AAC1B,QAAQ,iEAAK,SAAS,iEAAK;AAC3B;AACA;AACA,SAAS;AACT,QAAQ,sEAAU,kBAAkB,iEAAK;AACzC,YAAY,iEAAK,6CAA6C,mEAAO,iBAAiB,iEAAK;AAC3F;AACA,aAAa;AACb,YAAY,mEAAO,qCAAqC,iEAAK,EAAE,wBAAwB;AACvF;AACA,QAAQ,sEAAU,cAAc,mEAAO,sBAAsB,iEAAK,EAAE,aAAa;AACjF;AACA;AACA;AACA;AACA;AACA,iBAAiB,mEAAO;AACxB;AACA;AACA,QAAQ,iEAAK,YAAY,iEAAK,EAAE,aAAa;AAC7C,QAAQ,sEAAU;AAClB,YAAY,iEAAK,EAAE,aAAa;AAChC,YAAY,mEAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4DAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4CAAO;AACpC;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,+BAA+B,kEAAc;AAC7C;AACA;AACA;AACA,+BAA+B,mEAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,kCAAkC,+DAAwB,CAAC,yDAAkB,GAAG,+DAAwB,CAAC,sEAA+B,GAAG,+DAAwB,CAAC,4DAAqB,GAAG,+DAAwB,CAAC,sDAAe,GAAG,+DAAwB,CAAC,8DAAuB,GAAG,+DAAwB,CAAC,wDAAQ,GAAG,+DAAwB,CAAC,+DAAwB,GAAG;AAC5a,sBAAsB,+DAAwB,EAAE,sFAAsF,gEAAyB,GAAG,yDAAyD,KAAK;AAChO;AACA,KAAK,OAAO,yDAAW,EAAE;AACzB,KAAK,OAAO,sEAAwB,EAAE;AACtC,KAAK,OAAO,4DAAc,EAAE;AAC5B,KAAK,OAAO,sDAAQ,EAAE;AACtB,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,OAAO,+DAAiB;AAC7B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,6BAA6B,yDAAyD;AACtF,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,yDAAkB,EAAE,GAAG,OAAO,sEAA+B,EAAE,GAAG,OAAO,4DAAqB,EAAE,GAAG,OAAO,sDAAe,EAAE,GAAG,OAAO,8DAAuB,EAAE,GAAG;AACvM,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,GAAG,OAAO,+DAAwB,EAAE,EAAE,EAAE,QAAQ,EAAE;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,4DAAc;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iFAAkB,CAAC,4EAAa;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4CAAO;AACnC;AACA,4BAA4B,4CAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,+BAA+B,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,wDAAQ,GAAG,+DAAwB,CAAC,8DAAmB,GAAG,+DAAwB,qBAAqB;AAChQ,mBAAmB,+DAAwB,EAAE,2KAA2K;AACxN,QAAQ,wDAAiB,iEAAiE,mCAAmC,EAAE,sEAAsE,gCAAgC,EAAE;AACvO,KAAK;AACL,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,qEAAqE,wCAAwC,wEAAiC,4MAA4M;AAC5W,QAAQ,6DAAsB;AAC9B,QAAQ,0DAAmB;AAC3B,QAAQ,uDAAgB;AACxB,KAAK;AACL,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,KAAK,EAAE,eAAe,gEAAgB,yCAAyC;AAC/E;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,OAAO,8DAAY,EAAE;AAC1B,KAAK,gCAAgC,OAAO,oDAAM,2BAA2B,GAAG,OAAO,sDAAQ,EAAE;AACjG;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,sBAAsB,OAAO,0DAAY,gCAAgC;AACzE,yBAAyB,OAAO,0DAAY,yBAAyB;AACrE;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iCAAiC,qEAAuB;AACxD,+BAA+B,+DAAiB;AAChD;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG;AAC5D,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,GAAG,OAAO,8DAAmB,EAAE,GAAG;AAClD,sBAAsB,oDAAM;AAC5B;AACA,aAAa;AACb,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,EAAE,EAAE,GAAG;AACvB,kBAAkB,mDAAK;AACvB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4DAAc;AACnD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,uDAAS;AACnD;AACA,gCAAgC,iDAAY;AAC5C;AACA;AACA;AACA;AACA;AACA,kCAAkC,4CAAO;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,eAAe;AACxD;AACA;AACA,qBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,6BAA6B;AACvD;AACA,+BAA+B,mFAAqB;AACpD;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA,4BAA4B,mFAAqB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wBAAwB;AAC7C,4BAA4B,2BAA2B;AACvD;AACA;AACA;AACA;AACA;AACA,+BAA+B,iEAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gEAAS,+BAA+B,gEAAS,UAAU,kDAAK;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gEAAS,+BAA+B,gEAAS,UAAU,kDAAK;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,iBAAiB,4DAAM;AACvB,qBAAqB,4EAAc;AACnC;AACA;AACA;AACA;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA,iBAAiB,iEAAW;AAC5B;AACA;AACA;AACA;AACA;AACA,gCAAgC,8DAAQ,gBAAgB,gEAAU;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,2DAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,UAAU;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gEAAS;AAC3B;AACA;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gCAAgC,MAAM,OAAO,QAAQ,SAAS,kBAAkB,oBAAoB;AACx3D,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,oDAAa,EAAE,GAAG;AACrF,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4DAAc;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6DAAO;AAClB;AACA;AACA;AACA;AACA;AACA,oCAAoC,8FAA+B,EAAE,gBAAgB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,iDAAY;AACvD,kCAAkC,iDAAY;AAC9C,sCAAsC,iDAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,kBAAkB;AAC1D;AACA;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,6DAAM,qCAAqC,2DAAI;AACzE;AACA,gBAAgB,gEAAS;AACzB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mEAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gDAAgD;AAC7D,aAAa,mFAAmF;AAChG;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,+CAAE;AAC3E,0EAA0E,6DAAM,+CAA+C,6DAAM,0BAA0B,+CAAE;AACjK,eAAe,kDAAK;AACpB;AACA;AACA;AACA,aAAa,yFAA+B;AAC5C;AACA;AACA;AACA;AACA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Q,uEAAU,cAAc,oEAAO;AACvC,QAAQ,uEAAU,cAAc,oEAAO,sBAAsB,kEAAK,EAAE,aAAa;AACjF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,4DAAc;AACrD;AACA;AACA;AACA;AACA;AACA,8BAA8B,4DAAc;AAC5C;AACA;AACA;AACA,WAAW,4DAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iFAAkB,CAAC,4EAAa,CAAC,4EAAa,CAAC,8EAAe;AAC1F;AACA;AACA;AACA;AACA;AACA,+BAA+B,4DAAc;AAC7C;AACA;AACA;AACA;AACA;AACA,8DAA8D,sCAAsC;AACpG,wBAAwB,+DAAwB,EAAE,yEAAyE,gEAAyB,GAAG,6DAA6D,KAAK;AACzN,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,6BAA6B,6DAA6D;AAC1F,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA,4BAA4B,6CAAO;AACnC;AACA;AACA;AACA,gCAAgC;AAChC;AACA,iCAAiC;AACjC,4CAA4C,eAAe;AAC3D;AACA;AACA;AACA,6CAA6C,6CAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,mDAAK;AAC3C;AACA;AACA,4CAA4C,iEAAS,WAAW,iEAAS,OAAO,mDAAK;AACrF;AACA;AACA,sBAAsB,4DAAI,KAAK,iEAAS;AACxC,SAAS;AACT;AACA,gCAAgC,0DAAY;AAC5C;AACA,oDAAoD,8DAAM,UAAU,2DAAG,QAAQ,EAAE;AACjF;AACA,oDAAoD,8DAAM,WAAW,2DAAG,QAAQ,EAAE;AAClF;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA,kCAAkC,qCAAqC;AACvE;AACA,uCAAuC,mFAAqB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,wCAAwC;AAC7E;AACA,0CAA0C,kFAAoB;AAC9D;AACA;AACA,cAAc,iBAAiB;AAC/B;AACA;AACA;AACA;AACA;AACA,mCAAmC,uEAAc;AACjD;AACA;AACA;AACA;AACA;AACA,kBAAkB,4EAAoB,IAAI,iEAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,kBAAkB,iEAAS;AAC3B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,0CAA0C,iEAAS;AACnD;AACA;AACA,SAAS;AACT,kCAAkC,iEAAS,QAAQ,iEAAS;AAC5D;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,4DAAI;AACvC;AACA;AACA,8EAA8E,sBAAsB;AACpG;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iEAAU,gBAAgB,+DAAQ;AACzE,wBAAwB,iEAAU,gBAAgB,kEAAW;AAC7D,sCAAsC,4DAAK,gBAAgB,4DAAK;AAChE;AACA;AACA,kDAAkD,6EAAc;AAChE;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iEAAU,gBAAgB,+DAAQ;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,4DAAK,gBAAgB,4DAAK;AACrE,aAAa,6EAAc;AAC3B;AACA;AACA;AACA,4DAA4D,wDAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,4DAAI;AAChD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8CAA8C,4BAA4B;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4EAA0B;AACzD;AACA;AACA;AACA;AACA;AACA,qCAAqC,iEAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qCAAqC,iEAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mCAAmC,mDAAK;AACxC,yCAAyC,iEAAS;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,QAAQ,mDAAK;AACb,kBAAkB,iEAAS;AAC3B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,4FAA6B;AACxD;AACA,6CAA6C,uFAAwB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgsBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,6BAA6B,+DAAwB,CAAC,oEAAoB,GAAG,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,CAAC,oDAAa,GAAG,+DAAwB,CAAC,wEAAwB,GAAG,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,gEAAqB,MAAM,+DAAwB,CAAC,sDAAa,MAAM,+DAAwB,CAAC,kEAAyB,MAAM,+DAAwB,CAAC,2EAAc,MAAM,+DAAwB,CAAC,yDAAgB,OAAO,+DAAwB,cAAc,+DAAwB,8BAA8B,+DAAwB,CAAC,+DAAoB,GAAG,+DAAwB,wBAAwB;AAC5uB,iBAAiB,+DAAwB,EAAE,qHAAqH;AAChK,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB,WAAW,gEAAS;AACjD,QAAQ,4DAAqB,WAAW,mEAAY;AACpD,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAA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,oCAAoC;AAC9F,uBAAuB,wEAAkB,EAAE,6CAA6C,6BAA6B,EAAE,6CAA6C;AACpK,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,eAAe,EAAE;;AAEtcAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,SAAS;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0BAA0B,GAAG,MAAM;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0BAA0B;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,4CAA4C;AACtH,+BAA+B,gEAAyB,EAAE,sEAAsE;AAChI,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;;AAE5C;AACA;AACA,wEAAwE,4DAAuB,GAAG,kDAAa;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC,0BAA0B,0DAAY;AACtC,+BAA+B,0DAAY;AAC3C,gCAAgC,0DAAY;AAC5C,6BAA6B,4CAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,cAAc;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAS;AACrB,sBAAsB,gEAAS,kBAAkB,gEAAS;AAC1D;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAK,CAAC,sDAAS,gCAAgC,gBAAgB,GAAG,sDAAS,+BAA+B,gBAAgB,QAAQ,gEAAS;AACvJ;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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AACjD;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,wFAAwF;AACpH;AACA;AACA;AACA;AACA;AACA,oBAAoB,wCAAwC;AAC5D;AACA,oBAAoB,oEAAoE;AACxuDAAuD;AACvD;AACA;AACA;AACA,wEAAwE,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,8DAA8D;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,kDAAK;AAC5C,YAAY,kDAAK;AACjB,sBAAsB,gEAAS;AAC/B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,kBAAkB,gEAAS,kBAAkB,gEAAS;AACtD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,qBAAqB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gEAAS,kBAAkB,0DAAG,4CAA4C,mEAAY,OAAO,6DAAM,sCAAsC,0DAAG;AAC9J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,0CAA0C,mHAAmH;AAC7J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,qCAAqC,+DAAwB,WAAW,+DAAwB,eAAe,+DAAwB,kBAAkB,+DAAwB,2BAA2B,+DA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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,8DAAuB,EAAE,uBAAuB;AACtE,sBAAsB,8DAAuB,EAAE,8CAA8C,oCAAoC,EAAE;AACnI,SAAS;AACT;AACA,YAAY,4DAAY;AACxB,YAAY;AACZ,cAAc,oDAAoD,gEAAyB,kBAAkB,4BAA4B,+ZAA+Z,EAAE,wBAAwB,SAAS,4DAAY,EAAE,EAAE,wBAAwB,+WAA+W,EAAE,EAAE,EAAE,EAAE;AAC1+B,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4DAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;;AAEA;AACA;AACA;;AAEkqB;;AAElqB,+C;;;;;;;;;;;;ACv8GA;AAAA;AAAA;AAAA;AAA2D;;AAEnB;AACxC;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,wDAAwD,mCAAmC;AAC3F,sBAAsB,0DAAmB,EAAE,mDAAmD;AAC9F,sBAAsB,gEAAyB,EAAE,oDAAoD;AACrG;AACA;AACA;AACA;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,kDAAI;AAClB;AACA;AACA;AACA,aAAa;AACb,KAAK;AACL,cAAc,wDAAU;AACxB,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA,2BAA2B,8DAAuB,EAAE,4BAA4B;AAChF,2BAA2B,8DAAuB,EAAE,mDAAmD,yCAAyC,EAAE,EAAE;AACpJ;AACA;AACA;AACA;AACA,cAAc,oDAAoD,gEAAyB,uBAAuB,0DAA0D,EAAE,EAAE;AAChL,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;;AAE8C;;AAE9C,6C;;;;;;;;;;;;ACzFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuH;AACxE;AACN;AACM;;AAEP;AACxC;AACA,aAAa,4DAAa;AAC1B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C,yBAAyB,sDAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sDAAU;AACvB;AACA;AACA;AACA,eAAe,sDAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","file":"modules-register-register-module.js","sourcesContent":["import { ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/common';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, Inject, Optional, SkipSelf, ElementRef, ApplicationRef, ComponentFactoryResolver, Injector, InjectionToken, Directive, EventEmitter, TemplateRef, ViewContainerRef, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, Subscription, merge } from 'rxjs';\nimport { take, takeUntil, takeWhile } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach() { }\n    /** Blocks page-level scroll while the attached overlay is open. */\n    enable() {\n        if (this._canBeEnabled()) {\n            const root = this._document.documentElement;\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /** Unblocks page-level scroll while the attached overlay is open. */\n    disable() {\n        if (this._isEnabled) {\n            const html = this._document.documentElement;\n            const body = this._document.body;\n            const htmlStyle = html.style;\n            const bodyStyle = body.style;\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n            bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n        }\n    }\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        const html = this._document.documentElement;\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        const body = this._document.body;\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /** Detaches the overlay ref and disables the scroll strategy. */\n        this._detach = () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run(() => this._overlayRef.detach());\n            }\n        };\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables the closing of the attached overlay on scroll. */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        const stream = this._scrollDispatcher.scrolled(0);\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe(() => {\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > this._config.threshold) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /** Disables the closing the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Scroll strategy that doesn't do anything. */\nclass NoopScrollStrategy {\n    /** Does nothing, as this scroll strategy is a no-op. */\n    enable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    disable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    attach() { }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jelbourn): move this to live with the rest of the scrolling code\n// TODO(jelbourn): someday replace this with IntersectionObservers\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is scrolled out of view\n * @docs-private\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some(containerBounds => {\n        const outsideAbove = element.bottom < containerBounds.top;\n        const outsideBelow = element.top > containerBounds.bottom;\n        const outsideLeft = element.right < containerBounds.left;\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    });\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is clipped\n * @docs-private\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some(scrollContainerRect => {\n        const clippedAbove = element.top < scrollContainerRect.top;\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        const clippedLeft = element.left < scrollContainerRect.left;\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables repositioning of the attached overlay on scroll. */\n    enable() {\n        if (!this._scrollSubscription) {\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(() => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run(() => this._overlayRef.detach());\n                    }\n                }\n            });\n        }\n    }\n    /** Disables repositioning of the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /** Do nothing on scroll. */\n        this.noop = () => new NoopScrollStrategy();\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config);\n        /** Block scrolling. */\n        this.block = () => new BlockScrollStrategy(this._viewportRuler, this._document);\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config);\n        this._document = document;\n    }\n}\nScrollStrategyOptions.ɵfac = function ScrollStrategyOptions_Factory(t) { return new (t || ScrollStrategyOptions)(ɵngcc0.ɵɵinject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\nScrollStrategyOptions.ɵprov = ɵɵdefineInjectable({ factory: function ScrollStrategyOptions_Factory() { return new ScrollStrategyOptions(ɵɵinject(ScrollDispatcher), ɵɵinject(ViewportRuler), ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: ScrollStrategyOptions, providedIn: \"root\" });\nScrollStrategyOptions.ctorParameters = () => [\n    { type: ScrollDispatcher },\n    { type: ViewportRuler },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollStrategyOptions, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Initial configuration used when creating an overlay. */\nclass OverlayConfig {\n    constructor(config) {\n        /** Strategy to be used when handling scroll events while the overlay is open. */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /** Custom class to add to the overlay pane. */\n        this.panelClass = '';\n        /** Whether the overlay has a backdrop. */\n        this.hasBackdrop = false;\n        /** Custom class to add to the backdrop */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            const configKeys = Object.keys(config);\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the posible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = config[key];\n                }\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The points of the origin element and the overlay element to connect. */\nclass ConnectionPositionPair {\n    constructor(origin, overlay, \n    /** Offset along the X axis. */\n    offsetX, \n    /** Offset along the Y axis. */\n    offsetY, \n    /** Class(es) to be applied to the panel while this position is active. */\n    panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  @docs-private\n */\nclass ScrollingVisibility {\n}\n/** The change event emitted by the strategy when a fallback position is used. */\nclass ConnectedOverlayPositionChange {\n    constructor(\n    /** The position used as a result of this change. */\n    connectionPair, \n    /** @docs-private */\n    scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\nConnectedOverlayPositionChange.ctorParameters = () => [\n    { type: ConnectionPositionPair },\n    { type: ScrollingVisibility, decorators: [{ type: Optional }] }\n];\n/**\n * Validates whether a vertical position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass BaseOverlayDispatcher {\n    constructor(document) {\n        /** Currently attached overlays in the order they were attached. */\n        this._attachedOverlays = [];\n        this._document = document;\n    }\n    ngOnDestroy() {\n        this.detach();\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        this._attachedOverlays.push(overlayRef);\n    }\n    /** Remove an overlay from the list of attached overlay refs. */\n    remove(overlayRef) {\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this.detach();\n        }\n    }\n}\nBaseOverlayDispatcher.ɵfac = function BaseOverlayDispatcher_Factory(t) { return new (t || BaseOverlayDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nBaseOverlayDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function BaseOverlayDispatcher_Factory() { return new BaseOverlayDispatcher(ɵɵinject(DOCUMENT)); }, token: BaseOverlayDispatcher, providedIn: \"root\" });\nBaseOverlayDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BaseOverlayDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher extends BaseOverlayDispatcher {\n    constructor(document) {\n        super(document);\n        /** Keyboard event listener that will be attached to the body. */\n        this._keydownListener = (event) => {\n            const overlays = this._attachedOverlays;\n            for (let i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEvents.observers.length > 0) {\n                    overlays[i]._keydownEvents.next(event);\n                    break;\n                }\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            this._document.body.addEventListener('keydown', this._keydownListener);\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    }\n}\nOverlayKeyboardDispatcher.ɵfac = function OverlayKeyboardDispatcher_Factory(t) { return new (t || OverlayKeyboardDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nOverlayKeyboardDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function OverlayKeyboardDispatcher_Factory() { return new OverlayKeyboardDispatcher(ɵɵinject(DOCUMENT)); }, token: OverlayKeyboardDispatcher, providedIn: \"root\" });\nOverlayKeyboardDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayKeyboardDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nfunction OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY(dispatcher, _document) {\n    return dispatcher || new OverlayKeyboardDispatcher(_document);\n}\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nconst OVERLAY_KEYBOARD_DISPATCHER_PROVIDER = {\n    // If there is already an OverlayKeyboardDispatcher available, use that.\n    // Otherwise, provide a new one.\n    provide: OverlayKeyboardDispatcher,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayKeyboardDispatcher],\n        // Coerce to `InjectionToken` so that the `deps` match the \"shape\"\n        // of the type expected by Angular\n        DOCUMENT\n    ],\n    useFactory: OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching mouse click events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayOutsideClickDispatcher extends BaseOverlayDispatcher {\n    constructor(document, _platform) {\n        super(document);\n        this._platform = _platform;\n        this._cursorStyleIsSet = false;\n        /** Click event listener that will be attached to the body propagate phase. */\n        this._clickListener = (event) => {\n            // Get the target through the `composedPath` if possible to account for shadow DOM.\n            const target = event.composedPath ? event.composedPath()[0] : event.target;\n            // We copy the array because the original may be modified asynchronously if the\n            // outsidePointerEvents listener decides to detach overlays resulting in index errors inside\n            // the for loop.\n            const overlays = this._attachedOverlays.slice();\n            // Dispatch the mouse event to the top overlay which has subscribers to its mouse events.\n            // We want to target all overlays for which the click could be considered as outside click.\n            // As soon as we reach an overlay for which the click is not outside click we break off\n            // the loop.\n            for (let i = overlays.length - 1; i > -1; i--) {\n                const overlayRef = overlays[i];\n                if (overlayRef._outsidePointerEvents.observers.length < 1 || !overlayRef.hasAttached()) {\n                    continue;\n                }\n                // If it's a click inside the overlay, just break - we should do nothing\n                // If it's an outside click dispatch the mouse event, and proceed with the next overlay\n                if (overlayRef.overlayElement.contains(target)) {\n                    break;\n                }\n                overlayRef._outsidePointerEvents.next(event);\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // tslint:disable: max-line-length\n        // Safari on iOS does not generate click events for non-interactive\n        // elements. However, we want to receive a click for any element outside\n        // the overlay. We can force a \"clickable\" state by setting\n        // `cursor: pointer` on the document body.\n        // See https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event#Safari_Mobile\n        // and https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\n        // tslint:enable: max-line-length\n        if (!this._isAttached) {\n            this._document.body.addEventListener('click', this._clickListener, true);\n            this._document.body.addEventListener('contextmenu', this._clickListener, true);\n            // click event is not fired on iOS. To make element \"clickable\" we are\n            // setting the cursor to pointer\n            if (this._platform.IOS && !this._cursorStyleIsSet) {\n                this._cursorOriginalValue = this._document.body.style.cursor;\n                this._document.body.style.cursor = 'pointer';\n                this._cursorStyleIsSet = true;\n            }\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('click', this._clickListener, true);\n            this._document.body.removeEventListener('contextmenu', this._clickListener, true);\n            if (this._platform.IOS && this._cursorStyleIsSet) {\n                this._document.body.style.cursor = this._cursorOriginalValue;\n                this._cursorStyleIsSet = false;\n            }\n            this._isAttached = false;\n        }\n    }\n}\nOverlayOutsideClickDispatcher.ɵfac = function OverlayOutsideClickDispatcher_Factory(t) { return new (t || OverlayOutsideClickDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nOverlayOutsideClickDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function OverlayOutsideClickDispatcher_Factory() { return new OverlayOutsideClickDispatcher(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: OverlayOutsideClickDispatcher, providedIn: \"root\" });\nOverlayOutsideClickDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayOutsideClickDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Whether we're in a testing environment.\n * TODO(crisbeto): remove this once we have an overlay testing module.\n */\nconst isTestEnvironment = typeof window !== 'undefined' && !!window &&\n    !!(window.__karma__ || window.jasmine);\n/** Container inside which all overlays will render. */\nclass OverlayContainer {\n    constructor(document, \n    /**\n     * @deprecated `platform` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    _platform) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    ngOnDestroy() {\n        const container = this._containerElement;\n        if (container && container.parentNode) {\n            container.parentNode.removeChild(container);\n        }\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    _createContainer() {\n        // @breaking-change 10.0.0 Remove null check for `_platform`.\n        const isBrowser = this._platform ? this._platform.isBrowser : typeof window !== 'undefined';\n        const containerClass = 'cdk-overlay-container';\n        if (isBrowser || isTestEnvironment) {\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` +\n                `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                oppositePlatformContainers[i].parentNode.removeChild(oppositePlatformContainers[i]);\n            }\n        }\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (isTestEnvironment) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n}\nOverlayContainer.ɵfac = function OverlayContainer_Factory(t) { return new (t || OverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nOverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function OverlayContainer_Factory() { return new OverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: OverlayContainer, providedIn: \"root\" });\nOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nfunction OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer, _document) {\n    return parentContainer || new OverlayContainer(_document);\n}\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nconst OVERLAY_CONTAINER_PROVIDER = {\n    // If there is already an OverlayContainer available, use that. Otherwise, provide a new one.\n    provide: OverlayContainer,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayContainer],\n        DOCUMENT // We need to use the InjectionToken somewhere to keep TS happy\n    ],\n    useFactory: OVERLAY_CONTAINER_PROVIDER_FACTORY\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, \n    // @breaking-change 8.0.0 `_location` parameter to be made required.\n    _location, \n    // @breaking-change 9.0.0 `_mouseClickDispatcher` parameter to be made required.\n    _outsideClickDispatcher) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (event) => this._backdropClick.next(event);\n        /** Stream of keydown events dispatched to this overlay. */\n        this._keydownEvents = new Subject();\n        /** Stream of mouse outside events dispatched to this overlay. */\n        this._outsidePointerEvents = new Subject();\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /** The overlay's HTML element */\n    get overlayElement() {\n        return this._pane;\n    }\n    /** The overlay's backdrop HTML element. */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param portal Portal instance to which to attach the overlay.\n     * @returns The portal attachment result.\n     */\n    attach(portal) {\n        let attachResult = this._portalOutlet.attach(portal);\n        // Update the pane element with the given configuration.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable\n            .pipe(take(1))\n            .subscribe(() => {\n            // The overlay could've been detached before the zone has stabilized.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        });\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        // @breaking-change 8.0.0 remove the null check for `_location`\n        // once the constructor parameter is made required.\n        if (this._config.disposeOnNavigation && this._location) {\n            this._locationChanges = this._location.subscribe(() => this.dispose());\n        }\n        // @breaking-change 9.0.0 remove the null check for `_mouseClickDispatcher`\n        if (this._outsideClickDispatcher) {\n            this._outsideClickDispatcher.add(this);\n        }\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @returns The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        // Stop listening for location changes.\n        this._locationChanges.unsubscribe();\n        // @breaking-change 9.0.0 remove the null check for `_outsideClickDispatcher`\n        if (this._outsideClickDispatcher) {\n            this._outsideClickDispatcher.remove(this);\n        }\n        return detachmentResult;\n    }\n    /** Cleans up the overlay from the DOM. */\n    dispose() {\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this.detachBackdrop();\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        this._outsidePointerEvents.complete();\n        // @breaking-change 9.0.0 remove the null check for `_outsideClickDispatcher`\n        if (this._outsideClickDispatcher) {\n            this._outsideClickDispatcher.remove(this);\n        }\n        if (this._host && this._host.parentNode) {\n            this._host.parentNode.removeChild(this._host);\n            this._host = null;\n        }\n        this._previousHostParent = this._pane = null;\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    }\n    /** Whether the overlay has attached content. */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /** Gets an observable that emits when the backdrop has been clicked. */\n    backdropClick() {\n        return this._backdropClick;\n    }\n    /** Gets an observable that emits when the overlay has been attached. */\n    attachments() {\n        return this._attachments;\n    }\n    /** Gets an observable that emits when the overlay has been detached. */\n    detachments() {\n        return this._detachments;\n    }\n    /** Gets an observable of keydown events targeted to this overlay. */\n    keydownEvents() {\n        return this._keydownEvents;\n    }\n    /** Gets an observable of pointer events targeted outside this overlay. */\n    outsidePointerEvents() {\n        return this._outsidePointerEvents;\n    }\n    /** Gets the current overlay configuration, which is immutable. */\n    getConfig() {\n        return this._config;\n    }\n    /** Updates the position of the overlay based on the position strategy. */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /** Switches to a new position strategy and updates the overlay position. */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /** Update the size properties of the overlay. */\n    updateSize(sizeConfig) {\n        this._config = Object.assign(Object.assign({}, this._config), sizeConfig);\n        this._updateElementSize();\n    }\n    /** Sets the LTR/RTL direction for the overlay. */\n    setDirection(dir) {\n        this._config = Object.assign(Object.assign({}, this._config), { direction: dir });\n        this._updateElementDirection();\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     */\n    getDirection() {\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /** Switches to a new scroll strategy. */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /** Updates the text direction of the overlay panel. */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /** Updates the size of the overlay element based on the overlay config. */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /** Toggles the pointer events for the overlay pane element. */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? 'auto' : 'none';\n    }\n    /** Attaches a backdrop for this overlay. */\n    _attachBackdrop() {\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        this._host.parentElement.insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                });\n            });\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            this._host.parentNode.appendChild(this._host);\n        }\n    }\n    /** Detaches the backdrop (if any) associated with the overlay. */\n    detachBackdrop() {\n        let backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        let timeoutId;\n        let finishDetach = () => {\n            // It may not be attached to anything in certain cases (e.g. unit tests).\n            if (backdropToDetach) {\n                backdropToDetach.removeEventListener('click', this._backdropClickHandler);\n                backdropToDetach.removeEventListener('transitionend', finishDetach);\n                if (backdropToDetach.parentNode) {\n                    backdropToDetach.parentNode.removeChild(backdropToDetach);\n                }\n            }\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement == backdropToDetach) {\n                this._backdropElement = null;\n            }\n            if (this._config.backdropClass) {\n                this._toggleClasses(backdropToDetach, this._config.backdropClass, false);\n            }\n            clearTimeout(timeoutId);\n        };\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular(() => {\n            backdropToDetach.addEventListener('transitionend', finishDetach);\n        });\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        timeoutId = this._ngZone.runOutsideAngular(() => setTimeout(finishDetach, 500));\n    }\n    /** Toggles a single CSS class or an array of classes on an element. */\n    _toggleClasses(element, cssClasses, isAdd) {\n        const classList = element.classList;\n        coerceArray(cssClasses).forEach(cssClass => {\n            // We can't do a spread here, because IE doesn't support setting multiple classes.\n            // Also trying to add an empty string to a DOMTokenList will throw.\n            if (cssClass) {\n                isAdd ? classList.add(cssClass) : classList.remove(cssClass);\n            }\n        });\n    }\n    /** Detaches the overlay content next time the zone stabilizes. */\n    _detachContentWhenStable() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular(() => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            const subscription = this._ngZone.onStable\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe(() => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._previousHostParent.removeChild(this._host);\n                    }\n                    subscription.unsubscribe();\n                }\n            });\n        });\n    }\n    /** Disposes of a scroll strategy. */\n    _disposeScrollStrategy() {\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/** Class to be added to the overlay bounding box. */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /** Last size used for the bounding box. Used to avoid resizing the overlay after open. */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /** Whether the overlay was pushed in a previous positioning. */\n        this._isPushed = false;\n        /** Whether the overlay can be pushed on-screen on the initial open. */\n        this._canPush = true;\n        /** Whether the overlay can grow via flexible width/height after the initial open. */\n        this._growAfterOpen = false;\n        /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n        this._hasFlexibleDimensions = true;\n        /** Whether the overlay position is locked. */\n        this._positionLocked = false;\n        /** Amount of space that must be maintained between the overlay and the edge of the viewport. */\n        this._viewportMargin = 0;\n        /** The Scrollable containers used to check scrollable view properties on position change. */\n        this._scrollables = [];\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        /** Subject that emits whenever the position changes. */\n        this._positionChanges = new Subject();\n        /** Subscription to viewport size changes. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Default offset for the overlay along the x axis. */\n        this._offsetX = 0;\n        /** Default offset for the overlay along the y axis. */\n        this._offsetY = 0;\n        /** Keeps track of the CSS classes that the position strategy has applied on the overlay panel. */\n        this._appliedPanelClasses = [];\n        /** Observable sequence of position changes. */\n        this.positionChanges = this._positionChanges;\n        this.setOrigin(connectedTo);\n    }\n    /** Ordered list of preferred positions, from most to least desirable. */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /** Attaches this position strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && overlayRef !== this._overlayRef &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe(() => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        });\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * @docs-private\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin and the overlay to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        const originRect = this._originRect;\n        const overlayRect = this._overlayRect;\n        const viewportRect = this._viewportRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            let originPoint = this._getOriginPoint(originRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos)\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            let bestFit = null;\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition(bestFit.position, bestFit.origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition(fallback.position, fallback.originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition(fallback.position, fallback.originPoint);\n    }\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /** Cleanup after the element gets destroyed. */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, {\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            });\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = null;\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    reapplyLastPosition() {\n        if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            const lastPosition = this._lastPosition || this._preferredPositions[0];\n            const originPoint = this._getOriginPoint(this._originRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    withScrollableContainers(scrollables) {\n        this._scrollables = scrollables;\n        return this;\n    }\n    /**\n     * Adds new preferred positions.\n     * @param positions List of positions options for this overlay.\n     */\n    withPositions(positions) {\n        this._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf(this._lastPosition) === -1) {\n            this._lastPosition = null;\n        }\n        this._validatePositions();\n        return this;\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @param margin Required margin between the overlay and the viewport edge in pixels.\n     */\n    withViewportMargin(margin) {\n        this._viewportMargin = margin;\n        return this;\n    }\n    /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        this._hasFlexibleDimensions = flexibleDimensions;\n        return this;\n    }\n    /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n    withGrowAfterOpen(growAfterOpen = true) {\n        this._growAfterOpen = growAfterOpen;\n        return this;\n    }\n    /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    withPush(canPush = true) {\n        this._canPush = canPush;\n        return this;\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    withLockedPosition(isLocked = true) {\n        this._positionLocked = isLocked;\n        return this;\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @param origin Reference to the new origin.\n     */\n    setOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @param offset New offset in the X axis.\n     */\n    withDefaultOffsetX(offset) {\n        this._offsetX = offset;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @param offset New offset in the Y axis.\n     */\n    withDefaultOffsetY(offset) {\n        this._offsetY = offset;\n        return this;\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @param selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     */\n    withTransformOriginOn(selector) {\n        this._transformOriginSelector = selector;\n        return this;\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     */\n    _getOriginPoint(originRect, pos) {\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + (originRect.width / 2);\n        }\n        else {\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + (originRect.height / 2);\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /** Gets how well an overlay at the given point will fit within the viewport. */\n    _getOverlayFit(point, overlay, viewport, position) {\n        let { x, y } = point;\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        let leftOverflow = 0 - x;\n        let rightOverflow = (x + overlay.width) - viewport.width;\n        let topOverflow = 0 - y;\n        let bottomOverflow = (y + overlay.height) - viewport.height;\n        // Visible parts of the element on each axis.\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: (overlay.width * overlay.height) === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @param fit How well the overlay fits in the viewport at some position.\n     * @param point The (x, y) coordinates of the overlat at some position.\n     * @param viewport The geometry of the viewport.\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            const availableHeight = viewport.bottom - point.y;\n            const availableWidth = viewport.right - point.x;\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            const verticalFit = fit.fitsInViewportVertically ||\n                (minHeight != null && minHeight <= availableHeight);\n            const horizontalFit = fit.fitsInViewportHorizontally ||\n                (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n     * right and bottom).\n     *\n     * @param start Starting point from which the overlay is pushed.\n     * @param overlay Dimensions of the overlay.\n     * @param scrollPosition Current viewport scroll position.\n     * @returns The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, overlay, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y\n            };\n        }\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        const overflowRight = Math.max(start.x + overlay.width - viewport.width, 0);\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.height, 0);\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        let pushX = 0;\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? (viewport.left - scrollPosition.left) - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? (viewport.top - scrollPosition.top) - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @param position The position preference\n     * @param originPoint The point on the origin element where the overlay is connected.\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculcations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            const scrollableViewProperties = this._getScrollVisibility();\n            const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    }\n    /** Sets the transform origin based on the configured selector and the passed-in position.  */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        const elements = this._boundingBox.querySelectorAll(this._transformOriginSelector);\n        let xOrigin;\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        const viewport = this._viewportRect;\n        const isRtl = this._isRtl();\n        let height, top, bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - (previousHeight / 2);\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) ||\n            (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) ||\n            (position.overlayX === 'start' && isRtl);\n        let width, left, right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - (previousWidth / 2);\n            }\n        }\n        return { top: top, left: left, bottom: bottom, right: right, width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stetches to the bounds of the viewport.\n     *\n     * @param origin The point on the origin element where the overlay is connected.\n     * @param position The position preference\n     */\n    _setBoundingBoxStyles(origin, position) {\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        const styles = {};\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles(this._boundingBox.style, styles);\n    }\n    /** Resets the styles for the bounding box so that a new positioning can be computed. */\n    _resetBoundingBoxStyles() {\n        extendStyles(this._boundingBox.style, {\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        });\n    }\n    /** Resets the styles for the overlay pane so that a new positioning can be computed. */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, {\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        });\n    }\n    /** Sets positioning styles to the overlay element. */\n    _setOverlayElementStyles(originPoint, position) {\n        const styles = {};\n        const hasExactPosition = this._hasExactPosition();\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        let transformString = '';\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /** Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        let styles = { top: '', bottom: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        let virtualKeyboardOffset = this._overlayContainer.getContainerElement().getBoundingClientRect().top;\n        // Normally this would be zero, however when the overlay is attached to an input (e.g. in an\n        // autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        overlayPoint.y -= virtualKeyboardOffset;\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            const documentHeight = this._document.documentElement.clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /** Gets the exact left/right for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        let styles = { left: '', right: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            const documentWidth = this._document.documentElement.clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        const originBounds = this._getOriginRect();\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        const scrollContainerBounds = this._scrollables.map(scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        });\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /** Subtracts the amount that an element is overflowing on an axis from its length. */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }, length);\n    }\n    /** Narrows the given viewport rect by the current _viewportMargin. */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        const width = this._document.documentElement.clientWidth;\n        const height = this._document.documentElement.clientHeight;\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - (2 * this._viewportMargin),\n            height: height - (2 * this._viewportMargin),\n        };\n    }\n    /** Whether the we're dealing with an RTL context */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /** Determines whether the overlay uses exact or flexible positioning. */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /** Retrieves the offset of a position along the x or y axis. */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /** Validates that the current position match the expected values. */\n    _validatePositions() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._preferredPositions.length) {\n                throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n            }\n            // TODO(crisbeto): remove these once Angular's template type\n            // checking is advanced enough to catch these cases.\n            this._preferredPositions.forEach(pair => {\n                validateHorizontalPosition('originX', pair.originX);\n                validateVerticalPosition('originY', pair.originY);\n                validateHorizontalPosition('overlayX', pair.overlayX);\n                validateVerticalPosition('overlayY', pair.overlayY);\n            });\n        }\n    }\n    /** Adds a single CSS class or an array of classes on the overlay panel. */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach(cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            });\n        }\n    }\n    /** Clears the classes that the position strategy has applied from the overlay panel. */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach(cssClass => {\n                this._pane.classList.remove(cssClass);\n            });\n            this._appliedPanelClasses = [];\n        }\n    }\n    /** Returns the ClientRect of the current origin. */\n    _getOriginRect() {\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        const width = origin.width || 0;\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width\n        };\n    }\n}\n/** Shallow-extends a stylesheet object with another stylesheet object. */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return (!units || units === 'px') ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative to some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n * @deprecated Use `FlexibleConnectedPositionStrategy` instead.\n * @breaking-change 8.0.0\n */\nclass ConnectedPositionStrategy {\n    constructor(originPos, overlayPos, connectedTo, viewportRuler, document, platform, overlayContainer) {\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        // Since the `ConnectedPositionStrategy` is deprecated and we don't want to maintain\n        // the extra logic, we create an instance of the positioning strategy that has some\n        // defaults that make it behave as the old position strategy and to which we'll\n        // proxy all of the API calls.\n        this._positionStrategy = new FlexibleConnectedPositionStrategy(connectedTo, viewportRuler, document, platform, overlayContainer)\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withViewportMargin(0);\n        this.withFallbackPosition(originPos, overlayPos);\n        this.onPositionChange = this._positionStrategy.positionChanges;\n    }\n    /** Ordered list of preferred positions, from most to least desirable. */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /** Attach this position strategy to an overlay. */\n    attach(overlayRef) {\n        this._overlayRef = overlayRef;\n        this._positionStrategy.attach(overlayRef);\n        if (this._direction) {\n            overlayRef.setDirection(this._direction);\n            this._direction = null;\n        }\n    }\n    /** Disposes all resources used by the position strategy. */\n    dispose() {\n        this._positionStrategy.dispose();\n    }\n    /** @docs-private */\n    detach() {\n        this._positionStrategy.detach();\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * @docs-private\n     */\n    apply() {\n        this._positionStrategy.apply();\n    }\n    /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    recalculateLastPosition() {\n        this._positionStrategy.reapplyLastPosition();\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    withScrollableContainers(scrollables) {\n        this._positionStrategy.withScrollableContainers(scrollables);\n    }\n    /**\n     * Adds a new preferred fallback position.\n     * @param originPos\n     * @param overlayPos\n     */\n    withFallbackPosition(originPos, overlayPos, offsetX, offsetY) {\n        const position = new ConnectionPositionPair(originPos, overlayPos, offsetX, offsetY);\n        this._preferredPositions.push(position);\n        this._positionStrategy.withPositions(this._preferredPositions);\n        return this;\n    }\n    /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @param dir New layout direction.\n     */\n    withDirection(dir) {\n        // Since the direction might be declared before the strategy is attached,\n        // we save the value in a temporary property and we'll transfer it to the\n        // overlay ref on attachment.\n        if (this._overlayRef) {\n            this._overlayRef.setDirection(dir);\n        }\n        else {\n            this._direction = dir;\n        }\n        return this;\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @param offset New offset in the X axis.\n     */\n    withOffsetX(offset) {\n        this._positionStrategy.withDefaultOffsetX(offset);\n        return this;\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @param  offset New offset in the Y axis.\n     */\n    withOffsetY(offset) {\n        this._positionStrategy.withDefaultOffsetY(offset);\n        return this;\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    withLockedPosition(isLocked) {\n        this._positionStrategy.withLockedPosition(isLocked);\n        return this;\n    }\n    /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @param positions Position pairs to be set on the strategy.\n     */\n    withPositions(positions) {\n        this._preferredPositions = positions.slice();\n        this._positionStrategy.withPositions(this._preferredPositions);\n        return this;\n    }\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @param origin Reference to the new origin element.\n     */\n    setOrigin(origin) {\n        this._positionStrategy.setOrigin(origin);\n        return this;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Class to be added to the overlay pane wrapper. */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._leftOffset = '';\n        this._rightOffset = '';\n        this._alignItems = '';\n        this._justifyContent = '';\n        this._width = '';\n        this._height = '';\n    }\n    attach(overlayRef) {\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param value New top offset.\n     */\n    top(value = '') {\n        this._bottomOffset = '';\n        this._topOffset = value;\n        this._alignItems = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param value New left offset.\n     */\n    left(value = '') {\n        this._rightOffset = '';\n        this._leftOffset = value;\n        this._justifyContent = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param value New bottom offset.\n     */\n    bottom(value = '') {\n        this._topOffset = '';\n        this._bottomOffset = value;\n        this._alignItems = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param value New right offset.\n     */\n    right(value = '') {\n        this._leftOffset = '';\n        this._rightOffset = value;\n        this._justifyContent = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @param value New width for the overlay\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    width(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ width: value });\n        }\n        else {\n            this._width = value;\n        }\n        return this;\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @param value New height for the overlay\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    height(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ height: value });\n        }\n        else {\n            this._height = value;\n        }\n        return this;\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param offset Overlay offset from the horizontal center.\n     */\n    centerHorizontally(offset = '') {\n        this.left(offset);\n        this._justifyContent = 'center';\n        return this;\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param offset Overlay offset from the vertical center.\n     */\n    centerVertically(offset = '') {\n        this.top(offset);\n        this._alignItems = 'center';\n        return this;\n    }\n    /**\n     * Apply the position to the element.\n     * @docs-private\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parentStyles = this._overlayRef.hostElement.style;\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : this._leftOffset;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = this._rightOffset;\n        if (shouldBeFlushHorizontally) {\n            parentStyles.justifyContent = 'flex-start';\n        }\n        else if (this._justifyContent === 'center') {\n            parentStyles.justifyContent = 'center';\n        }\n        else if (this._overlayRef.getConfig().direction === 'rtl') {\n            // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\n            // don't want that because our positioning is explicitly `left` and `right`, hence\n            // why we do another inversion to ensure that the overlay stays in the same position.\n            // TODO: reconsider this if we add `start` and `end` methods.\n            if (this._justifyContent === 'flex-start') {\n                parentStyles.justifyContent = 'flex-end';\n            }\n            else if (this._justifyContent === 'flex-end') {\n                parentStyles.justifyContent = 'flex-start';\n            }\n        }\n        else {\n            parentStyles.justifyContent = this._justifyContent;\n        }\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * @docs-private\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parent = this._overlayRef.hostElement;\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent = parentStyles.alignItems = styles.marginTop =\n            styles.marginBottom = styles.marginLeft = styles.marginRight = styles.position = '';\n        this._overlayRef = null;\n        this._isDisposed = true;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Builder for overlay position strategy. */\nclass OverlayPositionBuilder {\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     */\n    global() {\n        return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a relative position strategy.\n     * @param elementRef\n     * @param originPos\n     * @param overlayPos\n     * @deprecated Use `flexibleConnectedTo` instead.\n     * @breaking-change 8.0.0\n     */\n    connectedTo(elementRef, originPos, overlayPos) {\n        return new ConnectedPositionStrategy(originPos, overlayPos, elementRef, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param origin Origin relative to which to position the overlay.\n     */\n    flexibleConnectedTo(origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n}\nOverlayPositionBuilder.ɵfac = function OverlayPositionBuilder_Factory(t) { return new (t || OverlayPositionBuilder)(ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform), ɵngcc0.ɵɵinject(OverlayContainer)); };\nOverlayPositionBuilder.ɵprov = ɵɵdefineInjectable({ factory: function OverlayPositionBuilder_Factory() { return new OverlayPositionBuilder(ɵɵinject(ViewportRuler), ɵɵinject(DOCUMENT), ɵɵinject(Platform), ɵɵinject(OverlayContainer)); }, token: OverlayPositionBuilder, providedIn: \"root\" });\nOverlayPositionBuilder.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform },\n    { type: OverlayContainer }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayPositionBuilder, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }, { type: OverlayContainer }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Next overlay unique ID. */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    constructor(\n    /** Scrolling strategies that can be used when creating an overlay. */\n    scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, \n    // @breaking-change 8.0.0 `_location` parameter to be made required.\n    _location, \n    // @breaking-change 9.0.0 `_outsideClickDispatcher` parameter to be made required.\n    _outsideClickDispatcher) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n    }\n    /**\n     * Creates an overlay.\n     * @param config Configuration applied to the overlay.\n     * @returns Reference to the created overlay.\n     */\n    create(config) {\n        const host = this._createHostElement();\n        const pane = this._createPaneElement(host);\n        const portalOutlet = this._createPortalOutlet(pane);\n        const overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location, this._outsideClickDispatcher);\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @returns An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Newly-created pane element\n     */\n    _createPaneElement(host) {\n        const pane = this._document.createElement('div');\n        pane.id = `cdk-overlay-${nextUniqueId++}`;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @returns Newly-create host element.\n     */\n    _createHostElement() {\n        const host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal outlet.\n     * @returns A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    }\n}\nOverlay.ɵfac = function Overlay_Factory(t) { return new (t || Overlay)(ɵngcc0.ɵɵinject(ScrollStrategyOptions), ɵngcc0.ɵɵinject(OverlayContainer), ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(OverlayPositionBuilder), ɵngcc0.ɵɵinject(OverlayKeyboardDispatcher), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc3.Directionality), ɵngcc0.ɵɵinject(ɵngcc4.Location), ɵngcc0.ɵɵinject(OverlayOutsideClickDispatcher)); };\nOverlay.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Overlay, factory: Overlay.ɵfac });\nOverlay.ctorParameters = () => [\n    { type: ScrollStrategyOptions },\n    { type: OverlayContainer },\n    { type: ComponentFactoryResolver },\n    { type: OverlayPositionBuilder },\n    { type: OverlayKeyboardDispatcher },\n    { type: Injector },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Directionality },\n    { type: Location },\n    { type: OverlayOutsideClickDispatcher }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Overlay, [{\n        type: Injectable\n    }], function () { return [{ type: ScrollStrategyOptions }, { type: OverlayContainer }, { type: ɵngcc0.ComponentFactoryResolver }, { type: OverlayPositionBuilder }, { type: OverlayKeyboardDispatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc3.Directionality }, { type: ɵngcc4.Location }, { type: OverlayOutsideClickDispatcher }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    }\n];\n/** Injection token that determines the scroll handling while the connected overlay is open. */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (config) => overlay.scrollStrategies.reposition(config);\n}\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nCdkOverlayOrigin.ɵfac = function CdkOverlayOrigin_Factory(t) { return new (t || CdkOverlayOrigin)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkOverlayOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkOverlayOrigin, selectors: [[\"\", \"cdk-overlay-origin\", \"\"], [\"\", \"overlay-origin\", \"\"], [\"\", \"cdkOverlayOrigin\", \"\"]], exportAs: [\"cdkOverlayOrigin\"] });\nCdkOverlayOrigin.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkOverlayOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                exportAs: 'cdkOverlayOrigin'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._growAfterOpen = false;\n        this._flexibleDimensions = false;\n        this._push = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        this._attachSubscription = Subscription.EMPTY;\n        this._detachSubscription = Subscription.EMPTY;\n        this._positionSubscription = Subscription.EMPTY;\n        /** Margin between the overlay and the viewport edges. */\n        this.viewportMargin = 0;\n        /** Whether the overlay is open. */\n        this.open = false;\n        /** Event emitted when the backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Event emitted when the position has changed. */\n        this.positionChange = new EventEmitter();\n        /** Event emitted when the overlay has been attached. */\n        this.attach = new EventEmitter();\n        /** Event emitted when the overlay has been detached. */\n        this.detach = new EventEmitter();\n        /** Emits when there are keyboard events that are targeted at the overlay. */\n        this.overlayKeydown = new EventEmitter();\n        /** Emits when there are mouse outside click events that are targeted at the overlay. */\n        this.overlayOutsideClick = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /** The offset in pixels for the overlay connection point on the x-axis */\n    get offsetX() { return this._offsetX; }\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** The offset in pixels for the overlay connection point on the y-axis */\n    get offsetY() { return this._offsetY; }\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** Whether or not the overlay should attach a backdrop. */\n    get hasBackdrop() { return this._hasBackdrop; }\n    set hasBackdrop(value) { this._hasBackdrop = coerceBooleanProperty(value); }\n    /** Whether or not the overlay should be locked when scrolling. */\n    get lockPosition() { return this._lockPosition; }\n    set lockPosition(value) { this._lockPosition = coerceBooleanProperty(value); }\n    /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n    get flexibleDimensions() { return this._flexibleDimensions; }\n    set flexibleDimensions(value) {\n        this._flexibleDimensions = coerceBooleanProperty(value);\n    }\n    /** Whether the overlay can grow after the initial open when flexible positioning is turned on. */\n    get growAfterOpen() { return this._growAfterOpen; }\n    set growAfterOpen(value) { this._growAfterOpen = coerceBooleanProperty(value); }\n    /** Whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    get push() { return this._push; }\n    set push(value) { this._push = coerceBooleanProperty(value); }\n    /** The associated overlay reference. */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /** The element's layout direction. */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    ngOnDestroy() {\n        this._attachSubscription.unsubscribe();\n        this._detachSubscription.unsubscribe();\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n    }\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    }\n    /** Creates an overlay */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        const overlayRef = this._overlayRef = this._overlay.create(this._buildConfig());\n        this._attachSubscription = overlayRef.attachments().subscribe(() => this.attach.emit());\n        this._detachSubscription = overlayRef.detachments().subscribe(() => this.detach.emit());\n        overlayRef.keydownEvents().subscribe((event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                this._detachOverlay();\n            }\n        });\n        this._overlayRef.outsidePointerEvents().subscribe((event) => {\n            this.overlayOutsideClick.next(event);\n        });\n    }\n    /** Builds the overlay config based on the directive's inputs */\n    _buildConfig() {\n        const positionStrategy = this._position =\n            this.positionStrategy || this._createPositionStrategy();\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /** Updates the state of a position strategy, based on the values of the directive inputs. */\n    _updatePositionStrategy(positionStrategy) {\n        const positions = this.positions.map(currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        }));\n        return positionStrategy\n            .setOrigin(this.origin.elementRef)\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /** Returns the position strategy of the overlay to be set on the overlay config */\n    _createPositionStrategy() {\n        const strategy = this._overlay.position().flexibleConnectedTo(this.origin.elementRef);\n        this._updatePositionStrategy(strategy);\n        return strategy;\n    }\n    /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\n    _attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe(event => {\n                this.backdropClick.emit(event);\n            });\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n        this._positionSubscription.unsubscribe();\n        // Only subscribe to `positionChanges` if requested, because putting\n        // together all the information for it can be expensive.\n        if (this.positionChange.observers.length > 0) {\n            this._positionSubscription = this._position.positionChanges\n                .pipe(takeWhile(() => this.positionChange.observers.length > 0))\n                .subscribe(position => {\n                this.positionChange.emit(position);\n                if (this.positionChange.observers.length === 0) {\n                    this._positionSubscription.unsubscribe();\n                }\n            });\n        }\n    }\n    /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\n    _detachOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n        }\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n    }\n}\nCdkConnectedOverlay.ɵfac = function CdkConnectedOverlay_Factory(t) { return new (t || CdkConnectedOverlay)(ɵngcc0.ɵɵdirectiveInject(Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nCdkConnectedOverlay.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkConnectedOverlay, selectors: [[\"\", \"cdk-connected-overlay\", \"\"], [\"\", \"connected-overlay\", \"\"], [\"\", \"cdkConnectedOverlay\", \"\"]], inputs: { viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\"], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\"], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\"], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\"], push: [\"cdkConnectedOverlayPush\", \"push\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\", overlayOutsideClick: \"overlayOutsideClick\" }, exportAs: [\"cdkConnectedOverlay\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkConnectedOverlay.ctorParameters = () => [\n    { type: Overlay },\n    { type: TemplateRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nCdkConnectedOverlay.propDecorators = {\n    origin: [{ type: Input, args: ['cdkConnectedOverlayOrigin',] }],\n    positions: [{ type: Input, args: ['cdkConnectedOverlayPositions',] }],\n    positionStrategy: [{ type: Input, args: ['cdkConnectedOverlayPositionStrategy',] }],\n    offsetX: [{ type: Input, args: ['cdkConnectedOverlayOffsetX',] }],\n    offsetY: [{ type: Input, args: ['cdkConnectedOverlayOffsetY',] }],\n    width: [{ type: Input, args: ['cdkConnectedOverlayWidth',] }],\n    height: [{ type: Input, args: ['cdkConnectedOverlayHeight',] }],\n    minWidth: [{ type: Input, args: ['cdkConnectedOverlayMinWidth',] }],\n    minHeight: [{ type: Input, args: ['cdkConnectedOverlayMinHeight',] }],\n    backdropClass: [{ type: Input, args: ['cdkConnectedOverlayBackdropClass',] }],\n    panelClass: [{ type: Input, args: ['cdkConnectedOverlayPanelClass',] }],\n    viewportMargin: [{ type: Input, args: ['cdkConnectedOverlayViewportMargin',] }],\n    scrollStrategy: [{ type: Input, args: ['cdkConnectedOverlayScrollStrategy',] }],\n    open: [{ type: Input, args: ['cdkConnectedOverlayOpen',] }],\n    transformOriginSelector: [{ type: Input, args: ['cdkConnectedOverlayTransformOriginOn',] }],\n    hasBackdrop: [{ type: Input, args: ['cdkConnectedOverlayHasBackdrop',] }],\n    lockPosition: [{ type: Input, args: ['cdkConnectedOverlayLockPosition',] }],\n    flexibleDimensions: [{ type: Input, args: ['cdkConnectedOverlayFlexibleDimensions',] }],\n    growAfterOpen: [{ type: Input, args: ['cdkConnectedOverlayGrowAfterOpen',] }],\n    push: [{ type: Input, args: ['cdkConnectedOverlayPush',] }],\n    backdropClick: [{ type: Output }],\n    positionChange: [{ type: Output }],\n    attach: [{ type: Output }],\n    detach: [{ type: Output }],\n    overlayKeydown: [{ type: Output }],\n    overlayOutsideClick: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkConnectedOverlay, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                exportAs: 'cdkConnectedOverlay'\n            }]\n    }], function () { return [{ type: Overlay }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { viewportMargin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayViewportMargin']\n        }], open: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOpen']\n        }], backdropClick: [{\n            type: Output\n        }], positionChange: [{\n            type: Output\n        }], attach: [{\n            type: Output\n        }], detach: [{\n            type: Output\n        }], overlayKeydown: [{\n            type: Output\n        }], overlayOutsideClick: [{\n            type: Output\n        }], scrollStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayScrollStrategy']\n        }], offsetX: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetX']\n        }], offsetY: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetY']\n        }], hasBackdrop: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHasBackdrop']\n        }], lockPosition: [{\n            type: Input,\n            args: ['cdkConnectedOverlayLockPosition']\n        }], flexibleDimensions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayFlexibleDimensions']\n        }], growAfterOpen: [{\n            type: Input,\n            args: ['cdkConnectedOverlayGrowAfterOpen']\n        }], push: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPush']\n        }], positions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositions']\n        }], origin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOrigin']\n        }], positionStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositionStrategy']\n        }], width: [{\n            type: Input,\n            args: ['cdkConnectedOverlayWidth']\n        }], height: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHeight']\n        }], minWidth: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinWidth']\n        }], minHeight: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinHeight']\n        }], backdropClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayBackdropClass']\n        }], panelClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPanelClass']\n        }], transformOriginSelector: [{\n            type: Input,\n            args: ['cdkConnectedOverlayTransformOriginOn']\n        }] }); })();\n/** @docs-private */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass OverlayModule {\n}\nOverlayModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: OverlayModule });\nOverlayModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function OverlayModule_Factory(t) { return new (t || OverlayModule)(); }, providers: [\n        Overlay,\n        CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[BidiModule, PortalModule, ScrollingModule], ScrollingModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(OverlayModule, { declarations: function () { return [CdkConnectedOverlay, CdkOverlayOrigin]; }, imports: function () { return [BidiModule, PortalModule, ScrollingModule]; }, exports: function () { return [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, PortalModule, ScrollingModule],\n                exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n                providers: [\n                    Overlay,\n                    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n                ]\n            }]\n    }], null, null); })();\n/**\n * @deprecated Use `OverlayModule` instead.\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst OVERLAY_PROVIDERS = [\n    Overlay,\n    OverlayPositionBuilder,\n    OVERLAY_KEYBOARD_DISPATCHER_PROVIDER,\n    OVERLAY_CONTAINER_PROVIDER,\n    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    constructor(_document, \n    /**\n     * @deprecated `platform` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    platform) {\n        super(_document, platform);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    }\n    _createContainer() {\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener(() => this._adjustParentForFullscreenChange());\n    }\n    _adjustParentForFullscreenChange() {\n        if (!this._containerElement) {\n            return;\n        }\n        const fullscreenElement = this.getFullscreenElement();\n        const parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    }\n    _addFullscreenChangeListener(fn) {\n        const eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    }\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            const _document = this._document;\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     */\n    getFullscreenElement() {\n        const _document = this._document;\n        return _document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null;\n    }\n}\nFullscreenOverlayContainer.ɵfac = function FullscreenOverlayContainer_Factory(t) { return new (t || FullscreenOverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nFullscreenOverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function FullscreenOverlayContainer_Factory() { return new FullscreenOverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: FullscreenOverlayContainer, providedIn: \"root\" });\nFullscreenOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FullscreenOverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectedPositionStrategy, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, OVERLAY_PROVIDERS, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayOutsideClickDispatcher, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_a, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_b, OVERLAY_CONTAINER_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_c, OVERLAY_CONTAINER_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_d, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY as ɵangular_material_src_cdk_overlay_overlay_e, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_f, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_g, BaseOverlayDispatcher as ɵangular_material_src_cdk_overlay_overlay_h };\n\n//# sourceMappingURL=overlay.js.map","import { ElementRef, Directive, TemplateRef, ViewContainerRef, EventEmitter, ComponentFactoryResolver, Inject, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * @docs-private\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * @docs-private\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * @docs-private\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * @docs-private\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * @docs-private\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n */\nclass Portal {\n    /** Attach this portal to a host. */\n    attach(host) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (host == null) {\n                throwNullPortalOutletError();\n            }\n            if (host.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n        }\n        this._attachedHost = host;\n        return host.attach(this);\n    }\n    /** Detach this portal from its host */\n    detach() {\n        let host = this._attachedHost;\n        if (host != null) {\n            this._attachedHost = null;\n            host.detach();\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throwNoPortalAttachedError();\n        }\n    }\n    /** Whether this portal is attached to a host. */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nclass ComponentPortal extends Portal {\n    constructor(component, viewContainerRef, injector, componentFactoryResolver) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.componentFactoryResolver = componentFactoryResolver;\n    }\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nclass TemplatePortal extends Portal {\n    constructor(template, viewContainerRef, context) {\n        super();\n        this.templateRef = template;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n    }\n    get origin() {\n        return this.templateRef.elementRef;\n    }\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     */\n    attach(host, context = this.context) {\n        this.context = context;\n        return super.attach(host);\n    }\n    detach() {\n        this.context = undefined;\n        return super.detach();\n    }\n}\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n */\nclass DomPortal extends Portal {\n    constructor(element) {\n        super();\n        this.element = element instanceof ElementRef ? element.nativeElement : element;\n    }\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n */\nclass BasePortalOutlet {\n    constructor() {\n        /** Whether this host has already been permanently disposed. */\n        this._isDisposed = false;\n        // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n        this.attachDomPortal = null;\n    }\n    /** Whether this host has an attached portal. */\n    hasAttached() {\n        return !!this._attachedPortal;\n    }\n    /** Attaches a portal. */\n    attach(portal) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!portal) {\n                throwNullPortalError();\n            }\n            if (this.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n            if (this._isDisposed) {\n                throwPortalOutletAlreadyDisposedError();\n            }\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n            // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n        }\n        else if (this.attachDomPortal && portal instanceof DomPortal) {\n            this._attachedPortal = portal;\n            return this.attachDomPortal(portal);\n        }\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throwUnknownPortalTypeError();\n        }\n    }\n    /** Detaches a previously attached portal. */\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    }\n    /** Permanently dispose of this portal host. */\n    dispose() {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n    /** @docs-private */\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n    _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\n/**\n * @deprecated Use `BasePortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass BasePortalHost extends BasePortalOutlet {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n    constructor(\n    /** Element into which the content is projected. */\n    outletElement, _componentFactoryResolver, _appRef, _defaultInjector, \n    /**\n     * @deprecated `_document` Parameter to be made required.\n     * @breaking-change 10.0.0\n     */\n    _document) {\n        super();\n        this.outletElement = outletElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n        /**\n         * Attaches a DOM portal by transferring its content into the outlet.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            // @breaking-change 10.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            const element = portal.element;\n            if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            const anchorNode = this._document.createComment('dom-portal');\n            element.parentNode.insertBefore(anchorNode, element);\n            this.outletElement.appendChild(element);\n            super.setDisposeFn(() => {\n                // We can't use `replaceWith` here because IE doesn't support it.\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            });\n        };\n        this._document = _document;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @param portal Portal to be attached\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector);\n            this.setDisposeFn(() => componentRef.destroy());\n        }\n        else {\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn(() => {\n                this._appRef.detachView(componentRef.hostView);\n                componentRef.destroy();\n            });\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        return componentRef;\n    }\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        let viewContainer = portal.viewContainerRef;\n        let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach(rootNode => this.outletElement.appendChild(rootNode));\n        // Note that we want to detect changes after the nodes have been moved so that\n        // any directives inside the portal that are looking at the DOM inside a lifecycle\n        // hook won't be invoked too early.\n        viewRef.detectChanges();\n        this.setDisposeFn((() => {\n            let index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        }));\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    }\n    /**\n     * Clears out a portal from the DOM.\n     */\n    dispose() {\n        super.dispose();\n        if (this.outletElement.parentNode != null) {\n            this.outletElement.parentNode.removeChild(this.outletElement);\n        }\n    }\n    /** Gets the root HTMLElement for an instantiated component. */\n    _getComponentRootNode(componentRef) {\n        return componentRef.hostView.rootNodes[0];\n    }\n}\n/**\n * @deprecated Use `DomPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass DomPortalHost extends DomPortalOutlet {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nclass CdkPortal extends TemplatePortal {\n    constructor(templateRef, viewContainerRef) {\n        super(templateRef, viewContainerRef);\n    }\n}\nCdkPortal.ɵfac = function CdkPortal_Factory(t) { return new (t || CdkPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortal, selectors: [[\"\", \"cdkPortal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkPortal.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ViewContainerRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortal]',\n                exportAs: 'cdkPortal'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }]; }, null); })();\n/**\n * @deprecated Use `CdkPortal` instead.\n * @breaking-change 9.0.0\n */\nclass TemplatePortalDirective extends CdkPortal {\n}\nTemplatePortalDirective.ɵfac = function TemplatePortalDirective_Factory(t) { return ɵTemplatePortalDirective_BaseFactory(t || TemplatePortalDirective); };\nTemplatePortalDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: TemplatePortalDirective, selectors: [[\"\", \"cdk-portal\", \"\"], [\"\", \"portal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortal,\n                useExisting: TemplatePortalDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵTemplatePortalDirective_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(TemplatePortalDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TemplatePortalDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-portal], [portal]',\n                exportAs: 'cdkPortal',\n                providers: [{\n                        provide: CdkPortal,\n                        useExisting: TemplatePortalDirective\n                    }]\n            }]\n    }], null, null); })();\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nclass CdkPortalOutlet extends BasePortalOutlet {\n    constructor(_componentFactoryResolver, _viewContainerRef, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super();\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._viewContainerRef = _viewContainerRef;\n        /** Whether the portal component is initialized. */\n        this._isInitialized = false;\n        /** Emits when a portal is attached to the outlet. */\n        this.attached = new EventEmitter();\n        /**\n         * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            // @breaking-change 9.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            const element = portal.element;\n            if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            const anchorNode = this._document.createComment('dom-portal');\n            portal.setAttachedHost(this);\n            element.parentNode.insertBefore(anchorNode, element);\n            this._getRootNode().appendChild(element);\n            super.setDisposeFn(() => {\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            });\n        };\n        this._document = _document;\n    }\n    /** Portal associated with the Portal outlet. */\n    get portal() {\n        return this._attachedPortal;\n    }\n    set portal(portal) {\n        // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n        // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n        // and attach a portal programmatically in the parent component. When Angular does the first CD\n        // round, it will fire the setter with empty string, causing the user's content to be cleared.\n        if (this.hasAttached() && !portal && !this._isInitialized) {\n            return;\n        }\n        if (this.hasAttached()) {\n            super.detach();\n        }\n        if (portal) {\n            super.attach(portal);\n        }\n        this._attachedPortal = portal;\n    }\n    /** Component or view reference that is attached to the portal. */\n    get attachedRef() {\n        return this._attachedRef;\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        super.dispose();\n        this._attachedPortal = null;\n        this._attachedRef = null;\n    }\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @param portal Portal to be attached to the portal outlet.\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalOutlet.\n        const viewContainerRef = portal.viewContainerRef != null ?\n            portal.viewContainerRef :\n            this._viewContainerRef;\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        const ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector);\n        // If we're using a view container that's different from the injected one (e.g. when the portal\n        // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n        // inside of the alternate view container.\n        if (viewContainerRef !== this._viewContainerRef) {\n            this._getRootNode().appendChild(ref.hostView.rootNodes[0]);\n        }\n        super.setDisposeFn(() => ref.destroy());\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    }\n    /**\n     * Attach the given TemplatePortal to this PortalHost as an embedded View.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        portal.setAttachedHost(this);\n        const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);\n        super.setDisposeFn(() => this._viewContainerRef.clear());\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    }\n    /** Gets the root node of the portal outlet. */\n    _getRootNode() {\n        const nativeElement = this._viewContainerRef.element.nativeElement;\n        // The directive could be set on a template which will result in a comment\n        // node being the root. Use the comment's parent node if that is the case.\n        return (nativeElement.nodeType === nativeElement.ELEMENT_NODE ?\n            nativeElement : nativeElement.parentNode);\n    }\n}\nCdkPortalOutlet.ɵfac = function CdkPortalOutlet_Factory(t) { return new (t || CdkPortalOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkPortalOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortalOutlet, selectors: [[\"\", \"cdkPortalOutlet\", \"\"]], inputs: { portal: [\"cdkPortalOutlet\", \"portal\"] }, outputs: { attached: \"attached\" }, exportAs: [\"cdkPortalOutlet\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkPortalOutlet.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkPortalOutlet.propDecorators = {\n    attached: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkPortalOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalOutlet]',\n                exportAs: 'cdkPortalOutlet',\n                inputs: ['portal: cdkPortalOutlet']\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { attached: [{\n            type: Output\n        }] }); })();\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass PortalHostDirective extends CdkPortalOutlet {\n}\nPortalHostDirective.ɵfac = function PortalHostDirective_Factory(t) { return ɵPortalHostDirective_BaseFactory(t || PortalHostDirective); };\nPortalHostDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: PortalHostDirective, selectors: [[\"\", \"cdkPortalHost\", \"\"], [\"\", \"portalHost\", \"\"]], inputs: { portal: [\"cdkPortalHost\", \"portal\"] }, exportAs: [\"cdkPortalHost\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortalOutlet,\n                useExisting: PortalHostDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵPortalHostDirective_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(PortalHostDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PortalHostDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalHost], [portalHost]',\n                exportAs: 'cdkPortalHost',\n                inputs: ['portal: cdkPortalHost'],\n                providers: [{\n                        provide: CdkPortalOutlet,\n                        useExisting: PortalHostDirective\n                    }]\n            }]\n    }], null, null); })();\nclass PortalModule {\n}\nPortalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PortalModule });\nPortalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PortalModule_Factory(t) { return new (t || PortalModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PortalModule, { declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective], exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PortalModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * @docs-private\n * @deprecated Use `Injector.create` instead.\n * @breaking-change 11.0.0\n */\nclass PortalInjector {\n    constructor(_parentInjector, _customTokens) {\n        this._parentInjector = _parentInjector;\n        this._customTokens = _customTokens;\n    }\n    get(token, notFoundValue) {\n        const value = this._customTokens.get(token);\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalHost, DomPortalOutlet, Portal, PortalHostDirective, PortalInjector, PortalModule, TemplatePortal, TemplatePortalDirective };\n\n//# sourceMappingURL=portal.js.map","import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { DOCUMENT } from '@angular/common';\nimport { Directive, ElementRef, TemplateRef, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, forwardRef, Optional, ContentChild, ViewChild, Input, QueryList, EventEmitter, ChangeDetectorRef, ContentChildren, Output, HostListener, NgModule } from '@angular/core';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\n\nfunction CdkStep_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nclass CdkStepHeader {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    /** Focuses the step header. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n}\nCdkStepHeader.ɵfac = function CdkStepHeader_Factory(t) { return new (t || CdkStepHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkStepHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepHeader, selectors: [[\"\", \"cdkStepHeader\", \"\"]], hostAttrs: [\"role\", \"tab\"] });\nCdkStepHeader.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepHeader, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepHeader]',\n                host: {\n                    'role': 'tab'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkStepLabel {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkStepLabel.ɵfac = function CdkStepLabel_Factory(t) { return new (t || CdkStepLabel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkStepLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepLabel, selectors: [[\"\", \"cdkStepLabel\", \"\"]] });\nCdkStepLabel.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepLabel]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each stepper component. */\nlet nextId = 0;\n/** Change event emitted on selection changes. */\nclass StepperSelectionEvent {\n}\n/** Enum to represent the different states of the steps. */\nconst STEP_STATE = {\n    NUMBER: 'number',\n    EDIT: 'edit',\n    DONE: 'done',\n    ERROR: 'error'\n};\n/** InjectionToken that can be used to specify the global stepper options. */\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @deprecated Use `STEPPER_GLOBAL_OPTIONS` instead.\n * @breaking-change 8.0.0.\n */\nconst MAT_STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\nclass CdkStep {\n    /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n    constructor(_stepper, stepperOptions) {\n        this._stepper = _stepper;\n        /** Whether user has seen the expanded step content or not. */\n        this.interacted = false;\n        this._editable = true;\n        this._optional = false;\n        this._completedOverride = null;\n        this._customError = null;\n        this._stepperOptions = stepperOptions ? stepperOptions : {};\n        this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n        this._showError = !!this._stepperOptions.showError;\n    }\n    /** Whether the user can return to this step once it has been marked as completed. */\n    get editable() {\n        return this._editable;\n    }\n    set editable(value) {\n        this._editable = coerceBooleanProperty(value);\n    }\n    /** Whether the completion of step is optional. */\n    get optional() {\n        return this._optional;\n    }\n    set optional(value) {\n        this._optional = coerceBooleanProperty(value);\n    }\n    /** Whether step is marked as completed. */\n    get completed() {\n        return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n    }\n    set completed(value) {\n        this._completedOverride = coerceBooleanProperty(value);\n    }\n    _getDefaultCompleted() {\n        return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    }\n    /** Whether step has an error. */\n    get hasError() {\n        return this._customError == null ? this._getDefaultError() : this._customError;\n    }\n    set hasError(value) {\n        this._customError = coerceBooleanProperty(value);\n    }\n    _getDefaultError() {\n        return this.stepControl && this.stepControl.invalid && this.interacted;\n    }\n    /** Selects this step component. */\n    select() {\n        this._stepper.selected = this;\n    }\n    /** Resets the step to its initial state. Note that this includes resetting form data. */\n    reset() {\n        this.interacted = false;\n        if (this._completedOverride != null) {\n            this._completedOverride = false;\n        }\n        if (this._customError != null) {\n            this._customError = false;\n        }\n        if (this.stepControl) {\n            this.stepControl.reset();\n        }\n    }\n    ngOnChanges() {\n        // Since basically all inputs of the MatStep get proxied through the view down to the\n        // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n        this._stepper._stateChanged();\n    }\n}\nCdkStep.ɵfac = function CdkStep_Factory(t) { return new (t || CdkStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => CdkStepper)), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8)); };\nCdkStep.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkStep, selectors: [[\"cdk-step\"]], contentQueries: function CdkStep_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepLabel, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n    } }, viewQuery: function CdkStep_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);\n    } }, inputs: { editable: \"editable\", optional: \"optional\", completed: \"completed\", hasError: \"hasError\", stepControl: \"stepControl\", label: \"label\", errorMessage: \"errorMessage\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], state: \"state\" }, exportAs: [\"cdkStep\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function CdkStep_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, CdkStep_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2, changeDetection: 0 });\nCdkStep.ctorParameters = () => [\n    { type: CdkStepper, decorators: [{ type: Inject, args: [forwardRef(() => CdkStepper),] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n];\nCdkStep.propDecorators = {\n    stepLabel: [{ type: ContentChild, args: [CdkStepLabel,] }],\n    content: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    stepControl: [{ type: Input }],\n    label: [{ type: Input }],\n    errorMessage: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    state: [{ type: Input }],\n    editable: [{ type: Input }],\n    optional: [{ type: Input }],\n    completed: [{ type: Input }],\n    hasError: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStep, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-step',\n                exportAs: 'cdkStep',\n                template: '<ng-template><ng-content></ng-content></ng-template>',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: CdkStepper, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => CdkStepper)]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [STEPPER_GLOBAL_OPTIONS]\n            }] }]; }, { editable: [{\n            type: Input\n        }], optional: [{\n            type: Input\n        }], completed: [{\n            type: Input\n        }], hasError: [{\n            type: Input\n        }], stepLabel: [{\n            type: ContentChild,\n            args: [CdkStepLabel]\n        }], content: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], stepControl: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], errorMessage: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], state: [{\n            type: Input\n        }] }); })();\nclass CdkStepper {\n    constructor(_dir, _changeDetectorRef, \n    // @breaking-change 8.0.0 `_elementRef` and `_document` parameters to become required.\n    _elementRef, _document) {\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n        this.steps = new QueryList();\n        this._linear = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the selected step has changed. */\n        this.selectionChange = new EventEmitter();\n        this._orientation = 'horizontal';\n        this._groupId = nextId++;\n        this._document = _document;\n    }\n    /** Whether the validity of previous steps should be checked or not. */\n    get linear() {\n        return this._linear;\n    }\n    set linear(value) {\n        this._linear = coerceBooleanProperty(value);\n    }\n    /** The index of the selected step. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(index) {\n        const newIndex = coerceNumberProperty(index);\n        if (this.steps && this._steps) {\n            // Ensure that the index can't be out of bounds.\n            if ((newIndex < 0 || newIndex > this.steps.length - 1) &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n            }\n            if (this._selectedIndex != newIndex && !this._anyControlsInvalidOrPending(newIndex) &&\n                (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n                this._updateSelectedItemIndex(index);\n            }\n        }\n        else {\n            this._selectedIndex = newIndex;\n        }\n    }\n    /** The step that is selected. */\n    get selected() {\n        // @breaking-change 8.0.0 Change return type to `CdkStep | undefined`.\n        return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n    }\n    set selected(step) {\n        this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n    ngAfterContentInit() {\n        this._steps.changes\n            .pipe(startWith(this._steps), takeUntil(this._destroyed))\n            .subscribe((steps) => {\n            this.steps.reset(steps.filter(step => step._stepper === this));\n            this.steps.notifyOnChanges();\n        });\n    }\n    ngAfterViewInit() {\n        // Note that while the step headers are content children by default, any components that\n        // extend this one might have them as view children. We initialize the keyboard handling in\n        // AfterViewInit so we're guaranteed for both view and content children to be defined.\n        this._keyManager = new FocusKeyManager(this._stepHeader)\n            .withWrap()\n            .withHomeAndEnd()\n            .withVerticalOrientation(this._orientation === 'vertical');\n        (this._dir ? this._dir.change : of())\n            .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n            .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // No need to `takeUntil` here, because we're the ones destroying `steps`.\n        this.steps.changes.subscribe(() => {\n            if (!this.selected) {\n                this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this.steps.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Selects and focuses the next step in list. */\n    next() {\n        this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n    /** Selects and focuses the previous step in list. */\n    previous() {\n        this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n    /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n    reset() {\n        this._updateSelectedItemIndex(0);\n        this.steps.forEach(step => step.reset());\n        this._stateChanged();\n    }\n    /** Returns a unique id for each step label element. */\n    _getStepLabelId(i) {\n        return `cdk-step-label-${this._groupId}-${i}`;\n    }\n    /** Returns unique id for each step content element. */\n    _getStepContentId(i) {\n        return `cdk-step-content-${this._groupId}-${i}`;\n    }\n    /** Marks the component to be change detected. */\n    _stateChanged() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns position state of the step with the given index. */\n    _getAnimationDirection(index) {\n        const position = index - this._selectedIndex;\n        if (position < 0) {\n            return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n        }\n        else if (position > 0) {\n            return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n        }\n        return 'current';\n    }\n    /** Returns the type of icon to be displayed. */\n    _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n        const step = this.steps.toArray()[index];\n        const isCurrentStep = this._isCurrentStep(index);\n        return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) :\n            this._getGuidelineLogic(step, isCurrentStep, state);\n    }\n    _getDefaultIndicatorLogic(step, isCurrentStep) {\n        if (step._showError && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (!step.completed || isCurrentStep) {\n            return STEP_STATE.NUMBER;\n        }\n        else {\n            return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n        }\n    }\n    _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n        if (step._showError && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (step.completed && !isCurrentStep) {\n            return STEP_STATE.DONE;\n        }\n        else if (step.completed && isCurrentStep) {\n            return state;\n        }\n        else if (step.editable && isCurrentStep) {\n            return STEP_STATE.EDIT;\n        }\n        else {\n            return state;\n        }\n    }\n    _isCurrentStep(index) {\n        return this._selectedIndex === index;\n    }\n    /** Returns the index of the currently-focused step header. */\n    _getFocusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n    }\n    _updateSelectedItemIndex(newIndex) {\n        const stepsArray = this.steps.toArray();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: this._selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[this._selectedIndex],\n        });\n        // If focus is inside the stepper, move it to the next header, otherwise it may become\n        // lost when the active step content is hidden. We can't be more granular with the check\n        // (e.g. checking whether focus is inside the active step), because we don't have a\n        // reference to the elements that are rendering out the content.\n        this._containsFocus() ? this._keyManager.setActiveItem(newIndex) :\n            this._keyManager.updateActiveItem(newIndex);\n        this._selectedIndex = newIndex;\n        this._stateChanged();\n    }\n    _onKeydown(event) {\n        const hasModifier = hasModifierKey(event);\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        if (manager.activeItemIndex != null && !hasModifier &&\n            (keyCode === SPACE || keyCode === ENTER)) {\n            this.selectedIndex = manager.activeItemIndex;\n            event.preventDefault();\n        }\n        else {\n            manager.onKeydown(event);\n        }\n    }\n    _anyControlsInvalidOrPending(index) {\n        const steps = this.steps.toArray();\n        steps[this._selectedIndex].interacted = true;\n        if (this._linear && index >= 0) {\n            return steps.slice(0, index).some(step => {\n                const control = step.stepControl;\n                const isIncomplete = control ? (control.invalid || control.pending || !step.interacted) : !step.completed;\n                return isIncomplete && !step.optional && !step._completedOverride;\n            });\n        }\n        return false;\n    }\n    _layoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Checks whether the stepper contains the focused element. */\n    _containsFocus() {\n        if (!this._document || !this._elementRef) {\n            return false;\n        }\n        const stepperElement = this._elementRef.nativeElement;\n        const focusedElement = this._document.activeElement;\n        return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n}\nCdkStepper.ɵfac = function CdkStepper_Factory(t) { return new (t || CdkStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkStepper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepper, selectors: [[\"\", \"cdkStepper\", \"\"]], contentQueries: function CdkStepper_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStep, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepHeader, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    } }, inputs: { linear: \"linear\", selectedIndex: \"selectedIndex\", selected: \"selected\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"cdkStepper\"] });\nCdkStepper.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkStepper.propDecorators = {\n    _steps: [{ type: ContentChildren, args: [CdkStep, { descendants: true },] }],\n    _stepHeader: [{ type: ContentChildren, args: [CdkStepHeader, { descendants: true },] }],\n    linear: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    selected: [{ type: Input }],\n    selectionChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepper, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepper]',\n                exportAs: 'cdkStepper'\n            }]\n    }], function () { return [{ type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], linear: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], _steps: [{\n            type: ContentChildren,\n            args: [CdkStep, { descendants: true }]\n        }], _stepHeader: [{\n            type: ContentChildren,\n            args: [CdkStepHeader, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that moves to the next step in a stepper workflow. */\nclass CdkStepperNext {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the next button. Defaults to \"submit\" if not specified. */\n        this.type = 'submit';\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleClick() {\n        this._stepper.next();\n    }\n}\nCdkStepperNext.ɵfac = function CdkStepperNext_Factory(t) { return new (t || CdkStepperNext)(ɵngcc0.ɵɵdirectiveInject(CdkStepper)); };\nCdkStepperNext.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepperNext, selectors: [[\"button\", \"cdkStepperNext\", \"\"]], hostVars: 1, hostBindings: function CdkStepperNext_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkStepperNext_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" } });\nCdkStepperNext.ctorParameters = () => [\n    { type: CdkStepper }\n];\nCdkStepperNext.propDecorators = {\n    type: [{ type: Input }],\n    _handleClick: [{ type: HostListener, args: ['click',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepperNext, [{\n        type: Directive,\n        args: [{\n                selector: 'button[cdkStepperNext]',\n                host: {\n                    '[type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: CdkStepper }]; }, { type: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleClick: [{\n            type: HostListener,\n            args: ['click']\n        }] }); })();\n/** Button that moves to the previous step in a stepper workflow. */\nclass CdkStepperPrevious {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the previous button. Defaults to \"button\" if not specified. */\n        this.type = 'button';\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleClick() {\n        this._stepper.previous();\n    }\n}\nCdkStepperPrevious.ɵfac = function CdkStepperPrevious_Factory(t) { return new (t || CdkStepperPrevious)(ɵngcc0.ɵɵdirectiveInject(CdkStepper)); };\nCdkStepperPrevious.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepperPrevious, selectors: [[\"button\", \"cdkStepperPrevious\", \"\"]], hostVars: 1, hostBindings: function CdkStepperPrevious_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkStepperPrevious_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" } });\nCdkStepperPrevious.ctorParameters = () => [\n    { type: CdkStepper }\n];\nCdkStepperPrevious.propDecorators = {\n    type: [{ type: Input }],\n    _handleClick: [{ type: HostListener, args: ['click',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepperPrevious, [{\n        type: Directive,\n        args: [{\n                selector: 'button[cdkStepperPrevious]',\n                host: {\n                    '[type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: CdkStepper }]; }, { type: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleClick: [{\n            type: HostListener,\n            args: ['click']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkStepperModule {\n}\nCdkStepperModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkStepperModule });\nCdkStepperModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkStepperModule_Factory(t) { return new (t || CdkStepperModule)(); }, imports: [[BidiModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkStepperModule, { declarations: function () { return [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious]; }, imports: function () { return [BidiModule]; }, exports: function () { return [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepperModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [\n                    CdkStep,\n                    CdkStepper,\n                    CdkStepHeader,\n                    CdkStepLabel,\n                    CdkStepperNext,\n                    CdkStepperPrevious,\n                ],\n                declarations: [\n                    CdkStep,\n                    CdkStepper,\n                    CdkStepHeader,\n                    CdkStepLabel,\n                    CdkStepperNext,\n                    CdkStepperPrevious,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, MAT_STEPPER_GLOBAL_OPTIONS, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };\n\n//# sourceMappingURL=stepper.js.map","import { normalizePassiveListenerOptions, Platform, PlatformModule } from '@angular/cdk/platform';\nimport { ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, EventEmitter, Directive, ElementRef, Output, Optional, Inject, Input, HostListener, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options to pass to the animationstart listener. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject;\n        }\n        const result = new Subject();\n        const cssClass = 'cdk-text-field-autofilled';\n        const listener = ((event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: true }));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: false }));\n            }\n        });\n        this._ngZone.runOutsideAngular(() => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        });\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            }\n        });\n        return result;\n    }\n    stopMonitoring(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    ngOnDestroy() {\n        this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n    }\n}\nAutofillMonitor.ɵfac = function AutofillMonitor_Factory(t) { return new (t || AutofillMonitor)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nAutofillMonitor.ɵprov = ɵɵdefineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\nAutofillMonitor.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutofillMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\n/** A directive that can be used to monitor the autofill state of an input. */\nclass CdkAutofill {\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /** Emits when the autofill state of the element changes. */\n        this.cdkAutofill = new EventEmitter();\n    }\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe(event => this.cdkAutofill.emit(event));\n    }\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = function CdkAutofill_Factory(t) { return new (t || CdkAutofill)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AutofillMonitor)); };\nCdkAutofill.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAutofill, selectors: [[\"\", \"cdkAutofill\", \"\"]], outputs: { cdkAutofill: \"cdkAutofill\" } });\nCdkAutofill.ctorParameters = () => [\n    { type: ElementRef },\n    { type: AutofillMonitor }\n];\nCdkAutofill.propDecorators = {\n    cdkAutofill: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAutofill, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAutofill]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: AutofillMonitor }]; }, { cdkAutofill: [{\n            type: Output\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Directive to automatically resize a textarea to fit its content. */\nclass CdkTextareaAutosize {\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._document = document;\n        this._textareaElement = this._elementRef.nativeElement;\n        this._measuringClass = _platform.FIREFOX ?\n            'cdk-textarea-autosize-measuring-firefox' :\n            'cdk-textarea-autosize-measuring';\n    }\n    /** Minimum amount of rows in the textarea. */\n    get minRows() { return this._minRows; }\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /** Maximum amount of rows in the textarea. */\n    get maxRows() { return this._maxRows; }\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /** Whether autosizing is enabled or not */\n    get enabled() { return this._enabled; }\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    _setMinHeight() {\n        const minHeight = this.minRows && this._cachedLineHeight ?\n            `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    _setMaxHeight() {\n        const maxHeight = this.maxRows && this._cachedLineHeight ?\n            `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe(() => this.resizeToFitContent(true));\n            });\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        let textareaClone = this._textareaElement.cloneNode(false);\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        this._textareaElement.parentNode.appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        this._textareaElement.parentNode.removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        const textarea = this._elementRef.nativeElement;\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        const placeholderText = textarea.placeholder;\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n        // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n        // need to be removed temporarily.\n        textarea.classList.add(this._measuringClass);\n        textarea.placeholder = '';\n        // The measuring class includes a 2px padding to workaround an issue with Chrome,\n        // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        const height = textarea.scrollHeight - 4;\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        textarea.classList.remove(this._measuringClass);\n        textarea.placeholder = placeholderText;\n        this._ngZone.runOutsideAngular(() => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n            }\n            else {\n                setTimeout(() => this._scrollToCaretPosition(textarea));\n            }\n        });\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        const document = this._getDocument();\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = function CdkTextareaAutosize_Factory(t) { return new (t || CdkTextareaAutosize)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nCdkTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTextareaAutosize, selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"], hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() { return ctx._noopInputHandler(); });\n    } }, inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"] }, exportAs: [\"cdkTextareaAutosize\"] });\nCdkTextareaAutosize.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTextareaAutosize.propDecorators = {\n    minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n    maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n    enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }],\n    _noopInputHandler: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[cdkTextareaAutosize]',\n                exportAs: 'cdkTextareaAutosize',\n                host: {\n                    'class': 'cdk-textarea-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { minRows: [{\n            type: Input,\n            args: ['cdkAutosizeMinRows']\n        }], maxRows: [{\n            type: Input,\n            args: ['cdkAutosizeMaxRows']\n        }], enabled: [{\n            type: Input,\n            args: ['cdkTextareaAutosize']\n        }], \n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    _noopInputHandler: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TextFieldModule });\nTextFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TextFieldModule_Factory(t) { return new (t || TextFieldModule)(); }, imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextFieldModule, { declarations: function () { return [CdkAutofill, CdkTextareaAutosize]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [CdkAutofill, CdkTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TextFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkAutofill, CdkTextareaAutosize],\n                imports: [PlatformModule],\n                exports: [CdkAutofill, CdkTextareaAutosize]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n\n//# sourceMappingURL=text-field.js.map","import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, EventEmitter, Directive, ChangeDetectorRef, ElementRef, Inject, ViewChild, TemplateRef, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, forwardRef, ViewContainerRef, NgZone, Optional, Host, NgModule } from '@angular/core';\nimport { mixinDisableRipple, MAT_OPTION_PARENT_COMPONENT, MAT_OPTGROUP, MatOption, MatOptionSelectionChange, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { Subscription, Subject, defer, merge, of, fromEvent } from 'rxjs';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ESCAPE, hasModifierKey, ENTER, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { _getShadowRoot } from '@angular/cdk/platform';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatFormField, MAT_FORM_FIELD } from '@angular/material/form-field';\nimport { take, switchMap, filter, map, tap, delay } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/cdk/overlay';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/cdk/scrolling';\nimport * as ɵngcc5 from '@angular/material/form-field';\n\nconst _c0 = [\"panel\"];\nfunction MatAutocomplete_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.id)(\"ngClass\", ctx_r0._classList);\n} }\nconst _c1 = [\"*\"];\nlet _uniqueAutocompleteIdCounter = 0;\n/** Event object that is emitted when an autocomplete option is selected. */\nclass MatAutocompleteSelectedEvent {\n    constructor(\n    /** Reference to the autocomplete panel that emitted the event. */\n    source, \n    /** Option that was selected. */\n    option) {\n        this.source = source;\n        this.option = option;\n    }\n}\n// Boilerplate for applying mixins to MatAutocomplete.\n/** @docs-private */\nclass MatAutocompleteBase {\n}\nconst _MatAutocompleteMixinBase = mixinDisableRipple(MatAutocompleteBase);\n/** Injection token to be used to override the default options for `mat-autocomplete`. */\nconst MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new InjectionToken('mat-autocomplete-default-options', {\n    providedIn: 'root',\n    factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n    return { autoActiveFirstOption: false };\n}\n/** Base class with all of the `MatAutocomplete` functionality. */\nclass _MatAutocompleteBase extends _MatAutocompleteMixinBase {\n    constructor(_changeDetectorRef, _elementRef, defaults) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._activeOptionChanges = Subscription.EMPTY;\n        /** Whether the autocomplete panel should be visible, depending on option length. */\n        this.showPanel = false;\n        this._isOpen = false;\n        /** Function that maps an option's control value to its display value in the trigger. */\n        this.displayWith = null;\n        /** Event that is emitted whenever an option from the list is selected. */\n        this.optionSelected = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is opened. */\n        this.opened = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is closed. */\n        this.closed = new EventEmitter();\n        /** Emits whenever an option is activated using the keyboard. */\n        this.optionActivated = new EventEmitter();\n        this._classList = {};\n        /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n        this.id = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n        this._autoActiveFirstOption = !!defaults.autoActiveFirstOption;\n    }\n    /** Whether the autocomplete panel is open. */\n    get isOpen() { return this._isOpen && this.showPanel; }\n    /**\n     * Whether the first option should be highlighted when the autocomplete panel is opened.\n     * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n     */\n    get autoActiveFirstOption() { return this._autoActiveFirstOption; }\n    set autoActiveFirstOption(value) {\n        this._autoActiveFirstOption = coerceBooleanProperty(value);\n    }\n    /**\n     * Takes classes set on the host mat-autocomplete element and applies them to the panel\n     * inside the overlay container to allow for easy styling.\n     */\n    set classList(value) {\n        if (value && value.length) {\n            this._classList = value.split(' ').reduce((classList, className) => {\n                classList[className.trim()] = true;\n                return classList;\n            }, {});\n        }\n        else {\n            this._classList = {};\n        }\n        this._setVisibilityClasses(this._classList);\n        this._elementRef.nativeElement.className = '';\n    }\n    ngAfterContentInit() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n        this._activeOptionChanges = this._keyManager.change.subscribe(index => {\n            this.optionActivated.emit({ source: this, option: this.options.toArray()[index] || null });\n        });\n        // Set the initial visibility state.\n        this._setVisibility();\n    }\n    ngOnDestroy() {\n        this._activeOptionChanges.unsubscribe();\n    }\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     */\n    _setScrollTop(scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    }\n    /** Returns the panel's scrollTop. */\n    _getScrollTop() {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    }\n    /** Panel should hide itself when the option list is empty. */\n    _setVisibility() {\n        this.showPanel = !!this.options.length;\n        this._setVisibilityClasses(this._classList);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits the `select` event. */\n    _emitSelectEvent(option) {\n        const event = new MatAutocompleteSelectedEvent(this, option);\n        this.optionSelected.emit(event);\n    }\n    /** Sets the autocomplete visibility classes on a classlist based on the panel is visible. */\n    _setVisibilityClasses(classList) {\n        classList[this._visibleClass] = this.showPanel;\n        classList[this._hiddenClass] = !this.showPanel;\n    }\n}\n_MatAutocompleteBase.ɵfac = function _MatAutocompleteBase_Factory(t) { return new (t || _MatAutocompleteBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS)); };\n_MatAutocompleteBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteBase, viewQuery: function _MatAutocompleteBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n    } }, inputs: { displayWith: \"displayWith\", autoActiveFirstOption: \"autoActiveFirstOption\", classList: [\"class\", \"classList\"], panelWidth: \"panelWidth\" }, outputs: { optionSelected: \"optionSelected\", opened: \"opened\", closed: \"closed\", optionActivated: \"optionActivated\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatAutocompleteBase.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,] }] }\n];\n_MatAutocompleteBase.propDecorators = {\n    template: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    displayWith: [{ type: Input }],\n    autoActiveFirstOption: [{ type: Input }],\n    panelWidth: [{ type: Input }],\n    optionSelected: [{ type: Output }],\n    opened: [{ type: Output }],\n    closed: [{ type: Output }],\n    optionActivated: [{ type: Output }],\n    classList: [{ type: Input, args: ['class',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatAutocompleteBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n            }] }]; }, { displayWith: [{\n            type: Input\n        }], optionSelected: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], closed: [{\n            type: Output\n        }], optionActivated: [{\n            type: Output\n        }], autoActiveFirstOption: [{\n            type: Input\n        }], classList: [{\n            type: Input,\n            args: ['class']\n        }], template: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], panelWidth: [{\n            type: Input\n        }] }); })();\nclass MatAutocomplete extends _MatAutocompleteBase {\n    constructor() {\n        super(...arguments);\n        this._visibleClass = 'mat-autocomplete-visible';\n        this._hiddenClass = 'mat-autocomplete-hidden';\n    }\n}\nMatAutocomplete.ɵfac = function MatAutocomplete_Factory(t) { return ɵMatAutocomplete_BaseFactory(t || MatAutocomplete); };\nMatAutocomplete.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAutocomplete, selectors: [[\"mat-autocomplete\"]], contentQueries: function MatAutocomplete_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    } }, hostAttrs: [1, \"mat-autocomplete\"], inputs: { disableRipple: \"disableRipple\" }, exportAs: [\"matAutocomplete\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"role\", \"listbox\", 1, \"mat-autocomplete-panel\", 3, \"id\", \"ngClass\"], [\"panel\", \"\"]], template: function MatAutocomplete_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatAutocomplete_ng_template_0_Template, 3, 2, \"ng-template\");\n    } }, directives: [ɵngcc1.NgClass], styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatAutocomplete.propDecorators = {\n    optionGroups: [{ type: ContentChildren, args: [MAT_OPTGROUP, { descendants: true },] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }]\n};\nconst ɵMatAutocomplete_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAutocomplete);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocomplete, [{\n        type: Component,\n        args: [{\n                selector: 'mat-autocomplete',\n                template: \"<ng-template>\\n  <div class=\\\"mat-autocomplete-panel\\\" role=\\\"listbox\\\" [id]=\\\"id\\\" [ngClass]=\\\"_classList\\\" #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'matAutocomplete',\n                inputs: ['disableRipple'],\n                host: {\n                    'class': 'mat-autocomplete'\n                },\n                providers: [\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n                ],\n                styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"]\n            }]\n    }], null, { optionGroups: [{\n            type: ContentChildren,\n            args: [MAT_OPTGROUP, { descendants: true }]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Base class containing all of the functionality for `MatAutocompleteOrigin`. */\nclass _MatAutocompleteOriginBase {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n}\n_MatAutocompleteOriginBase.ɵfac = function _MatAutocompleteOriginBase_Factory(t) { return new (t || _MatAutocompleteOriginBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\n_MatAutocompleteOriginBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteOriginBase });\n_MatAutocompleteOriginBase.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatAutocompleteOriginBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nclass MatAutocompleteOrigin extends _MatAutocompleteOriginBase {\n}\nMatAutocompleteOrigin.ɵfac = function MatAutocompleteOrigin_Factory(t) { return ɵMatAutocompleteOrigin_BaseFactory(t || MatAutocompleteOrigin); };\nMatAutocompleteOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteOrigin, selectors: [[\"\", \"matAutocompleteOrigin\", \"\"]], exportAs: [\"matAutocompleteOrigin\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatAutocompleteOrigin_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAutocompleteOrigin);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[matAutocompleteOrigin]',\n                exportAs: 'matAutocompleteOrigin'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the scrollTop of the panel. Because we are not\n * actually focusing the active item, scroll must be handled manually.\n */\n/**\n * The height of each autocomplete option.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 11.0.0\n */\nconst AUTOCOMPLETE_OPTION_HEIGHT = 48;\n/**\n * The total height of the autocomplete panel.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 11.0.0\n */\nconst AUTOCOMPLETE_PANEL_HEIGHT = 256;\n/** Injection token that determines the scroll handling while the autocomplete panel is open. */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy');\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatAutocompleteTrigger),\n    multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * @docs-private\n */\nfunction getMatAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\n        'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\n        'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\n/** Base class with all of the `MatAutocompleteTrigger` functionality. */\nclass _MatAutocompleteTriggerBase {\n    constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._zone = _zone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._formField = _formField;\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        this._componentDestroyed = false;\n        this._autocompleteDisabled = false;\n        /** Whether or not the label state is being overridden. */\n        this._manuallyFloatingLabel = false;\n        /** Subscription to viewport size changes. */\n        this._viewportSubscription = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n         * closed autocomplete from being reopened if the user switches to another browser tab and then\n         * comes back.\n         */\n        this._canOpenOnNextFocus = true;\n        /** Stream of keyboard events that can close the panel. */\n        this._closeKeyEventStream = new Subject();\n        /**\n         * Event handler for when the window is blurred. Needs to be an\n         * arrow function in order to preserve the context.\n         */\n        this._windowBlurHandler = () => {\n            // If the user blurred the window while the autocomplete is focused, it means that it'll be\n            // refocused when they come back. In this case we want to skip the first focus event, if the\n            // pane was closed, in order to avoid reopening it unintentionally.\n            this._canOpenOnNextFocus =\n                this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n        };\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when autocomplete has been touched` */\n        this._onTouched = () => { };\n        /**\n         * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n         * will render the panel underneath the trigger if there is enough space for it to fit in\n         * the viewport, otherwise the panel will be shown above it. If the position is set to\n         * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n         * whether it fits completely in the viewport.\n         */\n        this.position = 'auto';\n        /**\n         * `autocomplete` attribute to be set on the input element.\n         * @docs-private\n         */\n        this.autocompleteAttribute = 'off';\n        this._overlayAttached = false;\n        /** Stream of autocomplete option selections. */\n        this.optionSelections = defer(() => {\n            if (this.autocomplete && this.autocomplete.options) {\n                return merge(...this.autocomplete.options.map(option => option.onSelectionChange));\n            }\n            // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n            // Return a stream that we'll replace with the real one once everything is in place.\n            return this._zone.onStable\n                .pipe(take(1), switchMap(() => this.optionSelections));\n        });\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Whether the autocomplete is disabled. When disabled, the element will\n     * act as a regular input and the user won't be able to open the panel.\n     */\n    get autocompleteDisabled() { return this._autocompleteDisabled; }\n    set autocompleteDisabled(value) {\n        this._autocompleteDisabled = coerceBooleanProperty(value);\n    }\n    ngAfterViewInit() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            this._zone.runOutsideAngular(() => window.addEventListener('blur', this._windowBlurHandler));\n        }\n    }\n    ngOnChanges(changes) {\n        if (changes['position'] && this._positionStrategy) {\n            this._setStrategyPositions(this._positionStrategy);\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    ngOnDestroy() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('blur', this._windowBlurHandler);\n        }\n        this._viewportSubscription.unsubscribe();\n        this._componentDestroyed = true;\n        this._destroyPanel();\n        this._closeKeyEventStream.complete();\n    }\n    /** Whether or not the autocomplete panel is open. */\n    get panelOpen() {\n        return this._overlayAttached && this.autocomplete.showPanel;\n    }\n    /** Opens the autocomplete suggestion panel. */\n    openPanel() {\n        this._attachOverlay();\n        this._floatLabel();\n    }\n    /** Closes the autocomplete suggestion panel. */\n    closePanel() {\n        this._resetLabel();\n        if (!this._overlayAttached) {\n            return;\n        }\n        if (this.panelOpen) {\n            // Only emit if the panel was visible.\n            this.autocomplete.closed.emit();\n        }\n        this.autocomplete._isOpen = this._overlayAttached = false;\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n            this._closingActionsSubscription.unsubscribe();\n        }\n        // Note that in some cases this can end up being called after the component is destroyed.\n        // Add a check to ensure that we don't try to run change detection on a destroyed view.\n        if (!this._componentDestroyed) {\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the label is reset when the\n            // user clicks outside.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     */\n    updatePosition() {\n        if (this._overlayAttached) {\n            this._overlayRef.updatePosition();\n        }\n    }\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     */\n    get panelClosingActions() {\n        return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter(() => this._overlayAttached)), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef ?\n            this._overlayRef.detachments().pipe(filter(() => this._overlayAttached)) :\n            of()).pipe(\n        // Normalize the output so we return a consistent type.\n        map(event => event instanceof MatOptionSelectionChange ? event : null));\n    }\n    /** The currently active option, coerced to MatOption type. */\n    get activeOption() {\n        if (this.autocomplete && this.autocomplete._keyManager) {\n            return this.autocomplete._keyManager.activeItem;\n        }\n        return null;\n    }\n    /** Stream of clicks outside of the autocomplete panel. */\n    _getOutsideClickStream() {\n        return merge(fromEvent(this._document, 'click'), fromEvent(this._document, 'touchend'))\n            .pipe(filter(event => {\n            // If we're in the Shadow DOM, the event target will be the shadow root, so we have to\n            // fall back to check the first element in the path of the click event.\n            const clickTarget = (this._isInsideShadowRoot && event.composedPath ? event.composedPath()[0] :\n                event.target);\n            const formField = this._formField ? this._formField._elementRef.nativeElement : null;\n            const customOrigin = this.connectedTo ? this.connectedTo.elementRef.nativeElement : null;\n            return this._overlayAttached && clickTarget !== this._element.nativeElement &&\n                (!formField || !formField.contains(clickTarget)) &&\n                (!customOrigin || !customOrigin.contains(clickTarget)) &&\n                (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\n        }));\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        Promise.resolve(null).then(() => this._setTriggerValue(value));\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this._element.nativeElement.disabled = isDisabled;\n    }\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Prevent the default action on all escape key presses. This is here primarily to bring IE\n        // in line with other browsers. By default, pressing escape on IE will cause it to revert\n        // the input value to the one that it had on focus, however it won't dispatch any events\n        // which means that the model value will be out of sync with the view.\n        if (keyCode === ESCAPE && !hasModifierKey(event)) {\n            event.preventDefault();\n        }\n        if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n            this.activeOption._selectViaInteraction();\n            this._resetActiveItem();\n            event.preventDefault();\n        }\n        else if (this.autocomplete) {\n            const prevActiveItem = this.autocomplete._keyManager.activeItem;\n            const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n            if (this.panelOpen || keyCode === TAB) {\n                this.autocomplete._keyManager.onKeydown(event);\n            }\n            else if (isArrowKey && this._canOpen()) {\n                this.openPanel();\n            }\n            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n                this._scrollToOption(this.autocomplete._keyManager.activeItemIndex || 0);\n            }\n        }\n    }\n    _handleInput(event) {\n        let target = event.target;\n        let value = target.value;\n        // Based on `NumberValueAccessor` from forms.\n        if (target.type === 'number') {\n            value = value == '' ? null : parseFloat(value);\n        }\n        // If the input has a placeholder, IE will fire the `input` event on page load,\n        // focus and blur, in addition to when the user actually changed the value. To\n        // filter out all of the extra events, we save the value on focus and between\n        // `input` events, and we check whether it changed.\n        // See: https://connect.microsoft.com/IE/feedback/details/885747/\n        if (this._previousValue !== value) {\n            this._previousValue = value;\n            this._onChange(value);\n            if (this._canOpen() && this._document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n    _handleFocus() {\n        if (!this._canOpenOnNextFocus) {\n            this._canOpenOnNextFocus = true;\n        }\n        else if (this._canOpen()) {\n            this._previousValue = this._element.nativeElement.value;\n            this._attachOverlay();\n            this._floatLabel(true);\n        }\n    }\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @param shouldAnimate Whether the label should be animated when it is floated.\n     */\n    _floatLabel(shouldAnimate = false) {\n        if (this._formField && this._formField.floatLabel === 'auto') {\n            if (shouldAnimate) {\n                this._formField._animateAndLockLabel();\n            }\n            else {\n                this._formField.floatLabel = 'always';\n            }\n            this._manuallyFloatingLabel = true;\n        }\n    }\n    /** If the label has been manually elevated, return it to its normal state. */\n    _resetLabel() {\n        if (this._manuallyFloatingLabel) {\n            this._formField.floatLabel = 'auto';\n            this._manuallyFloatingLabel = false;\n        }\n    }\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     */\n    _subscribeToClosingActions() {\n        const firstStable = this._zone.onStable.pipe(take(1));\n        const optionChanges = this.autocomplete.options.changes.pipe(tap(() => this._positionStrategy.reapplyLastPosition()), \n        // Defer emitting to the stream until the next tick, because changing\n        // bindings in here will cause \"changed after checked\" errors.\n        delay(0));\n        // When the zone is stable initially, and when the option list changes...\n        return merge(firstStable, optionChanges)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap(() => {\n            const wasOpen = this.panelOpen;\n            this._resetActiveItem();\n            this.autocomplete._setVisibility();\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n                // If the `panelOpen` state changed, we need to make sure to emit the `opened`\n                // event, because we may not have emitted it when the panel was attached. This\n                // can happen if the users opens the panel and there are no options, but the\n                // options come in slightly later or as a result of the value changing.\n                if (wasOpen !== this.panelOpen) {\n                    this.autocomplete.opened.emit();\n                }\n            }\n            return this.panelClosingActions;\n        }), \n        // when the first closing event occurs...\n        take(1))\n            // set the value, close the panel, and complete.\n            .subscribe(event => this._setValueAndClose(event));\n    }\n    /** Destroys the autocomplete suggestion panel. */\n    _destroyPanel() {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    _setTriggerValue(value) {\n        const toDisplay = this.autocomplete && this.autocomplete.displayWith ?\n            this.autocomplete.displayWith(value) :\n            value;\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        const inputValue = toDisplay != null ? toDisplay : '';\n        // If it's used within a `MatFormField`, we should set it through the property so it can go\n        // through change detection.\n        if (this._formField) {\n            this._formField._control.value = inputValue;\n        }\n        else {\n            this._element.nativeElement.value = inputValue;\n        }\n        this._previousValue = inputValue;\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     */\n    _setValueAndClose(event) {\n        if (event && event.source) {\n            this._clearPreviousSelectedOption(event.source);\n            this._setTriggerValue(event.source.value);\n            this._onChange(event.source.value);\n            this._element.nativeElement.focus();\n            this.autocomplete._emitSelectEvent(event.source);\n        }\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     */\n    _clearPreviousSelectedOption(skip) {\n        this.autocomplete.options.forEach(option => {\n            if (option !== skip && option.selected) {\n                option.deselect();\n            }\n        });\n    }\n    _attachOverlay() {\n        if (!this.autocomplete && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatAutocompleteMissingPanelError();\n        }\n        // We want to resolve this once, as late as possible so that we can be\n        // sure that the element has been moved into its final place in the DOM.\n        if (this._isInsideShadowRoot == null) {\n            this._isInsideShadowRoot = !!_getShadowRoot(this._element.nativeElement);\n        }\n        let overlayRef = this._overlayRef;\n        if (!overlayRef) {\n            this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n            overlayRef = this._overlay.create(this._getOverlayConfig());\n            this._overlayRef = overlayRef;\n            // Use the `keydownEvents` in order to take advantage of\n            // the overlay event targeting provided by the CDK overlay.\n            overlayRef.keydownEvents().subscribe(event => {\n                // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n                // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n                if ((event.keyCode === ESCAPE && !hasModifierKey(event)) ||\n                    (event.keyCode === UP_ARROW && hasModifierKey(event, 'altKey'))) {\n                    this._resetActiveItem();\n                    this._closeKeyEventStream.next();\n                    // We need to stop propagation, otherwise the event will eventually\n                    // reach the input itself and cause the overlay to be reopened.\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n            });\n            this._viewportSubscription = this._viewportRuler.change().subscribe(() => {\n                if (this.panelOpen && overlayRef) {\n                    overlayRef.updateSize({ width: this._getPanelWidth() });\n                }\n            });\n        }\n        else {\n            // Update the trigger, panel width and direction, in case anything has changed.\n            this._positionStrategy.setOrigin(this._getConnectedElement());\n            overlayRef.updateSize({ width: this._getPanelWidth() });\n        }\n        if (overlayRef && !overlayRef.hasAttached()) {\n            overlayRef.attach(this._portal);\n            this._closingActionsSubscription = this._subscribeToClosingActions();\n        }\n        const wasOpen = this.panelOpen;\n        this.autocomplete._setVisibility();\n        this.autocomplete._isOpen = this._overlayAttached = true;\n        // We need to do an extra `panelOpen` check in here, because the\n        // autocomplete won't be shown if there are no options.\n        if (this.panelOpen && wasOpen !== this.panelOpen) {\n            this.autocomplete.opened.emit();\n        }\n    }\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._getOverlayPosition(),\n            scrollStrategy: this._scrollStrategy(),\n            width: this._getPanelWidth(),\n            direction: this._dir\n        });\n    }\n    _getOverlayPosition() {\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false);\n        this._setStrategyPositions(strategy);\n        this._positionStrategy = strategy;\n        return strategy;\n    }\n    /** Sets the positions on a position strategy based on the directive's input state. */\n    _setStrategyPositions(positionStrategy) {\n        // Note that we provide horizontal fallback positions, even though by default the dropdown\n        // width matches the input, because consumers can override the width. See #18854.\n        const belowPositions = [\n            { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n            { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' }\n        ];\n        // The overlay edge connected to the trigger should have squared corners, while\n        // the opposite end has rounded corners. We apply a CSS class to swap the\n        // border-radius based on the overlay position.\n        const panelClass = this._aboveClass;\n        const abovePositions = [\n            { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom', panelClass },\n            { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom', panelClass }\n        ];\n        let positions;\n        if (this.position === 'above') {\n            positions = abovePositions;\n        }\n        else if (this.position === 'below') {\n            positions = belowPositions;\n        }\n        else {\n            positions = [...belowPositions, ...abovePositions];\n        }\n        positionStrategy.withPositions(positions);\n    }\n    _getConnectedElement() {\n        if (this.connectedTo) {\n            return this.connectedTo.elementRef;\n        }\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n    }\n    _getPanelWidth() {\n        return this.autocomplete.panelWidth || this._getHostWidth();\n    }\n    /** Returns the width of the input element, so the panel width can match it. */\n    _getHostWidth() {\n        return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     */\n    _resetActiveItem() {\n        this.autocomplete._keyManager.setActiveItem(this.autocomplete.autoActiveFirstOption ? 0 : -1);\n    }\n    /** Determines whether the panel can be opened. */\n    _canOpen() {\n        const element = this._element.nativeElement;\n        return !element.readOnly && !element.disabled && !this._autocompleteDisabled;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        var _a;\n        return ((_a = this._document) === null || _a === void 0 ? void 0 : _a.defaultView) || window;\n    }\n    /** Scrolls to a particular option in the list. */\n    _scrollToOption(index) {\n        // Given that we are not actually focusing active options, we must manually adjust scroll\n        // to reveal options below the fold. First, we find the offset of the option from the top\n        // of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n        // the panel height + the option height, so the active option will be just visible at the\n        // bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n        // will become the offset. If that offset is visible within the panel already, the scrollTop is\n        // not adjusted.\n        const autocomplete = this.autocomplete;\n        const labelCount = _countGroupLabelsBeforeOption(index, autocomplete.options, autocomplete.optionGroups);\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            autocomplete._setScrollTop(0);\n        }\n        else {\n            const option = autocomplete.options.toArray()[index];\n            if (option) {\n                const element = option._getHostElement();\n                const newScrollPosition = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, autocomplete._getScrollTop(), autocomplete.panel.nativeElement.offsetHeight);\n                autocomplete._setScrollTop(newScrollPosition);\n            }\n        }\n    }\n}\n_MatAutocompleteTriggerBase.ɵfac = function _MatAutocompleteTriggerBase_Factory(t) { return new (t || _MatAutocompleteTriggerBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 9), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ViewportRuler)); };\n_MatAutocompleteTriggerBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteTriggerBase, inputs: { position: [\"matAutocompletePosition\", \"position\"], autocompleteAttribute: [\"autocomplete\", \"autocompleteAttribute\"], autocompleteDisabled: [\"matAutocompleteDisabled\", \"autocompleteDisabled\"], autocomplete: [\"matAutocomplete\", \"autocomplete\"], connectedTo: [\"matAutocompleteConnectedTo\", \"connectedTo\"] }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n_MatAutocompleteTriggerBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Overlay },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }, { type: Host }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ViewportRuler }\n];\n_MatAutocompleteTriggerBase.propDecorators = {\n    autocomplete: [{ type: Input, args: ['matAutocomplete',] }],\n    position: [{ type: Input, args: ['matAutocompletePosition',] }],\n    connectedTo: [{ type: Input, args: ['matAutocompleteConnectedTo',] }],\n    autocompleteAttribute: [{ type: Input, args: ['autocomplete',] }],\n    autocompleteDisabled: [{ type: Input, args: ['matAutocompleteDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatAutocompleteTriggerBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.Overlay }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }, {\n                type: Host\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc4.ViewportRuler }]; }, { position: [{\n            type: Input,\n            args: ['matAutocompletePosition']\n        }], autocompleteAttribute: [{\n            type: Input,\n            args: ['autocomplete']\n        }], autocompleteDisabled: [{\n            type: Input,\n            args: ['matAutocompleteDisabled']\n        }], autocomplete: [{\n            type: Input,\n            args: ['matAutocomplete']\n        }], connectedTo: [{\n            type: Input,\n            args: ['matAutocompleteConnectedTo']\n        }] }); })();\nclass MatAutocompleteTrigger extends _MatAutocompleteTriggerBase {\n    constructor() {\n        super(...arguments);\n        this._aboveClass = 'mat-autocomplete-panel-above';\n    }\n}\nMatAutocompleteTrigger.ɵfac = function MatAutocompleteTrigger_Factory(t) { return ɵMatAutocompleteTrigger_BaseFactory(t || MatAutocompleteTrigger); };\nMatAutocompleteTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteTrigger, selectors: [[\"input\", \"matAutocomplete\", \"\"], [\"textarea\", \"matAutocomplete\", \"\"]], hostAttrs: [1, \"mat-autocomplete-trigger\"], hostVars: 7, hostBindings: function MatAutocompleteTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focusin\", function MatAutocompleteTrigger_focusin_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatAutocompleteTrigger_blur_HostBindingHandler() { return ctx._onTouched(); })(\"input\", function MatAutocompleteTrigger_input_HostBindingHandler($event) { return ctx._handleInput($event); })(\"keydown\", function MatAutocompleteTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"autocomplete\", ctx.autocompleteAttribute)(\"role\", ctx.autocompleteDisabled ? null : \"combobox\")(\"aria-autocomplete\", ctx.autocompleteDisabled ? null : \"list\")(\"aria-activedescendant\", ctx.panelOpen && ctx.activeOption ? ctx.activeOption.id : null)(\"aria-expanded\", ctx.autocompleteDisabled ? null : ctx.panelOpen.toString())(\"aria-owns\", ctx.autocompleteDisabled || !ctx.panelOpen ? null : ctx.autocomplete == null ? null : ctx.autocomplete.id)(\"aria-haspopup\", !ctx.autocompleteDisabled);\n    } }, exportAs: [\"matAutocompleteTrigger\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_AUTOCOMPLETE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatAutocompleteTrigger_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAutocompleteTrigger);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n                host: {\n                    'class': 'mat-autocomplete-trigger',\n                    '[attr.autocomplete]': 'autocompleteAttribute',\n                    '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n                    '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n                    '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n                    '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n                    '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n                    '[attr.aria-haspopup]': '!autocompleteDisabled',\n                    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                    // a little earlier. This avoids issues where IE delays the focusing of the input.\n                    '(focusin)': '_handleFocus()',\n                    '(blur)': '_onTouched()',\n                    '(input)': '_handleInput($event)',\n                    '(keydown)': '_handleKeydown($event)'\n                },\n                exportAs: 'matAutocompleteTrigger',\n                providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatAutocompleteModule {\n}\nMatAutocompleteModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatAutocompleteModule });\nMatAutocompleteModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatAutocompleteModule_Factory(t) { return new (t || MatAutocompleteModule)(); }, providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n            CommonModule\n        ], CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatAutocompleteModule, { declarations: function () { return [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin]; }, imports: function () { return [OverlayModule,\n        MatOptionModule,\n        MatCommonModule,\n        CommonModule]; }, exports: function () { return [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin, CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                    CommonModule\n                ],\n                exports: [\n                    MatAutocomplete,\n                    MatAutocompleteTrigger,\n                    MatAutocompleteOrigin,\n                    CdkScrollableModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n                providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTOCOMPLETE_OPTION_HEIGHT, AUTOCOMPLETE_PANEL_HEIGHT, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocomplete, MatAutocompleteModule, MatAutocompleteOrigin, MatAutocompleteSelectedEvent, MatAutocompleteTrigger, _MatAutocompleteBase, _MatAutocompleteOriginBase, _MatAutocompleteTriggerBase, getMatAutocompleteMissingPanelError };\n\n//# sourceMappingURL=autocomplete.js.map","import { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MAT_LABEL_GLOBAL_OPTIONS, MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n} }\nfunction MatFormField_label_9_ng_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_ng_content_3_Template, 1, 0, \"ng-content\", 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r16._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = new InjectionToken('MatError');\n/** Single error message to be shown underneath the form field. */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_ERROR, useExisting: MatError }])] });\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                },\n                providers: [{ provide: MAT_ERROR, useExisting: MatError }]\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nconst matFormFieldAnimations = {\n    /** Animation that transitions the form field's error and hint messages. */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** An interface which allows a control to work inside of a `MatFormField`. */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `MatHint`. It serves as\n * alternative token to the actual `MatHint` class which could cause unnecessary\n * retention of the class and its directive metadata.\n *\n * *Note*: This is not part of the public API as the MDC-based form-field will not\n * need a lightweight token for `MatHint` and we want to reduce breaking changes.\n */\nconst _MAT_HINT = new InjectionToken('MatHint');\n/** Hint text to be shown underneath the form field control. */\nclass MatHint {\n    constructor() {\n        /** Whether to align the hint label at the start or end of the line. */\n        this.align = 'start';\n        /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-hint-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: _MAT_HINT, useExisting: MatHint }])] });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-form-field-hint-end]': 'align === \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                },\n                providers: [{ provide: _MAT_HINT, useExisting: MatHint }]\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The floating label for a `mat-form-field`. */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_PREFIX, useExisting: MatPrefix }])] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]',\n                providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_SUFFIX, useExisting: MatSuffix }])] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]',\n                providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$2 = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nclass MatFormFieldBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/**\n * Base class to which we're applying the form field mixins.\n * @docs-private\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/** Container for form controls that applies Material Design styling and behavior. */\nclass MatFormField extends _MatFormFieldMixinBase {\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /** Override for the logic that disables the label animation in certain cases. */\n        this._showAlwaysAnimate = false;\n        /** State of the mat-hint and mat-error animations. */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the label element.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /** The form-field appearance style. */\n    get appearance() { return this._appearance; }\n    set appearance(value) {\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /** Whether the required marker should be hidden. */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /** Whether the floating label should always float or not. */\n    _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /** Whether the label can float or not. */\n    _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /** Text for the form field hint. */\n    get hintLabel() { return this._hintLabel; }\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * Gets the id of the label element. If no label is present, returns `null`.\n     */\n    getLabelId() {\n        return this._hasFloatingLabel() ? this._labelId : null;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    ngAfterContentInit() {\n        this._validateControlChild();\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith(null)).subscribe(() => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            });\n        });\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        });\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular(() => {\n                        requestAnimationFrame(() => this.updateOutlineGap());\n                    });\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            });\n        }\n    }\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop) {\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    _hasLabel() {\n        return !!(this._labelChildNonStatic || this._labelChildStatic);\n    }\n    _shouldLabelFloat() {\n        return this._canLabelFloat() &&\n            ((this._control && this._control.shouldLabelFloat) || this._shouldAlwaysFloat());\n    }\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /** Determines whether to display hints or errors. */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /** Animates the placeholder up and locks it in position. */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat()) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(() => {\n                    this._showAlwaysAnimate = false;\n                });\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     */\n    _validateHints() {\n        if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            let startHint;\n            let endHint;\n            this._hintChildren.forEach((hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            });\n        }\n    }\n    /** Gets the default float label state. */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || this._labelOptions.float || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            let ids = [];\n            // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n            if (this._control.userAriaDescribedBy &&\n                typeof this._control.userAriaDescribedBy === 'string') {\n                ids.push(...this._control.userAriaDescribedBy.split(' '));\n            }\n            if (this._getDisplayedMessages() === 'hint') {\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'start') : null;\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'end') : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids.push(...this._errorChildren.map(error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /** Throws an error if the form field's control is missing. */\n    _validateControlChild() {\n        if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     */\n    updateOutlineGap() {\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        let startWidth = 0;\n        let gapWidth = 0;\n        const container = this._connectionContainerRef.nativeElement;\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            const containerStart = this._getStartEnd(containerRect);\n            const labelChildren = labelEl.children;\n            const labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n            let labelWidth = 0;\n            for (let i = 0; i < labelChildren.length; i++) {\n                labelWidth += labelChildren[i].offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /** Gets the start end of the rect considering the current directionality. */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /** Checks whether the form field is attached to the DOM. */\n    _isAttachedToDOM() {\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return document.documentElement.contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_ERROR, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _MAT_HINT, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_PREFIX, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_SUFFIX, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat())(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MAT_ERROR, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [_MAT_HINT, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MAT_PREFIX, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MAT_SUFFIX, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat()',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                ],\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MAT_ERROR, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [_MAT_HINT, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MAT_PREFIX, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MAT_SUFFIX, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            ObserversModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [MatCommonModule, MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, _MAT_HINT, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","import { SecurityContext, ɵɵdefineInjectable, ɵɵinject, ErrorHandler, Injectable, Optional, Inject, SkipSelf, InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Attribute, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DOCUMENT } from '@angular/common';\nimport { of, throwError, forkJoin, Subscription } from 'rxjs';\nimport { tap, map, catchError, finalize, share, take } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nconst _c0 = [\"*\"];\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including @angular/common/http.\n * @docs-private\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * @param url URL that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * @param literal HTML that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * @docs-private\n */\nclass SvgIconConfig {\n    constructor(url, svgText, options) {\n        this.url = url;\n        this.svgText = svgText;\n        this.options = options;\n    }\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        this._errorHandler = _errorHandler;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /** Cache for icons loaded by direct URLs. */\n        this._cachedIconsByUrl = new Map();\n        /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\n        this._inProgressUrlFetches = new Map();\n        /** Map from font identifiers to their CSS class names. Used for icon fonts. */\n        this._fontCssClassesByAlias = new Map();\n        /**\n         * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n         * The default 'material-icons' value assumes that the material icon font has been loaded as\n         * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = 'material-icons';\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIcon(iconName, url, options) {\n        return this.addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n        return this.addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        // TODO: add an ngDevMode check\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig('', cleanLiteral, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @param url\n     */\n    addSvgIconSet(url, options) {\n        return this.addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteral(literal, options) {\n        return this.addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param url\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig('', cleanLiteral, options));\n    }\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @param alias Alias for the font.\n     * @param className Class name override to be used instead of the alias.\n     */\n    registerFontClassAlias(alias, className = alias) {\n        this._fontCssClassesByAlias.set(alias, className);\n        return this;\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     */\n    classNameForFontAlias(alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @param className\n     */\n    setDefaultFontSetClass(className) {\n        this._defaultFontSetClass = className;\n        return this;\n    }\n    /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    getDefaultFontSetClass() {\n        return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param safeUrl URL from which to fetch the SVG icon.\n     */\n    getSvgIconFromUrl(safeUrl) {\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        const cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl, null)).pipe(tap(svg => this._cachedIconsByUrl.set(url, svg)), map(svg => cloneSvg(svg)));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param name Name of the icon to be retrieved.\n     * @param namespace Namespace in which to look for the icon.\n     */\n    getNamedSvgIcon(name, namespace = '') {\n        // Return (copy of) cached icon if possible.\n        const key = iconKey(namespace, name);\n        const config = this._svgIconConfigs.get(key);\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        const iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    }\n    ngOnDestroy() {\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     */\n    _getSvgFromConfig(config) {\n        if (config.svgText) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(this._svgElementFromConfig(config)));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(map(svg => cloneSvg(svg)));\n        }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        const iconSetFetchRequests = iconSetConfigs\n            .filter(iconSetConfig => !iconSetConfig.svgText)\n            .map(iconSetConfig => {\n            return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError((err) => {\n                const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n                return of(null);\n            }));\n        });\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map(() => {\n            const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            // TODO: add an ngDevMode check\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        }));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n            const config = iconSetConfigs[i];\n            // Parsing the icon set's text into an SVG element can be expensive. We can avoid some of\n            // the parsing by doing a quick check using `indexOf` to see if there's any chance for the\n            // icon to be in the set. This won't be 100% accurate, but it should help us avoid at least\n            // some of the parsing.\n            if (config.svgText && config.svgText.indexOf(iconName) > -1) {\n                const svg = this._svgElementFromConfig(config);\n                const foundIcon = this._extractSvgIconFromSet(svg, iconName, config.options);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     */\n    _loadSvgIconFromConfig(config) {\n        return this._fetchIcon(config).pipe(tap(svgText => config.svgText = svgText), map(() => this._svgElementFromConfig(config)));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the\n     * SvgIconConfig and attaches it to the config.\n     */\n    _loadSvgIconSetFromConfig(config) {\n        if (config.svgText) {\n            return of(null);\n        }\n        return this._fetchIcon(config).pipe(tap(svgText => config.svgText = svgText));\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n        // Use the `id=\"iconName\"` syntax in order to escape special\n        // characters in the ID (versus using the #iconName syntax).\n        const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        const iconElement = iconSource.cloneNode(true);\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes(iconElement, options);\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        const svg = this._svgElementFromString('<svg></svg>');\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     */\n    _svgElementFromString(str) {\n        const div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        const svg = div.querySelector('svg');\n        // TODO: add an ngDevMode check\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     */\n    _toSvgElement(element) {\n        const svg = this._svgElementFromString('<svg></svg>');\n        const attributes = element.attributes;\n        // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n        for (let i = 0; i < attributes.length; i++) {\n            const { name, value } = attributes[i];\n            if (name !== 'id') {\n                svg.setAttribute(name, value);\n            }\n        }\n        for (let i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     */\n    _setSvgAttributes(svg, options) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        if (options && options.viewBox) {\n            svg.setAttribute('viewBox', options.viewBox);\n        }\n        return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given icon. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     */\n    _fetchIcon(iconConfig) {\n        var _a;\n        const { url: safeUrl, options } = iconConfig;\n        const withCredentials = (_a = options === null || options === void 0 ? void 0 : options.withCredentials) !== null && _a !== void 0 ? _a : false;\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        // TODO: add an ngDevMode check\n        if (safeUrl == null) {\n            throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n        }\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        // TODO: add an ngDevMode check\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        const inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        const req = this._httpClient.get(url, { responseType: 'text', withCredentials }).pipe(finalize(() => this._inProgressUrlFetches.delete(url)), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param iconName Name under which to register the config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n        this._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return this;\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconSetConfig(namespace, config) {\n        const configNamespace = this._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            this._iconSetConfigs.set(namespace, [config]);\n        }\n        return this;\n    }\n    /** Parses a config's text into an SVG element. */\n    _svgElementFromConfig(config) {\n        if (!config.svgElement) {\n            const svg = this._svgElementFromString(config.svgText);\n            this._setSvgAttributes(svg, config.options);\n            config.svgElement = svg;\n        }\n        return config.svgElement;\n    }\n}\nMatIconRegistry.ɵfac = function MatIconRegistry_Factory(t) { return new (t || MatIconRegistry)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient, 8), ɵngcc0.ɵɵinject(ɵngcc2.DomSanitizer), ɵngcc0.ɵɵinject(DOCUMENT, 8), ɵngcc0.ɵɵinject(ɵngcc0.ErrorHandler)); };\nMatIconRegistry.ɵprov = ɵɵdefineInjectable({ factory: function MatIconRegistry_Factory() { return new MatIconRegistry(ɵɵinject(HttpClient, 8), ɵɵinject(DomSanitizer), ɵɵinject(DOCUMENT, 8), ɵɵinject(ErrorHandler)); }, token: MatIconRegistry, providedIn: \"root\" });\nMatIconRegistry.ctorParameters = () => [\n    { type: HttpClient, decorators: [{ type: Optional }] },\n    { type: DomSanitizer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ErrorHandler }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIconRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.HttpClient, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DomSanitizer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ErrorHandler }]; }, null); })();\n/** @docs-private */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, errorHandler, document) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/** @docs-private */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        ErrorHandler,\n        [new Optional(), DOCUMENT],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/** Clones an SVGElement while preserving type information. */\nfunction cloneSvg(svg) {\n    return svg.cloneNode(true);\n}\n/** Returns the cache key to use for an icon namespace and name. */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatIcon.\n/** @docs-private */\nclass MatIconBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatIconMixinBase = mixinColor(MatIconBase);\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY\n});\n/** @docs-private */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    const _document = inject(DOCUMENT);\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: () => _location ? (_location.pathname + _location.search) : ''\n    };\n}\n/** SVG attributes that accept a FuncIRI (e.g. `url(<something>)`). */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke'\n];\nconst ɵ0 = attr => `[${attr}]`;\n/** Selector that can be used to find all elements that are using a `FuncIRI`. */\nconst funcIriAttributeSelector = funcIriAttributes.map(ɵ0).join(', ');\n/** Regex that can be used to extract the id out of a FuncIRI. */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon extends _MatIconMixinBase {\n    constructor(elementRef, _iconRegistry, ariaHidden, _location, _errorHandler) {\n        super(elementRef);\n        this._iconRegistry = _iconRegistry;\n        this._location = _location;\n        this._errorHandler = _errorHandler;\n        this._inline = false;\n        /** Subscription to the current in-progress SVG icon request. */\n        this._currentIconFetch = Subscription.EMPTY;\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n    /**\n     * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n     * the element the icon is contained in.\n     */\n    get inline() {\n        return this._inline;\n    }\n    set inline(inline) {\n        this._inline = coerceBooleanProperty(inline);\n    }\n    /** Name of the icon in the SVG icon set. */\n    get svgIcon() { return this._svgIcon; }\n    set svgIcon(value) {\n        if (value !== this._svgIcon) {\n            if (value) {\n                this._updateSvgIcon(value);\n            }\n            else if (this._svgIcon) {\n                this._clearSvgElement();\n            }\n            this._svgIcon = value;\n        }\n    }\n    /** Font set that the icon is a part of. */\n    get fontSet() { return this._fontSet; }\n    set fontSet(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontSet) {\n            this._fontSet = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    /** Name of an icon within a font set. */\n    get fontIcon() { return this._fontIcon; }\n    set fontIcon(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontIcon) {\n            this._fontIcon = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     */\n    _splitIconName(iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        const parts = iconName.split(':');\n        switch (parts.length) {\n            case 1: return ['', parts[0]]; // Use default namespace.\n            case 2: return parts;\n            default: throw Error(`Invalid icon name: \"${iconName}\"`); // TODO: add an ngDevMode check\n        }\n    }\n    ngOnInit() {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        this._updateFontIconClasses();\n    }\n    ngAfterViewChecked() {\n        const cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && cachedElements.size) {\n            const newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._currentIconFetch.unsubscribe();\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    }\n    _usingFontIcon() {\n        return !this.svgIcon;\n    }\n    _setSvgElement(svg) {\n        this._clearSvgElement();\n        // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.\n        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n        // Do this before inserting the element into the DOM, in order to avoid a style recalculation.\n        const styleTags = svg.querySelectorAll('style');\n        for (let i = 0; i < styleTags.length; i++) {\n            styleTags[i].textContent += ' ';\n        }\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        const path = this._location.getPathname();\n        this._previousPath = path;\n        this._cacheChildrenWithExternalReferences(svg);\n        this._prependPathToReferences(path);\n        this._elementRef.nativeElement.appendChild(svg);\n    }\n    _clearSvgElement() {\n        const layoutElement = this._elementRef.nativeElement;\n        let childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            const child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                layoutElement.removeChild(child);\n            }\n        }\n    }\n    _updateFontIconClasses() {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        const elem = this._elementRef.nativeElement;\n        const fontSetClass = this.fontSet ?\n            this._iconRegistry.classNameForFontAlias(this.fontSet) :\n            this._iconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                elem.classList.remove(this._previousFontSetClass);\n            }\n            if (fontSetClass) {\n                elem.classList.add(fontSetClass);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     */\n    _cleanupFontValue(value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     */\n    _prependPathToReferences(path) {\n        const elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach((attrs, element) => {\n                attrs.forEach(attr => {\n                    element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                });\n            });\n        }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     */\n    _cacheChildrenWithExternalReferences(element) {\n        const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        const elements = this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map();\n        for (let i = 0; i < elementsWithFuncIri.length; i++) {\n            funcIriAttributes.forEach(attr => {\n                const elementWithReference = elementsWithFuncIri[i];\n                const value = elementWithReference.getAttribute(attr);\n                const match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    let attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    attributes.push({ name: attr, value: match[1] });\n                }\n            });\n        }\n    }\n    /** Sets a new SVG icon with a particular name. */\n    _updateSvgIcon(rawName) {\n        this._svgNamespace = null;\n        this._svgName = null;\n        this._currentIconFetch.unsubscribe();\n        if (rawName) {\n            const [namespace, iconName] = this._splitIconName(rawName);\n            if (namespace) {\n                this._svgNamespace = namespace;\n            }\n            if (iconName) {\n                this._svgName = iconName;\n            }\n            this._currentIconFetch = this._iconRegistry.getNamedSvgIcon(iconName, namespace)\n                .pipe(take(1))\n                .subscribe(svg => this._setSvgElement(svg), (err) => {\n                const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n            });\n        }\n    }\n}\nMatIcon.ɵfac = function MatIcon_Factory(t) { return new (t || MatIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatIconRegistry), ɵngcc0.ɵɵinjectAttribute('aria-hidden'), ɵngcc0.ɵɵdirectiveInject(MAT_ICON_LOCATION), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ErrorHandler)); };\nMatIcon.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatIcon, selectors: [[\"mat-icon\"]], hostAttrs: [\"role\", \"img\", 1, \"mat-icon\", \"notranslate\"], hostVars: 7, hostBindings: function MatIcon_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"data-mat-icon-type\", ctx._usingFontIcon() ? \"font\" : \"svg\")(\"data-mat-icon-name\", ctx._svgName || ctx.fontIcon)(\"data-mat-icon-namespace\", ctx._svgNamespace || ctx.fontSet);\n        ɵngcc0.ɵɵclassProp(\"mat-icon-inline\", ctx.inline)(\"mat-icon-no-color\", ctx.color !== \"primary\" && ctx.color !== \"accent\" && ctx.color !== \"warn\");\n    } }, inputs: { color: \"color\", inline: \"inline\", svgIcon: \"svgIcon\", fontSet: \"fontSet\", fontIcon: \"fontIcon\" }, exportAs: [\"matIcon\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatIcon_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatIcon.ctorParameters = () => [\n    { type: ElementRef },\n    { type: MatIconRegistry },\n    { type: String, decorators: [{ type: Attribute, args: ['aria-hidden',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_ICON_LOCATION,] }] },\n    { type: ErrorHandler }\n];\nMatIcon.propDecorators = {\n    inline: [{ type: Input }],\n    svgIcon: [{ type: Input }],\n    fontSet: [{ type: Input }],\n    fontIcon: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIcon, [{\n        type: Component,\n        args: [{\n                template: '<ng-content></ng-content>',\n                selector: 'mat-icon',\n                exportAs: 'matIcon',\n                inputs: ['color'],\n                host: {\n                    'role': 'img',\n                    'class': 'mat-icon notranslate',\n                    '[attr.data-mat-icon-type]': '_usingFontIcon() ? \"font\" : \"svg\"',\n                    '[attr.data-mat-icon-name]': '_svgName || fontIcon',\n                    '[attr.data-mat-icon-namespace]': '_svgNamespace || fontSet',\n                    '[class.mat-icon-inline]': 'inline',\n                    '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: MatIconRegistry }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['aria-hidden']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_ICON_LOCATION]\n            }] }, { type: ɵngcc0.ErrorHandler }]; }, { inline: [{\n            type: Input\n        }], svgIcon: [{\n            type: Input\n        }], fontSet: [{\n            type: Input\n        }], fontIcon: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatIconModule {\n}\nMatIconModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatIconModule });\nMatIconModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatIconModule_Factory(t) { return new (t || MatIconModule)(); }, imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatIconModule, { declarations: function () { return [MatIcon]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatIcon, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIconModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatIcon, MatCommonModule],\n                declarations: [MatIcon]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError, ɵ0 };\n\n//# sourceMappingURL=icon.js.map","import { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Optional, Self, Inject, NgZone, HostListener, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MAT_FORM_FIELD, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `@angular/cdk/text-field` instead.\n * @breaking-change 8.0.0\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/text-field';\nimport * as ɵngcc5 from '@angular/material/form-field';\nclass MatTextareaAutosize extends CdkTextareaAutosize {\n    get matAutosizeMinRows() { return this.minRows; }\n    set matAutosizeMinRows(value) { this.minRows = value; }\n    get matAutosizeMaxRows() { return this.maxRows; }\n    set matAutosizeMaxRows(value) { this.maxRows = value; }\n    get matAutosize() { return this.enabled; }\n    set matAutosize(value) { this.enabled = value; }\n    get matTextareaAutosize() { return this.enabled; }\n    set matTextareaAutosize(value) { this.enabled = value; }\n}\nMatTextareaAutosize.ɵfac = function MatTextareaAutosize_Factory(t) { return ɵMatTextareaAutosize_BaseFactory(t || MatTextareaAutosize); };\nMatTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTextareaAutosize, selectors: [[\"textarea\", \"mat-autosize\", \"\"], [\"textarea\", \"matTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\", \"mat-autosize\"], inputs: { cdkAutosizeMinRows: \"cdkAutosizeMinRows\", cdkAutosizeMaxRows: \"cdkAutosizeMaxRows\", matAutosizeMinRows: \"matAutosizeMinRows\", matAutosizeMaxRows: \"matAutosizeMaxRows\", matAutosize: [\"mat-autosize\", \"matAutosize\"], matTextareaAutosize: \"matTextareaAutosize\" }, exportAs: [\"matTextareaAutosize\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTextareaAutosize.propDecorators = {\n    matAutosizeMinRows: [{ type: Input }],\n    matAutosizeMaxRows: [{ type: Input }],\n    matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n    matTextareaAutosize: [{ type: Input }]\n};\nconst ɵMatTextareaAutosize_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatTextareaAutosize);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'matTextareaAutosize',\n                inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                host: {\n                    'class': 'cdk-textarea-autosize mat-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], null, { matAutosizeMinRows: [{\n            type: Input\n        }], matAutosizeMaxRows: [{\n            type: Input\n        }], matAutosize: [{\n            type: Input,\n            args: ['mat-autosize']\n        }], matTextareaAutosize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/** @docs-private */\nclass MatInputBase {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /** @docs-private */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nconst _MatInputMixinBase = mixinErrorState(MatInputBase);\n/** Directive that allows a native input to work inside a `MatFormField`. */\nclass MatInput extends _MatInputMixinBase {\n    constructor(_elementRef, _platform, \n    /** @docs-private */\n    ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone, \n    // TODO: Remove this once the legacy appearance has been removed. We only need\n    // to inject the form-field for determining whether the placeholder has been promoted.\n    _formField) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this.ngControl = ngControl;\n        this._autofillMonitor = _autofillMonitor;\n        this._formField = _formField;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._required = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter(t => getSupportedInputTypes().has(t));\n        const element = this._elementRef.nativeElement;\n        const nodeName = element.nodeName.toLowerCase();\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular(() => {\n                _elementRef.nativeElement.addEventListener('keyup', (event) => {\n                    let el = event.target;\n                    if (!el.value && !el.selectionStart && !el.selectionEnd) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                });\n            });\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = nodeName === 'select';\n        this._isTextarea = nodeName === 'textarea';\n        if (this._isNativeSelect) {\n            this.controlType = element.multiple ? 'mat-native-select-multiple' :\n                'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() { return this._id; }\n    set id(value) { this._id = value || this._uid; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Input type of the element. */\n    get type() { return this._type; }\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() { return this._inputValueAccessor.value; }\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /** Whether the element is readonly. */\n    get readonly() { return this._readonly; }\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            });\n        }\n    }\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n        // We need to dirty-check and set the placeholder attribute ourselves, because whether it's\n        // present or not depends on a query which is prone to \"changed after checked\" errors.\n        this._dirtyCheckPlaceholder();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    /** Callback for the cases where the focused state of the input changes. */\n    // tslint:disable:no-host-decorator-in-concrete\n    // tslint:enable:no-host-decorator-in-concrete\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /** Does some manual dirty checking on the native input `placeholder` attribute. */\n    _dirtyCheckPlaceholder() {\n        var _a, _b;\n        // If we're hiding the native placeholder, it should also be cleared from the DOM, otherwise\n        // screen readers will read it out twice: once from the label and once from the attribute.\n        // TODO: can be removed once we get rid of the `legacy` style for the form field, because it's\n        // the only one that supports promoting the placeholder to a label.\n        const placeholder = ((_b = (_a = this._formField) === null || _a === void 0 ? void 0 : _a._hideControlPlaceholder) === null || _b === void 0 ? void 0 : _b.call(_a)) ? null : this.placeholder;\n        if (placeholder !== this._previousPlaceholder) {\n            const element = this._elementRef.nativeElement;\n            this._previousPlaceholder = placeholder;\n            placeholder ?\n                element.setAttribute('placeholder', placeholder) : element.removeAttribute('placeholder');\n        }\n    }\n    /** Does some manual dirty checking on the native input `value` property. */\n    _dirtyCheckNativeValue() {\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /** Make sure the input is a supported type. */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /** Checks whether the input type is one of the types that are never empty. */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /** Checks whether the input is invalid based on the native validation. */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        let validity = this._elementRef.nativeElement.validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n            !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            const selectElement = this._elementRef.nativeElement;\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return this.focused || selectElement.multiple || !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        if (ids.length) {\n            this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            this._elementRef.nativeElement.removeAttribute('aria-describedby');\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n}\nMatInput.ɵfac = function MatInput_Factory(t) { return new (t || MatInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AutofillMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8)); };\nMatInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInput, selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]], hostAttrs: [1, \"mat-input-element\", \"mat-form-field-autofill-control\"], hostVars: 9, hostBindings: function MatInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatInput_focus_HostBindingHandler() { return ctx._focusChanged(true); })(\"blur\", function MatInput_blur_HostBindingHandler() { return ctx._focusChanged(false); })(\"input\", function MatInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"data-placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-invalid\", ctx.errorState)(\"aria-required\", ctx.required.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-input-server\", ctx._isServer);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", required: \"required\", type: \"type\", value: \"value\", readonly: \"readonly\", placeholder: \"placeholder\", errorStateMatcher: \"errorStateMatcher\", userAriaDescribedBy: [\"aria-describedby\", \"userAriaDescribedBy\"] }, exportAs: [\"matInput\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatInput }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nMatInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n    { type: AutofillMonitor },\n    { type: NgZone },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] }\n];\nMatInput.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    type: [{ type: Input }],\n    errorStateMatcher: [{ type: Input }],\n    userAriaDescribedBy: [{ type: Input, args: ['aria-describedby',] }],\n    value: [{ type: Input }],\n    readonly: [{ type: Input }],\n    _focusChanged: [{ type: HostListener, args: ['focus', ['true'],] }, { type: HostListener, args: ['blur', ['false'],] }],\n    _onInput: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInput, [{\n        type: Directive,\n        args: [{\n                selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                exportAs: 'matInput',\n                host: {\n                    /**\n                     * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                     */\n                    'class': 'mat-input-element mat-form-field-autofill-control',\n                    '[class.mat-input-server]': '_isServer',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[attr.id]': 'id',\n                    // At the time of writing, we have a lot of customer tests that look up the input based on its\n                    // placeholder. Since we sometimes omit the placeholder attribute from the DOM to prevent screen\n                    // readers from reading it twice, we have to keep it somewhere in the DOM for the lookup.\n                    '[attr.data-placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-required]': 'required.toString()'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatInput }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [MAT_INPUT_VALUE_ACCESSOR]\n            }] }, { type: ɵngcc4.AutofillMonitor }, { type: ɵngcc0.NgZone }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }]; }, { id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    /** Callback for the cases where the focused state of the input changes. */\n    // tslint:disable:no-host-decorator-in-concrete\n    // tslint:enable:no-host-decorator-in-concrete\n    _focusChanged: [{\n            type: HostListener,\n            args: ['focus', ['true']]\n        }, {\n            type: HostListener,\n            args: ['blur', ['false']]\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _onInput: [{\n            type: HostListener,\n            args: ['input']\n        }], placeholder: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }], userAriaDescribedBy: [{\n            type: Input,\n            args: ['aria-describedby']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatInputModule {\n}\nMatInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatInputModule });\nMatInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatInputModule_Factory(t) { return new (t || MatInputModule)(); }, providers: [ErrorStateMatcher], imports: [[\n            TextFieldModule,\n            MatFormFieldModule,\n        ], TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatInputModule, { declarations: function () { return [MatInput, MatTextareaAutosize]; }, imports: function () { return [TextFieldModule,\n        MatFormFieldModule]; }, exports: function () { return [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule, MatInput, MatTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatInput, MatTextareaAutosize],\n                imports: [\n                    TextFieldModule,\n                    MatFormFieldModule,\n                ],\n                exports: [\n                    TextFieldModule,\n                    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                    // be used together with `MatFormField`.\n                    MatFormFieldModule,\n                    MatInput,\n                    MatTextareaAutosize,\n                ],\n                providers: [ErrorStateMatcher]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, MatTextareaAutosize, getMatInputUnsupportedTypeError };\n\n//# sourceMappingURL=input.js.map","import { FocusMonitor, FocusKeyManager, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { InjectionToken, Directive, TemplateRef, ComponentFactoryResolver, ApplicationRef, Injector, ViewContainerRef, Inject, ChangeDetectorRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Input, HostListener, QueryList, EventEmitter, NgZone, ContentChildren, ViewChild, ContentChild, Output, Self, NgModule } from '@angular/core';\nimport { Subject, Subscription, merge, of, asapScheduler } from 'rxjs';\nimport { startWith, switchMap, take, filter, takeUntil, delay } from 'rxjs/operators';\nimport { trigger, state, style, transition, group, query, animate } from '@angular/animations';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinDisableRipple, mixinDisabled, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\n\nconst _c0 = [\"mat-menu-item\", \"\"];\nconst _c1 = [\"*\"];\nfunction _MatMenu_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵlistener(\"keydown\", function _MatMenu_ng_template_0_Template_div_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1._handleKeydown($event); })(\"click\", function _MatMenu_ng_template_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.closed.emit(\"click\"); })(\"@transformMenu.start\", function _MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4._onAnimationStart($event); })(\"@transformMenu.done\", function _MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5._onAnimationDone($event); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.panelId)(\"ngClass\", ctx_r0._classList)(\"@transformMenu\", ctx_r0._panelAnimationState);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r0.ariaLabel || null)(\"aria-labelledby\", ctx_r0.ariaLabelledby || null)(\"aria-describedby\", ctx_r0.ariaDescribedby || null);\n} }\nconst matMenuAnimations = {\n    /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mat-menu-content, .mat-mdc-menu-content', animate('100ms linear', style({\n                opacity: 1\n            }))),\n            animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'scale(1)' })),\n        ])),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatMenuContent`. It serves\n * as alternative token to the actual `MatMenuContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_MENU_CONTENT = new InjectionToken('MatMenuContent');\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nclass MatMenuContent {\n    constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Emits when the menu content has been attached. */\n        this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        const element = this._template.elementRef.nativeElement;\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode.insertBefore(this._outlet.outletElement, element);\n        // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n        // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n        // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n        // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n        // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n        // @breaking-change 9.0.0 Make change detector ref required\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\nMatMenuContent.ɵfac = function MatMenuContent_Factory(t) { return new (t || MatMenuContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatMenuContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatMenuContent, selectors: [[\"ng-template\", \"matMenuContent\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }])] });\nMatMenuContent.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ComponentFactoryResolver },\n    { type: ApplicationRef },\n    { type: Injector },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: ChangeDetectorRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matMenuContent]',\n                providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ApplicationRef }, { type: ɵngcc0.Injector }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * @docs-private\n */\nfunction throwMatMenuMissingError() {\n    throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when a menu is assigned\n * to a trigger that is placed inside the same menu.\n * @docs-private\n */\nfunction throwMatMenuRecursiveError() {\n    throw Error(`matMenuTriggerFor: menu cannot contain its own trigger. Assign a menu that is ` +\n        `not a parent of the trigger or move the trigger outside of the menu.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatMenuItem.\n/** @docs-private */\nclass MatMenuItemBase {\n}\nconst _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n/**\n * Single item inside of a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nclass MatMenuItem extends _MatMenuItemMixinBase {\n    constructor(_elementRef, \n    /**\n     * @deprecated `_document` parameter is no longer being used and will be removed.\n     * @breaking-change 12.0.0\n     */\n    _document, _focusMonitor, _parentMenu) {\n        // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n        super();\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._parentMenu = _parentMenu;\n        /** ARIA role for the menu item. */\n        this.role = 'menuitem';\n        /** Stream that emits when the menu item is hovered. */\n        this._hovered = new Subject();\n        /** Stream that emits when the menu item is focused. */\n        this._focused = new Subject();\n        /** Whether the menu item is highlighted. */\n        this._highlighted = false;\n        /** Whether the menu item acts as a trigger for a sub-menu. */\n        this._triggersSubmenu = false;\n        if (_parentMenu && _parentMenu.addItem) {\n            _parentMenu.addItem(this);\n        }\n    }\n    /** Focuses the menu item. */\n    focus(origin = 'program', options) {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n        this._focused.next(this);\n    }\n    ngAfterViewInit() {\n        if (this._focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            this._focusMonitor.monitor(this._elementRef, false);\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n        this._focused.complete();\n    }\n    /** Used to set the `tabindex`. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Returns the host DOM element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Prevents the default element actions if it is disabled. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /** Emits to the hover stream. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        var _a, _b;\n        const clone = this._elementRef.nativeElement.cloneNode(true);\n        const icons = clone.querySelectorAll('mat-icon, .material-icons');\n        // Strip away icons so they don't show up in the text.\n        for (let i = 0; i < icons.length; i++) {\n            const icon = icons[i];\n            (_a = icon.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(icon);\n        }\n        return ((_b = clone.textContent) === null || _b === void 0 ? void 0 : _b.trim()) || '';\n    }\n}\nMatMenuItem.ɵfac = function MatMenuItem_Factory(t) { return new (t || MatMenuItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8)); };\nMatMenuItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatMenuItem, selectors: [[\"\", \"mat-menu-item\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 10, hostBindings: function MatMenuItem_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) { return ctx._checkDisabled($event); })(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler() { return ctx._handleMouseEnter(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled.toString())(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"mat-menu-item\", true)(\"mat-menu-item-highlighted\", ctx._highlighted)(\"mat-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", role: \"role\" }, exportAs: [\"matMenuItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 2, vars: 2, consts: [[\"matRipple\", \"\", 1, \"mat-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"]], template: function MatMenuItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelement(1, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], encapsulation: 2, changeDetection: 0 });\nMatMenuItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_PANEL,] }, { type: Optional }] }\n];\nMatMenuItem.propDecorators = {\n    role: [{ type: Input }],\n    _checkDisabled: [{ type: HostListener, args: ['click', ['$event'],] }],\n    _handleMouseEnter: [{ type: HostListener, args: ['mouseenter',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuItem, [{\n        type: Component,\n        args: [{\n                selector: '[mat-menu-item]',\n                exportAs: 'matMenuItem',\n                inputs: ['disabled', 'disableRipple'],\n                host: {\n                    '[attr.role]': 'role',\n                    '[class.mat-menu-item]': 'true',\n                    '[class.mat-menu-item-highlighted]': '_highlighted',\n                    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.disabled]': 'disabled || null',\n                    'class': 'mat-focus-indicator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_PANEL]\n            }, {\n                type: Optional\n            }] }]; }, { role: [{\n            type: Input\n        }], \n    /** Prevents the default element actions if it is disabled. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _checkDisabled: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }], \n    /** Emits to the hover stream. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleMouseEnter: [{\n            type: HostListener,\n            args: ['mouseenter']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-menu`. */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\n/**\n * Start elevation for the menu panel.\n * @docs-private\n */\nconst MAT_MENU_BASE_ELEVATION = 4;\nlet menuPanelUid = 0;\n/** Base class with all of the `MatMenu` functionality. */\nclass _MatMenuBase {\n    constructor(_elementRef, _ngZone, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /** Only the direct descendant menu items. */\n        this._directDescendantItems = new QueryList();\n        /** Subscription to tab events on the menu panel */\n        this._tabSubscription = Subscription.EMPTY;\n        /** Config object to be passed into the menu's ngClass */\n        this._classList = {};\n        /** Current state of the panel animation. */\n        this._panelAnimationState = 'void';\n        /** Emits whenever an animation on the menu completes. */\n        this._animationDone = new Subject();\n        /** Class or list of classes to be added to the overlay panel. */\n        this.overlayPanelClass = this._defaultOptions.overlayPanelClass || '';\n        /** Class to be added to the backdrop element. */\n        this.backdropClass = this._defaultOptions.backdropClass;\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        this._hasBackdrop = this._defaultOptions.hasBackdrop;\n        /** Event emitted when the menu is closed. */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * @breaking-change 8.0.0\n         */\n        this.close = this.closed;\n        this.panelId = `mat-menu-panel-${menuPanelUid++}`;\n    }\n    /** Position of the menu in the X axis. */\n    get xPosition() { return this._xPosition; }\n    set xPosition(value) {\n        if (value !== 'before' && value !== 'after' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /** Position of the menu in the Y axis. */\n    get yPosition() { return this._yPosition; }\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /** Whether the menu should overlap its trigger. */\n    get overlapTrigger() { return this._overlapTrigger; }\n    set overlapTrigger(value) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n    /** Whether the menu has a backdrop. */\n    get hasBackdrop() { return this._hasBackdrop; }\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param classes list of class names\n     */\n    set panelClass(classes) {\n        const previousPanelClass = this._previousPanelClass;\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((className) => {\n                this._classList[className] = false;\n            });\n        }\n        this._previousPanelClass = classes;\n        if (classes && classes.length) {\n            classes.split(' ').forEach((className) => {\n                this._classList[className] = true;\n            });\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * @breaking-change 8.0.0\n     */\n    get classList() { return this.panelClass; }\n    set classList(classes) { this.panelClass = classes; }\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    ngAfterContentInit() {\n        this._updateDirectDescendants();\n        this._keyManager = new FocusKeyManager(this._directDescendantItems)\n            .withWrap()\n            .withTypeAhead()\n            .withHomeAndEnd();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n        // If a user manually (programatically) focuses a menu item, we need to reflect that focus\n        // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n        // is internal and we know that it gets completed on destroy.\n        this._directDescendantItems.changes.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._focused)))).subscribe(focusedItem => this._keyManager.updateActiveItem(focusedItem));\n    }\n    ngOnDestroy() {\n        this._directDescendantItems.destroy();\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n    /** Stream that emits whenever the hovered menu item changes. */\n    _hovered() {\n        // Coerce the `changes` property because Angular types it as `Observable<any>`\n        const itemChanges = this._directDescendantItems.changes;\n        return itemChanges.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._hovered))));\n    }\n    /*\n     * Registers a menu item with the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    addItem(_item) { }\n    /**\n     * Removes an item from the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    removeItem(_item) { }\n    /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        switch (keyCode) {\n            case ESCAPE:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this.closed.emit('keydown');\n                }\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    manager.setFocusOrigin('keyboard');\n                }\n                manager.onKeydown(event);\n        }\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin = 'program') {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable\n                .pipe(take(1))\n                .subscribe(() => this._focusFirstItem(origin));\n        }\n        else {\n            this._focusFirstItem(origin);\n        }\n    }\n    /**\n     * Actual implementation that focuses the first item. Needs to be separated\n     * out so we don't repeat the same logic in the public `focusFirstItem` method.\n     */\n    _focusFirstItem(origin) {\n        const manager = this._keyManager;\n        manager.setFocusOrigin(origin).setFirstItemActive();\n        // If there's no active item at this point, it means that all the items are disabled.\n        // Move focus to the menu panel so keyboard events like Escape still work. Also this will\n        // give _some_ feedback to screen readers.\n        if (!manager.activeItem && this._directDescendantItems.length) {\n            let element = this._directDescendantItems.first._getHostElement().parentElement;\n            // Because the `mat-menu` is at the DOM insertion point, not inside the overlay, we don't\n            // have a nice way of getting a hold of the menu panel. We can't use a `ViewChild` either\n            // because the panel is inside an `ng-template`. We work around it by starting from one of\n            // the items and walking up the DOM.\n            while (element) {\n                if (element.getAttribute('role') === 'menu') {\n                    element.focus();\n                    break;\n                }\n                else {\n                    element = element.parentElement;\n                }\n            }\n        }\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param depth Number of parent menus that come before the menu.\n     */\n    setElevation(depth) {\n        // The elevation starts at the base and increases by one for each level.\n        // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n        const elevation = Math.min(MAT_MENU_BASE_ELEVATION + depth, 24);\n        const newElevation = `mat-elevation-z${elevation}`;\n        const customElevation = Object.keys(this._classList).find(c => c.startsWith('mat-elevation-z'));\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the menu along the x axis.\n     * @param posY Position of the menu along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        const classes = this._classList;\n        classes['mat-menu-before'] = posX === 'before';\n        classes['mat-menu-after'] = posX === 'after';\n        classes['mat-menu-above'] = posY === 'above';\n        classes['mat-menu-below'] = posY === 'below';\n    }\n    /** Starts the enter animation. */\n    _startAnimation() {\n        // @breaking-change 8.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    }\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        // @breaking-change 8.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    }\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n    }\n    _onAnimationStart(event) {\n        this._isAnimating = true;\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the menu already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     */\n    _updateDirectDescendants() {\n        this._allItems.changes\n            .pipe(startWith(this._allItems))\n            .subscribe((items) => {\n            this._directDescendantItems.reset(items.filter(item => item._parentMenu === this));\n            this._directDescendantItems.notifyOnChanges();\n        });\n    }\n}\n_MatMenuBase.ɵfac = function _MatMenuBase_Factory(t) { return new (t || _MatMenuBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\n_MatMenuBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatMenuBase, contentQueries: function _MatMenuBase_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_MENU_CONTENT, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allItems = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n    } }, viewQuery: function _MatMenuBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    } }, inputs: { backdropClass: \"backdropClass\", xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: \"overlapTrigger\", hasBackdrop: \"hasBackdrop\", panelClass: [\"class\", \"panelClass\"], classList: \"classList\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { closed: \"closed\", close: \"close\" } });\n_MatMenuBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n_MatMenuBase.propDecorators = {\n    _allItems: [{ type: ContentChildren, args: [MatMenuItem, { descendants: true },] }],\n    backdropClass: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    xPosition: [{ type: Input }],\n    yPosition: [{ type: Input }],\n    templateRef: [{ type: ViewChild, args: [TemplateRef,] }],\n    items: [{ type: ContentChildren, args: [MatMenuItem, { descendants: false },] }],\n    lazyContent: [{ type: ContentChild, args: [MAT_MENU_CONTENT,] }],\n    overlapTrigger: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    panelClass: [{ type: Input, args: ['class',] }],\n    classList: [{ type: Input }],\n    closed: [{ type: Output }],\n    close: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatMenuBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, { backdropClass: [{\n            type: Input\n        }], closed: [{\n            type: Output\n        }], close: [{\n            type: Output\n        }], xPosition: [{\n            type: Input\n        }], yPosition: [{\n            type: Input\n        }], overlapTrigger: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], panelClass: [{\n            type: Input,\n            args: ['class']\n        }], classList: [{\n            type: Input\n        }], _allItems: [{\n            type: ContentChildren,\n            args: [MatMenuItem, { descendants: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], templateRef: [{\n            type: ViewChild,\n            args: [TemplateRef]\n        }], items: [{\n            type: ContentChildren,\n            args: [MatMenuItem, { descendants: false }]\n        }], lazyContent: [{\n            type: ContentChild,\n            args: [MAT_MENU_CONTENT]\n        }] }); })();\n/** @docs-private We show the \"_MatMenu\" class as \"MatMenu\" in the docs. */\nclass MatMenu extends _MatMenuBase {\n}\nMatMenu.ɵfac = function MatMenu_Factory(t) { return ɵMatMenu_BaseFactory(t || MatMenu); };\nMatMenu.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatMenu, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatMenu_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatMenu);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenu, [{\n        type: Directive\n    }], null, null); })();\n// Note on the weird inheritance setup: we need three classes, because the MDC-based menu has to\n// extend `MatMenu`, however keeping a reference to it will cause the inlined template and styles\n// to be retained as well. The MDC menu also has to provide itself as a `MatMenu` in order for\n// queries and DI to work correctly, while still not referencing the actual menu class.\n// Class responsibility is split up as follows:\n// * _MatMenuBase - provides all the functionality without any of the Angular metadata.\n// * MatMenu - keeps the same name symbol name as the current menu and\n// is used as a provider for DI and query purposes.\n// * _MatMenu - the actual menu component implementation with the Angular metadata that should\n// be tree shaken away for MDC.\n/** @docs-public MatMenu */\nclass _MatMenu extends MatMenu {\n    constructor(elementRef, ngZone, defaultOptions) {\n        super(elementRef, ngZone, defaultOptions);\n    }\n}\n_MatMenu.ɵfac = function _MatMenu_Factory(t) { return new (t || _MatMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\n_MatMenu.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: _MatMenu, selectors: [[\"mat-menu\"]], exportAs: [\"matMenu\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n            { provide: MatMenu, useExisting: _MatMenu }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-menu-panel\", 3, \"id\", \"ngClass\", \"keydown\", \"click\"], [1, \"mat-menu-content\"]], template: function _MatMenu_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, _MatMenu_ng_template_0_Template, 3, 6, \"ng-template\");\n    } }, directives: [ɵngcc3.NgClass], styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], encapsulation: 2, data: { animation: [\n            matMenuAnimations.transformMenu,\n            matMenuAnimations.fadeInItems\n        ] }, changeDetection: 0 });\n_MatMenu.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatMenu, [{\n        type: Component,\n        args: [{\n                selector: 'mat-menu',\n                template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matMenu',\n                animations: [\n                    matMenuAnimations.transformMenu,\n                    matMenuAnimations.fadeInItems\n                ],\n                providers: [\n                    { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n                    { provide: MatMenu, useExisting: _MatMenu }\n                ],\n                styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that determines the scroll handling while the menu is open. */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/** @docs-private */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/** Default top padding of the menu panel. */\nconst MENU_PANEL_TOP_PADDING = 8;\n/** Options for binding a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\n/** Directive applied to an element that should trigger a `mat-menu`. */\nclass MatMenuTrigger {\n    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, \n    // `MatMenu` is always used in combination with a `MatMenuTrigger`.\n    // tslint:disable-next-line: lightweight-tokens\n    _parentMenu, \n    // `MatMenuTrigger` is commonly used in combination with a `MatMenuItem`.\n    // tslint:disable-next-line: lightweight-tokens\n    _menuItemInstance, _dir, \n    // TODO(crisbeto): make the _focusMonitor required when doing breaking changes.\n    // @breaking-change 8.0.0\n    _focusMonitor) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._parentMenu = _parentMenu;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closingActionsSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._menuCloseSubscription = Subscription.EMPTY;\n        /**\n         * Handles touch start events on the trigger.\n         * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n         */\n        this._handleTouchStart = () => this._openedBy = 'touch';\n        // Tracking input type is necessary so it's possible to only auto-focus\n        // the first item of the list when the menu is opened via the keyboard\n        this._openedBy = null;\n        /**\n         * Whether focus should be restored when the menu is closed.\n         * Note that disabling this option can have accessibility implications\n         * and it's up to you to manage focus, if you decide to turn it off.\n         */\n        this.restoreFocus = true;\n        /** Event emitted when the associated menu is opened. */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuOpen = this.menuOpened;\n        /** Event emitted when the associated menu is closed. */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuClose = this.menuClosed;\n        _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * @deprecated\n     * @breaking-change 8.0.0\n     */\n    get _deprecatedMatMenuTriggerFor() { return this.menu; }\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /** References the menu instance that the trigger is associated with. */\n    get menu() { return this._menu; }\n    set menu(menu) {\n        if (menu === this._menu) {\n            return;\n        }\n        this._menu = menu;\n        this._menuCloseSubscription.unsubscribe();\n        if (menu) {\n            if (menu === this._parentMenu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwMatMenuRecursiveError();\n            }\n            this._menuCloseSubscription = menu.close.subscribe((reason) => {\n                this._destroyMenu();\n                // If a click closed the menu, we should close the entire chain of nested menus.\n                if ((reason === 'click' || reason === 'tab') && this._parentMenu) {\n                    this._parentMenu.closed.emit(reason);\n                }\n            });\n        }\n    }\n    ngAfterContentInit() {\n        this._checkMenu();\n        this._handleHover();\n    }\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        this._menuCloseSubscription.unsubscribe();\n        this._closingActionsSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n    /** Whether the menu is open. */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /** The text direction of the containing app. */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the menu triggers a sub-menu or a top-level one. */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMenu);\n    }\n    /** Toggles the menu between the open and closed states. */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /** Opens the menu. */\n    openMenu() {\n        if (this._menuOpen) {\n            return;\n        }\n        this._checkMenu();\n        const overlayRef = this._createOverlay();\n        const overlayConfig = overlayRef.getConfig();\n        this._setPosition(overlayConfig.positionStrategy);\n        overlayConfig.hasBackdrop = this.menu.hasBackdrop == null ? !this.triggersSubmenu() :\n            this.menu.hasBackdrop;\n        overlayRef.attach(this._getPortal());\n        if (this.menu.lazyContent) {\n            this.menu.lazyContent.attach(this.menuData);\n        }\n        this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n        this._initMenu();\n        if (this.menu instanceof MatMenu) {\n            this.menu._startAnimation();\n        }\n    }\n    /** Closes the menu. */\n    closeMenu() {\n        this.menu.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param origin Source of the menu trigger's focus.\n     */\n    focus(origin = 'program', options) {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    /** Closes the menu and does the necessary cleanup. */\n    _destroyMenu() {\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        const menu = this.menu;\n        this._closingActionsSubscription.unsubscribe();\n        this._overlayRef.detach();\n        this._restoreFocus();\n        if (menu instanceof MatMenu) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter(event => event.toState === 'void'), take(1), \n                // Interrupt if the content got re-attached.\n                takeUntil(menu.lazyContent._attached))\n                    .subscribe({\n                    next: () => menu.lazyContent.detach(),\n                    // No matter whether the content got re-attached, reset the menu.\n                    complete: () => this._setIsMenuOpen(false)\n                });\n            }\n            else {\n                this._setIsMenuOpen(false);\n            }\n        }\n        else {\n            this._setIsMenuOpen(false);\n            if (menu.lazyContent) {\n                menu.lazyContent.detach();\n            }\n        }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     */\n    _initMenu() {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this._setIsMenuOpen(true);\n        this.menu.focusFirstItem(this._openedBy || 'program');\n    }\n    /** Updates the menu elevation based on the amount of parent menus that it has. */\n    _setMenuElevation() {\n        if (this.menu.setElevation) {\n            let depth = 0;\n            let parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    }\n    /** Restores focus to the element that was focused before the menu was open. */\n    _restoreFocus() {\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (this.restoreFocus) {\n            if (!this._openedBy) {\n                // Note that the focus style will show up both for `program` and\n                // `keyboard` so we don't have to specify which one it is.\n                this.focus();\n            }\n            else if (!this.triggersSubmenu()) {\n                this.focus(this._openedBy);\n            }\n        }\n        this._openedBy = null;\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    _setIsMenuOpen(isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._highlighted = isOpen;\n        }\n    }\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     */\n    _checkMenu() {\n        if (!this.menu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuMissingError();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     */\n    _createOverlay() {\n        if (!this._overlayRef) {\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy);\n            this._overlayRef = this._overlay.create(config);\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `MatMenuPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n            backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            panelClass: this.menu.overlayPanelClass,\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    _subscribeToPositions(position) {\n        if (this.menu.setPositionClasses) {\n            position.positionChanges.subscribe(change => {\n                const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                this.menu.setPositionClasses(posX, posY);\n            });\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    _setPosition(positionStrategy) {\n        let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n    /** Returns a stream that emits whenever an action that should close the menu occurs. */\n    _menuClosingActions() {\n        const backdrop = this._overlayRef.backdropClick();\n        const detachments = this._overlayRef.detachments();\n        const parentClose = this._parentMenu ? this._parentMenu.closed : of();\n        const hover = this._parentMenu ? this._parentMenu._hovered().pipe(filter(active => active !== this._menuItemInstance), filter(() => this._menuOpen)) : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /** Handles mouse presses on the trigger. */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : null;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /** Handles key presses on the trigger. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        if (this.triggersSubmenu() && ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this.openMenu();\n        }\n    }\n    /** Handles click events on the trigger. */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /** Handles the cases where the user hovers over the trigger. */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu()) {\n            return;\n        }\n        this._hoverSubscription = this._parentMenu._hovered()\n            // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n            // with different data and triggers), we have to delay it by a tick to ensure that\n            // it won't be closed immediately after it is opened.\n            .pipe(filter(active => active === this._menuItemInstance && !active.disabled), delay(0, asapScheduler))\n            .subscribe(() => {\n            this._openedBy = 'mouse';\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (this.menu instanceof MatMenu && this.menu._isAnimating) {\n                // We need the `delay(0)` here in order to avoid\n                // 'changed after checked' errors in some cases. See #12194.\n                this.menu._animationDone\n                    .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMenu._hovered()))\n                    .subscribe(() => this.openMenu());\n            }\n            else {\n                this.openMenu();\n            }\n        });\n    }\n    /** Gets the portal that should be attached to the overlay. */\n    _getPortal() {\n        // Note that we can avoid this check by keeping the portal on the menu panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `MatMenuPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n        }\n        return this._portal;\n    }\n}\nMatMenuTrigger.ɵfac = function MatMenuTrigger_Factory(t) { return new (t || MatMenuTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(MatMenu, 8), ɵngcc0.ɵɵdirectiveInject(MatMenuItem, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor)); };\nMatMenuTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatMenuTrigger, selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]], hostAttrs: [\"aria-haspopup\", \"true\", 1, \"mat-menu-trigger\"], hostVars: 2, hostBindings: function MatMenuTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatMenuTrigger_mousedown_HostBindingHandler($event) { return ctx._handleMousedown($event); })(\"keydown\", function MatMenuTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"click\", function MatMenuTrigger_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.menuOpen || null)(\"aria-controls\", ctx.menuOpen ? ctx.menu.panelId : null);\n    } }, inputs: { restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"], _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, exportAs: [\"matMenuTrigger\"] });\nMatMenuTrigger.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_SCROLL_STRATEGY,] }] },\n    { type: MatMenu, decorators: [{ type: Optional }] },\n    { type: MatMenuItem, decorators: [{ type: Optional }, { type: Self }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: FocusMonitor }\n];\nMatMenuTrigger.propDecorators = {\n    _deprecatedMatMenuTriggerFor: [{ type: Input, args: ['mat-menu-trigger-for',] }],\n    menu: [{ type: Input, args: ['matMenuTriggerFor',] }],\n    menuData: [{ type: Input, args: ['matMenuTriggerData',] }],\n    restoreFocus: [{ type: Input, args: ['matMenuTriggerRestoreFocus',] }],\n    menuOpened: [{ type: Output }],\n    onMenuOpen: [{ type: Output }],\n    menuClosed: [{ type: Output }],\n    onMenuClose: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                host: {\n                    'class': 'mat-menu-trigger',\n                    'aria-haspopup': 'true',\n                    '[attr.aria-expanded]': 'menuOpen || null',\n                    '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n                    '(mousedown)': '_handleMousedown($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(click)': '_handleClick($event)'\n                },\n                exportAs: 'matMenuTrigger'\n            }]\n    }], function () { return [{ type: ɵngcc4.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_SCROLL_STRATEGY]\n            }] }, { type: MatMenu, decorators: [{\n                type: Optional\n            }] }, { type: MatMenuItem, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }]; }, { restoreFocus: [{\n            type: Input,\n            args: ['matMenuTriggerRestoreFocus']\n        }], menuOpened: [{\n            type: Output\n        }], onMenuOpen: [{\n            type: Output\n        }], menuClosed: [{\n            type: Output\n        }], onMenuClose: [{\n            type: Output\n        }], _deprecatedMatMenuTriggerFor: [{\n            type: Input,\n            args: ['mat-menu-trigger-for']\n        }], menu: [{\n            type: Input,\n            args: ['matMenuTriggerFor']\n        }], menuData: [{\n            type: Input,\n            args: ['matMenuTriggerData']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used by both the current `MatMenuModule` and the MDC `MatMenuModule`\n * to declare the menu-related directives.\n */\nclass _MatMenuDirectivesModule {\n}\n_MatMenuDirectivesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatMenuDirectivesModule });\n_MatMenuDirectivesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatMenuDirectivesModule_Factory(t) { return new (t || _MatMenuDirectivesModule)(); }, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatMenuDirectivesModule, { declarations: function () { return [MatMenuTrigger, MatMenuContent]; }, exports: function () { return [MatMenuTrigger, MatMenuContent, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatMenuDirectivesModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatMenuTrigger, MatMenuContent, MatCommonModule],\n                declarations: [\n                    MatMenuTrigger,\n                    MatMenuContent,\n                ],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\nclass MatMenuModule {\n}\nMatMenuModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatMenuModule });\nMatMenuModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatMenuModule_Factory(t) { return new (t || MatMenuModule)(); }, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            CommonModule,\n            MatCommonModule,\n            MatRippleModule,\n            OverlayModule,\n            _MatMenuDirectivesModule,\n        ], CdkScrollableModule, MatCommonModule, _MatMenuDirectivesModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatMenuModule, { declarations: function () { return [_MatMenu, MatMenuItem]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        MatRippleModule,\n        OverlayModule, _MatMenuDirectivesModule]; }, exports: function () { return [CdkScrollableModule, MatCommonModule, _MatMenu, MatMenuItem, _MatMenuDirectivesModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    MatRippleModule,\n                    OverlayModule,\n                    _MatMenuDirectivesModule,\n                ],\n                exports: [CdkScrollableModule, MatCommonModule, _MatMenu, MatMenuItem, _MatMenuDirectivesModule],\n                declarations: [_MatMenu, MatMenuItem],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MENU_CONTENT, MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, _MatMenu, _MatMenuBase, _MatMenuDirectivesModule, fadeInItems, matMenuAnimations, transformMenu, MAT_MENU_DEFAULT_OPTIONS_FACTORY as ɵangular_material_src_material_menu_menu_a, MAT_MENU_SCROLL_STRATEGY_FACTORY as ɵangular_material_src_material_menu_menu_b, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER as ɵangular_material_src_material_menu_menu_c };\n\n//# sourceMappingURL=menu.js.map","import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, ElementRef, Optional, Inject, Self, Attribute, ViewChild, ContentChildren, Input, ContentChild, Output, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, ErrorStateMatcher, MatOption, MAT_OPTGROUP, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MAT_FORM_FIELD, MatFormFieldModule } from '@angular/material/form-field';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, A } from '@angular/cdk/keycodes';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/overlay';\nimport * as ɵngcc7 from '@angular/common';\nimport * as ɵngcc8 from '@angular/material/form-field';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.placeholder || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.triggerValue || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_ng_content_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_ng_content_2_Template, 1, 0, \"ng-content\", 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r3.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13, 14);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r4._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r4._transformOrigin)(\"font-size\", ctx_r4._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r4.panelClass)(\"@transformPanel\", ctx_r4.multiple ? \"showing-multiple\" : \"showing\");\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r4.id + \"-panel\")(\"aria-multiselectable\", ctx_r4.multiple)(\"aria-label\", ctx_r4.ariaLabel || null)(\"aria-labelledby\", ctx_r4._getPanelAriaLabelledby());\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n/** The max height of the select's overlay panel */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/** The panel's padding on the x-axis */\nconst SELECT_PANEL_PADDING_X = 16;\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/** The height of the select items in `em` units. */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/** @docs-private */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/** @docs-private */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n    constructor(\n    /** Reference to the select that emitted the change event. */\n    source, \n    /** Current value of the select that emitted the event. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n// Boilerplate for applying mixins to MatSelect.\n/** @docs-private */\nclass MatSelectBase {\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = new InjectionToken('MatSelectTrigger');\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }])] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger',\n                providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }]\n            }]\n    }], null, null); })();\nclass MatSelect extends _MatSelectMixinBase {\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, defaults) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        /** Whether or not the overlay panel is open. */\n        this._panelOpen = false;\n        /** Whether filling out the select is required in the form. */\n        this._required = false;\n        /** The scroll position of the overlay panel, calculated to center the selected option. */\n        this._scrollTop = 0;\n        /** Whether the component is in multiple selection mode. */\n        this._multiple = false;\n        /** Comparison function to specify which option is displayed. Defaults to object equality. */\n        this._compareWith = (o1, o2) => o1 === o2;\n        /** Unique id for this input. */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /** Current `ariar-labelledby` value for the select trigger. */\n        this._triggerAriaLabelledBy = null;\n        /** Emits whenever the component is destroyed. */\n        this._destroy = new Subject();\n        /** The cached font-size of the trigger element. */\n        this._triggerFontSize = 0;\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when select has been touched` */\n        this._onTouched = () => { };\n        this._valueId = `mat-select-value-${nextUniqueId++}`;\n        /** The value of the select panel's transform-origin property. */\n        this._transformOrigin = 'top';\n        /** Emits when the panel element is finished transforming in. */\n        this._panelDoneAnimatingStream = new Subject();\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        /** Whether the component is disabling centering of the active option over the trigger. */\n        this._disableOptionCentering = false;\n        this._focused = false;\n        /** A name for this control that can be used by `mat-form-field`. */\n        this.controlType = 'mat-select';\n        /** Aria label of the select. If not specified, the placeholder will be used as label. */\n        this.ariaLabel = '';\n        /** Combined stream of all of the child options' change events. */\n        this.optionSelectionChanges = defer(() => {\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n            }\n            return this._ngZone.onStable\n                .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n        });\n        /** Event emitted when the select panel has been toggled. */\n        this.openedChange = new EventEmitter();\n        /** Event emitted when the select has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the select has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the selected value has been changed by the user. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        if (defaults) {\n            if (defaults.disableOptionCentering != null) {\n                this.disableOptionCentering = defaults.disableOptionCentering;\n            }\n            if (defaults.typeaheadDebounceInterval != null) {\n                this.typeaheadDebounceInterval = defaults.typeaheadDebounceInterval;\n            }\n        }\n    }\n    /** Whether the select is focused. */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /** Placeholder to be shown if no value has been selected. */\n    get placeholder() { return this._placeholder; }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether the component is required. */\n    get required() { return this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /** Whether the user should be allowed to select multiple options. */\n    get multiple() { return this._multiple; }\n    set multiple(value) {\n        if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /** Whether to center the active option over the trigger. */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() { return this._compareWith; }\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /** Value of the select control. */\n    get value() { return this._value; }\n    set value(newValue) {\n        if (newValue !== this._value) {\n            if (this.options) {\n                this._setSelectionByValue(newValue);\n            }\n            this._value = newValue;\n        }\n    }\n    /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n    get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /** Unique id of the element. */\n    get id() { return this._id; }\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => {\n            if (this.panelOpen) {\n                this._scrollTop = 0;\n                this.openedChange.emit(true);\n            }\n            else {\n                this.openedChange.emit(false);\n                this.overlayDir.offsetX = 0;\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n        this._viewportRuler.change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n            if (this._panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n            event.added.forEach(option => option.select());\n            event.removed.forEach(option => option.deselect());\n        });\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n            this._resetOptions();\n            this._initializeSelection();\n        });\n    }\n    ngDoCheck() {\n        const newAriaLabelledby = this._getTriggerAriaLabelledby();\n        // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n        // is computed as a result of a content query which can cause this binding to trigger a\n        // \"changed after checked\" error.\n        if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n            const element = this._elementRef.nativeElement;\n            this._triggerAriaLabelledBy = newAriaLabelledby;\n            if (newAriaLabelledby) {\n                element.setAttribute('aria-labelledby', newAriaLabelledby);\n            }\n            else {\n                element.removeAttribute('aria-labelledby');\n            }\n        }\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /** Toggles the overlay panel open or closed. */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /** Opens the overlay panel. */\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n            if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                this.overlayDir.overlayRef.overlayElement) {\n                this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n            }\n        });\n    }\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /** Whether or not the overlay panel is open. */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /** The currently selected option. */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /** The value displayed in the trigger. */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /** Whether the element is in RTL mode. */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /** Handles all keydown events on the select. */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /** Handles keyboard events while the select is closed. */\n    _handleClosedKeydown(event) {\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            const previouslySelectedOption = this.selected;\n            manager.onKeydown(event);\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n            }\n        }\n    }\n    /** Handles keyboard events when the selected is open. */\n    _handleOpenKeydown(event) {\n        const manager = this._keyManager;\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const isTyping = manager.isTyping();\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n            this.options.forEach(option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            });\n        }\n        else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached() {\n        this.overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n            this._changeDetectorRef.detectChanges();\n            this._calculateOverlayOffsetX();\n            this.panel.nativeElement.scrollTop = this._scrollTop;\n        });\n    }\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /** Whether the select has a value. */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        });\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    _setSelectionByValue(value) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            this._selectionModel.clear();\n            value.forEach((currentValue) => this._selectValue(currentValue));\n            this._sortValues();\n        }\n        else {\n            this._selectionModel.clear();\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.updateActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.updateActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        const correspondingOption = this.options.find((option) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        });\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withHomeAndEnd()\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this.panelOpen) {\n                // Select the active item when tabbing away. This is consistent with how the native\n                // select behaves. Note that we only want to do this in single selection mode.\n                if (!this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            }\n        });\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this._panelOpen && this.panel) {\n                this._scrollActiveOptionIntoView();\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        });\n    }\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    _resetOptions() {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        });\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map(option => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n    /** Invoked when an option is clicked. */\n    _onSelect(option, isUserInput) {\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            if (this.value != null) {\n                this._propagateChanges(option.value);\n            }\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = this.selected.map(option => option.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /** Scrolls the active option into view. */\n    _scrollActiveOptionIntoView() {\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n        const itemHeight = this._getItemHeight();\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition((activeOptionIndex + labelCount) * itemHeight, itemHeight, this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    /** Focuses the select element. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Gets the index of the provided option in the option list. */\n    _getOptionIndex(option) {\n        return this.options.reduce((result, current, index) => {\n            if (result !== undefined) {\n                return result;\n            }\n            return option === current ? index : undefined;\n        }, undefined);\n    }\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    _calculateOverlayPosition() {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset = this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0]);\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    /** Gets the aria-labelledby for the select panel. */\n    _getPanelAriaLabelledby() {\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = this._getLabelId();\n        return this.ariaLabelledby ? labelId + ' ' + this.ariaLabelledby : labelId;\n    }\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /** Gets the ID of the element that is labelling the select. */\n    _getLabelId() {\n        var _a;\n        return ((_a = this._parentFormField) === null || _a === void 0 ? void 0 : _a.getLabelId()) || '';\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    _calculateOverlayOffsetX() {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else {\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this._disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /** Sets the transform origin point based on the selected option. */\n    _getOriginBasedOnOption() {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n    /** Calculates the height of the select's options. */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /** Gets the aria-labelledby of the select component trigger. */\n    _getTriggerAriaLabelledby() {\n        if (this.ariaLabel) {\n            return null;\n        }\n        let value = this._getLabelId() + ' ' + this._valueId;\n        if (this.ariaLabelledby) {\n            value += ' ' + this.ariaLabelledby;\n        }\n        return value;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty;\n    }\n}\nMatSelect.ɵfac = function MatSelect_Factory(t) { return new (t || MatSelect)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\nMatSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_SELECT_TRIGGER, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatSelect_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayDir = _t.first);\n    } }, hostAttrs: [\"role\", \"combobox\", \"aria-autocomplete\", \"none\", \"aria-haspopup\", \"true\", 1, \"mat-select\"], hostVars: 20, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-controls\", ctx.panelOpen ? ctx.id + \"-panel\" : null)(\"aria-expanded\", ctx.panelOpen)(\"aria-label\", ctx.ariaLabel || null)(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty)(\"mat-select-multiple\", ctx.multiple);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", disableOptionCentering: \"disableOptionCentering\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c3, decls: 9, vars: 10, consts: [[\"cdk-overlay-origin\", \"\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-panel-wrap\"], [\"role\", \"listbox\", \"tabindex\", \"-1\", 3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 14, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵattribute(\"id\", ctx._valueId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r0)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc6.CdkOverlayOrigin, ɵngcc7.NgSwitch, ɵngcc7.NgSwitchCase, ɵngcc6.CdkConnectedOverlay, ɵngcc7.NgSwitchDefault, ɵngcc7.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\nMatSelect.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n];\nMatSelect.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MAT_OPTGROUP, { descendants: true },] }],\n    panelClass: [{ type: Input }],\n    customTrigger: [{ type: ContentChild, args: [MAT_SELECT_TRIGGER,] }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<div cdk-overlay-origin\\n     class=\\\"mat-select-trigger\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\" [attr.id]=\\\"_valueId\\\">\\n    <span class=\\\"mat-select-placeholder\\\" *ngSwitchCase=\\\"true\\\">{{placeholder || '\\\\u00A0'}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span *ngSwitchDefault>{{triggerValue || '\\\\u00A0'}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width!\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      role=\\\"listbox\\\"\\n      tabindex=\\\"-1\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      [attr.aria-multiselectable]=\\\"multiple\\\"\\n      [attr.aria-label]=\\\"ariaLabel || null\\\"\\n      [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'combobox',\n                    'aria-autocomplete': 'none',\n                    // TODO(crisbeto): the value for aria-haspopup should be `listbox`, but currently it's difficult\n                    // to sync into g3, because of an outdated automated a11y check which flags it as an invalid\n                    // value. At some point we should try to switch it back to being `listbox`. When doing the\n                    // MDC-based `mat-select`, we can get away with starting it off as `listbox`.\n                    'aria-haspopup': 'true',\n                    'class': 'mat-select',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-controls]': 'panelOpen ? id + \"-panel\" : null',\n                    '[attr.aria-expanded]': 'panelOpen',\n                    '[attr.aria-label]': 'ariaLabel || null',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    '[class.mat-select-multiple]': 'multiple',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc8.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MAT_OPTGROUP, { descendants: true }]\n        }], panelClass: [{\n            type: Input\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MAT_SELECT_TRIGGER]\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); }, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ], CdkScrollableModule,\n        MatFormFieldModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect, MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [CdkScrollableModule,\n        MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatFormFieldModule,\n                    MatSelect,\n                    MatSelectTrigger,\n                    MatOptionModule,\n                    MatCommonModule\n                ],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map","import { PortalModule } from '@angular/cdk/portal';\nimport { CdkStepLabel, CdkStepHeader, CdkStep, STEPPER_GLOBAL_OPTIONS, CdkStepper, CdkStepperNext, CdkStepperPrevious, CdkStepperModule } from '@angular/cdk/stepper';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Directive, ɵɵdefineInjectable, Injectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Input, TemplateRef, Inject, forwardRef, ContentChild, QueryList, EventEmitter, ViewChildren, ContentChildren, Output, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ErrorStateMatcher, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/material/icon';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\n\nfunction MatStepHeader_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 8);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.iconOverrides[ctx_r0.state])(\"ngTemplateOutletContext\", ctx_r0._getIconContext());\n} }\nfunction MatStepHeader_ng_container_4_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r6._getDefaultTextForState(ctx_r6.state));\n} }\nfunction MatStepHeader_ng_container_4_mat_icon_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-icon\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7._getDefaultTextForState(ctx_r7.state));\n} }\nfunction MatStepHeader_ng_container_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0, 9);\n    ɵngcc0.ɵɵtemplate(1, MatStepHeader_ng_container_4_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatStepHeader_ng_container_4_mat_icon_2_Template, 2, 1, \"mat-icon\", 11);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx_r1.state);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"number\");\n} }\nfunction MatStepHeader_div_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementContainer(1, 13);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2._templateLabel().template);\n} }\nfunction MatStepHeader_div_7_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.label);\n} }\nfunction MatStepHeader_div_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 14);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4._intl.optionalLabel);\n} }\nfunction MatStepHeader_div_9_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 15);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.errorMessage);\n} }\nfunction MatStep_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatHorizontalStepper_ng_container_1_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 6);\n} }\nfunction MatHorizontalStepper_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"mat-step-header\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function MatHorizontalStepper_ng_container_1_Template_mat_step_header_click_1_listener() { const step_r2 = ctx.$implicit; return step_r2.select(); })(\"keydown\", function MatHorizontalStepper_ng_container_1_Template_mat_step_header_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7._onKeydown($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(2, MatHorizontalStepper_ng_container_1_div_2_Template, 1, 0, \"div\", 5);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const step_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const isLast_r4 = ctx.last;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"tabIndex\", ctx_r0._getFocusIndex() === i_r3 ? 0 : 0 - 1)(\"id\", ctx_r0._getStepLabelId(i_r3))(\"index\", i_r3)(\"state\", ctx_r0._getIndicatorType(i_r3, step_r2.state))(\"label\", step_r2.stepLabel || step_r2.label)(\"selected\", ctx_r0.selectedIndex === i_r3)(\"active\", step_r2.completed || ctx_r0.selectedIndex === i_r3 || !ctx_r0.linear)(\"optional\", step_r2.optional)(\"errorMessage\", step_r2.errorMessage)(\"iconOverrides\", ctx_r0._iconOverrides)(\"disableRipple\", ctx_r0.disableRipple);\n    ɵngcc0.ɵɵattribute(\"aria-posinset\", i_r3 + 1)(\"aria-setsize\", ctx_r0.steps.length)(\"aria-controls\", ctx_r0._getStepContentId(i_r3))(\"aria-selected\", ctx_r0.selectedIndex == i_r3)(\"aria-label\", step_r2.ariaLabel || null)(\"aria-labelledby\", !step_r2.ariaLabel && step_r2.ariaLabelledby ? step_r2.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !isLast_r4);\n} }\nfunction MatHorizontalStepper_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵlistener(\"@stepTransition.done\", function MatHorizontalStepper_div_3_Template_div_animation_stepTransition_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11._animationDone.next($event); });\n    ɵngcc0.ɵɵelementContainer(1, 8);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const step_r9 = ctx.$implicit;\n    const i_r10 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@stepTransition\", ctx_r1._getAnimationDirection(i_r10))(\"id\", ctx_r1._getStepContentId(i_r10));\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r1._getStepLabelId(i_r10))(\"aria-expanded\", ctx_r1.selectedIndex === i_r10);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", step_r9.content);\n} }\nfunction MatVerticalStepper_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"mat-step-header\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatVerticalStepper_div_0_Template_mat_step_header_click_1_listener() { const step_r1 = ctx.$implicit; return step_r1.select(); })(\"keydown\", function MatVerticalStepper_div_0_Template_mat_step_header_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5._onKeydown($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 4);\n    ɵngcc0.ɵɵlistener(\"@stepTransition.done\", function MatVerticalStepper_div_0_Template_div_animation_stepTransition_done_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7._animationDone.next($event); });\n    ɵngcc0.ɵɵelementStart(4, \"div\", 5);\n    ɵngcc0.ɵɵelementContainer(5, 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const step_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const isLast_r3 = ctx.last;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"tabIndex\", ctx_r0._getFocusIndex() == i_r2 ? 0 : 0 - 1)(\"id\", ctx_r0._getStepLabelId(i_r2))(\"index\", i_r2)(\"state\", ctx_r0._getIndicatorType(i_r2, step_r1.state))(\"label\", step_r1.stepLabel || step_r1.label)(\"selected\", ctx_r0.selectedIndex === i_r2)(\"active\", step_r1.completed || ctx_r0.selectedIndex === i_r2 || !ctx_r0.linear)(\"optional\", step_r1.optional)(\"errorMessage\", step_r1.errorMessage)(\"iconOverrides\", ctx_r0._iconOverrides)(\"disableRipple\", ctx_r0.disableRipple);\n    ɵngcc0.ɵɵattribute(\"aria-posinset\", i_r2 + 1)(\"aria-setsize\", ctx_r0.steps.length)(\"aria-controls\", ctx_r0._getStepContentId(i_r2))(\"aria-selected\", ctx_r0.selectedIndex === i_r2)(\"aria-label\", step_r1.ariaLabel || null)(\"aria-labelledby\", !step_r1.ariaLabel && step_r1.ariaLabelledby ? step_r1.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-stepper-vertical-line\", !isLast_r3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@stepTransition\", ctx_r0._getAnimationDirection(i_r2))(\"id\", ctx_r0._getStepContentId(i_r2));\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r0._getStepLabelId(i_r2))(\"aria-expanded\", ctx_r0.selectedIndex === i_r2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", step_r1.content);\n} }\nconst _c1 = \".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\";\nclass MatStepLabel extends CdkStepLabel {\n}\nMatStepLabel.ɵfac = function MatStepLabel_Factory(t) { return ɵMatStepLabel_BaseFactory(t || MatStepLabel); };\nMatStepLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepLabel, selectors: [[\"\", \"matStepLabel\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatStepLabel_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatStepLabel);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[matStepLabel]'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Stepper data that is required for internationalization. */\nclass MatStepperIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /** Label that is rendered below optional steps. */\n        this.optionalLabel = 'Optional';\n    }\n}\nMatStepperIntl.ɵfac = function MatStepperIntl_Factory(t) { return new (t || MatStepperIntl)(); };\nMatStepperIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatStepperIntl_Factory() { return new MatStepperIntl(); }, token: MatStepperIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n/** @docs-private */\nfunction MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatStepperIntl();\n}\n/** @docs-private */\nconst MAT_STEPPER_INTL_PROVIDER = {\n    provide: MatStepperIntl,\n    deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n    useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatStepHeader extends CdkStepHeader {\n    constructor(_intl, _focusMonitor, _elementRef, changeDetectorRef) {\n        super(_elementRef);\n        this._intl = _intl;\n        this._focusMonitor = _focusMonitor;\n        this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        this._intlSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Focuses the step header. */\n    focus() {\n        this._focusMonitor.focusVia(this._elementRef, 'program');\n    }\n    /** Returns string label of given step if it is a text label. */\n    _stringLabel() {\n        return this.label instanceof MatStepLabel ? null : this.label;\n    }\n    /** Returns MatStepLabel if the label of given step is a template label. */\n    _templateLabel() {\n        return this.label instanceof MatStepLabel ? this.label : null;\n    }\n    /** Returns the host HTML element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Template context variables that are exposed to the `matStepperIcon` instances. */\n    _getIconContext() {\n        return {\n            index: this.index,\n            active: this.active,\n            optional: this.optional\n        };\n    }\n    _getDefaultTextForState(state) {\n        if (state == 'number') {\n            return `${this.index + 1}`;\n        }\n        if (state == 'edit') {\n            return 'create';\n        }\n        if (state == 'error') {\n            return 'warning';\n        }\n        return state;\n    }\n}\nMatStepHeader.ɵfac = function MatStepHeader_Factory(t) { return new (t || MatStepHeader)(ɵngcc0.ɵɵdirectiveInject(MatStepperIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatStepHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatStepHeader, selectors: [[\"mat-step-header\"]], hostAttrs: [\"role\", \"tab\", 1, \"mat-step-header\", \"mat-focus-indicator\"], inputs: { state: \"state\", label: \"label\", errorMessage: \"errorMessage\", iconOverrides: \"iconOverrides\", index: \"index\", selected: \"selected\", active: \"active\", optional: \"optional\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 10, vars: 19, consts: [[\"matRipple\", \"\", 1, \"mat-step-header-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-step-icon-content\", 3, \"ngSwitch\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngSwitchCase\"], [3, \"ngSwitch\", 4, \"ngSwitchDefault\"], [1, \"mat-step-label\"], [\"class\", \"mat-step-text-label\", 4, \"ngIf\"], [\"class\", \"mat-step-optional\", 4, \"ngIf\"], [\"class\", \"mat-step-sub-label-error\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [1, \"mat-step-text-label\"], [3, \"ngTemplateOutlet\"], [1, \"mat-step-optional\"], [1, \"mat-step-sub-label-error\"]], template: function MatStepHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\");\n        ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(3, MatStepHeader_ng_container_3_Template, 1, 2, \"ng-container\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatStepHeader_ng_container_4_Template, 3, 2, \"ng-container\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 4);\n        ɵngcc0.ɵɵtemplate(6, MatStepHeader_div_6_Template, 2, 1, \"div\", 5);\n        ɵngcc0.ɵɵtemplate(7, MatStepHeader_div_7_Template, 2, 1, \"div\", 5);\n        ɵngcc0.ɵɵtemplate(8, MatStepHeader_div_8_Template, 2, 1, \"div\", 6);\n        ɵngcc0.ɵɵtemplate(9, MatStepHeader_div_9_Template, 2, 1, \"div\", 7);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassMapInterpolate1(\"mat-step-icon-state-\", ctx.state, \" mat-step-icon\");\n        ɵngcc0.ɵɵclassProp(\"mat-step-icon-selected\", ctx.selected);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", !!(ctx.iconOverrides && ctx.iconOverrides[ctx.state]));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-step-label-active\", ctx.active)(\"mat-step-label-selected\", ctx.selected)(\"mat-step-label-error\", ctx.state == \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._templateLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._stringLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.optional && ctx.state != \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.state == \"error\");\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc3.NgSwitchDefault, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet, ɵngcc4.MatIcon], styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatStepHeader.ctorParameters = () => [\n    { type: MatStepperIntl },\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nMatStepHeader.propDecorators = {\n    state: [{ type: Input }],\n    label: [{ type: Input }],\n    errorMessage: [{ type: Input }],\n    iconOverrides: [{ type: Input }],\n    index: [{ type: Input }],\n    selected: [{ type: Input }],\n    active: [{ type: Input }],\n    optional: [{ type: Input }],\n    disableRipple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-step-header',\n                template: \"<div class=\\\"mat-step-header-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\" [ngSwitch]=\\\"!!(iconOverrides && iconOverrides[state])\\\">\\n    <ng-container\\n      *ngSwitchCase=\\\"true\\\"\\n      [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n      [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    <ng-container *ngSwitchDefault [ngSwitch]=\\\"state\\\">\\n      <span *ngSwitchCase=\\\"'number'\\\">{{_getDefaultTextForState(state)}}</span>\\n      <mat-icon *ngSwitchDefault>{{_getDefaultTextForState(state)}}</mat-icon>\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  <!-- If there is a label template, use it. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_templateLabel()\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"_templateLabel()!.template\\\"></ng-container>\\n  </div>\\n  <!-- If there is no label template, fall back to the text label. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_stringLabel()\\\">{{label}}</div>\\n\\n  <div class=\\\"mat-step-optional\\\" *ngIf=\\\"optional && state != 'error'\\\">{{_intl.optionalLabel}}</div>\\n  <div class=\\\"mat-step-sub-label-error\\\" *ngIf=\\\"state == 'error'\\\">{{errorMessage}}</div>\\n</div>\\n\\n\",\n                host: {\n                    'class': 'mat-step-header mat-focus-indicator',\n                    'role': 'tab'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: MatStepperIntl }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }]; }, { state: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], errorMessage: [{\n            type: Input\n        }], iconOverrides: [{\n            type: Input\n        }], index: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], active: [{\n            type: Input\n        }], optional: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material steppers.\n * @docs-private\n */\nconst matStepperAnimations = {\n    /** Animation that transitions the step along the X axis in a horizontal stepper. */\n    horizontalStepTransition: trigger('stepTransition', [\n        state('previous', style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' })),\n        state('current', style({ transform: 'none', visibility: 'visible' })),\n        state('next', style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' })),\n        transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))\n    ]),\n    /** Animation that transitions the step along the Y axis in a vertical stepper. */\n    verticalStepTransition: trigger('stepTransition', [\n        state('previous', style({ height: '0px', visibility: 'hidden' })),\n        state('next', style({ height: '0px', visibility: 'hidden' })),\n        state('current', style({ height: '*', visibility: 'visible' })),\n        transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Template to be used to override the icons inside the step header.\n */\nclass MatStepperIcon {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nMatStepperIcon.ɵfac = function MatStepperIcon_Factory(t) { return new (t || MatStepperIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatStepperIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepperIcon, selectors: [[\"ng-template\", \"matStepperIcon\", \"\"]], inputs: { name: [\"matStepperIcon\", \"name\"] } });\nMatStepperIcon.ctorParameters = () => [\n    { type: TemplateRef }\n];\nMatStepperIcon.propDecorators = {\n    name: [{ type: Input, args: ['matStepperIcon',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperIcon, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matStepperIcon]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { name: [{\n            type: Input,\n            args: ['matStepperIcon']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatStep extends CdkStep {\n    /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n    constructor(stepper, _errorStateMatcher, stepperOptions) {\n        super(stepper, stepperOptions);\n        this._errorStateMatcher = _errorStateMatcher;\n    }\n    /** Custom error state matcher that additionally checks for validity of interacted form. */\n    isErrorState(control, form) {\n        const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n        // Custom error state checks for the validity of form that is not submitted or touched\n        // since user can trigger a form change by calling for another step without directly\n        // interacting with the current form.\n        const customErrorState = !!(control && control.invalid && this.interacted);\n        return originalErrorState || customErrorState;\n    }\n}\nMatStep.ɵfac = function MatStep_Factory(t) { return new (t || MatStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatStepper)), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher, 4), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8)); };\nMatStep.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatStep, selectors: [[\"mat-step\"]], contentQueries: function MatStep_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStepLabel, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n    } }, exportAs: [\"matStep\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: ErrorStateMatcher, useExisting: MatStep },\n            { provide: CdkStep, useExisting: MatStep },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatStep_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatStep_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2, changeDetection: 0 });\nMatStep.ctorParameters = () => [\n    { type: MatStepper, decorators: [{ type: Inject, args: [forwardRef(() => MatStepper),] }] },\n    { type: ErrorStateMatcher, decorators: [{ type: SkipSelf }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n];\nMatStep.propDecorators = {\n    stepLabel: [{ type: ContentChild, args: [MatStepLabel,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStep, [{\n        type: Component,\n        args: [{\n                selector: 'mat-step',\n                template: \"<ng-template><ng-content></ng-content></ng-template>\\n\",\n                providers: [\n                    { provide: ErrorStateMatcher, useExisting: MatStep },\n                    { provide: CdkStep, useExisting: MatStep },\n                ],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matStep',\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatStepper, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatStepper)]\n            }] }, { type: ɵngcc2.ErrorStateMatcher, decorators: [{\n                type: SkipSelf\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [STEPPER_GLOBAL_OPTIONS]\n            }] }]; }, { stepLabel: [{\n            type: ContentChild,\n            args: [MatStepLabel]\n        }] }); })();\nclass MatStepper extends CdkStepper {\n    constructor() {\n        super(...arguments);\n        /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n        this.steps = new QueryList();\n        /** Event emitted when the current step is done transitioning in. */\n        this.animationDone = new EventEmitter();\n        /** Consumer-specified template-refs to be used to override the header icons. */\n        this._iconOverrides = {};\n        /** Stream of animation `done` events when the body expands/collapses. */\n        this._animationDone = new Subject();\n    }\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n        this._icons.forEach(({ name, templateRef }) => this._iconOverrides[name] = templateRef);\n        // Mark the component for change detection whenever the content children query changes\n        this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._stateChanged();\n        });\n        this._animationDone.pipe(\n        // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n        // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n        // See https://github.com/angular/angular/issues/24084\n        distinctUntilChanged((x, y) => x.fromState === y.fromState && x.toState === y.toState), takeUntil(this._destroyed)).subscribe(event => {\n            if (event.toState === 'current') {\n                this.animationDone.emit();\n            }\n        });\n    }\n}\nMatStepper.ɵfac = function MatStepper_Factory(t) { return ɵMatStepper_BaseFactory(t || MatStepper); };\nMatStepper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepper, selectors: [[\"\", \"matStepper\", \"\"]], contentQueries: function MatStepper_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStep, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStepperIcon, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icons = _t);\n    } }, viewQuery: function MatStepper_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatStepHeader, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    } }, inputs: { disableRipple: \"disableRipple\" }, outputs: { animationDone: \"animationDone\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkStepper, useExisting: MatStepper }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatStepper.propDecorators = {\n    _stepHeader: [{ type: ViewChildren, args: [MatStepHeader,] }],\n    _steps: [{ type: ContentChildren, args: [MatStep, { descendants: true },] }],\n    _icons: [{ type: ContentChildren, args: [MatStepperIcon, { descendants: true },] }],\n    animationDone: [{ type: Output }],\n    disableRipple: [{ type: Input }]\n};\nconst ɵMatStepper_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatStepper);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepper, [{\n        type: Directive,\n        args: [{ selector: '[matStepper]', providers: [{ provide: CdkStepper, useExisting: MatStepper }] }]\n    }], null, { animationDone: [{\n            type: Output\n        }], _stepHeader: [{\n            type: ViewChildren,\n            args: [MatStepHeader]\n        }], _steps: [{\n            type: ContentChildren,\n            args: [MatStep, { descendants: true }]\n        }], _icons: [{\n            type: ContentChildren,\n            args: [MatStepperIcon, { descendants: true }]\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\nclass MatHorizontalStepper extends MatStepper {\n    constructor() {\n        super(...arguments);\n        /** Whether the label should display in bottom or end position. */\n        this.labelPosition = 'end';\n    }\n}\nMatHorizontalStepper.ɵfac = function MatHorizontalStepper_Factory(t) { return ɵMatHorizontalStepper_BaseFactory(t || MatHorizontalStepper); };\nMatHorizontalStepper.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatHorizontalStepper, selectors: [[\"mat-horizontal-stepper\"]], hostAttrs: [\"aria-orientation\", \"horizontal\", \"role\", \"tablist\", 1, \"mat-stepper-horizontal\"], hostVars: 4, hostBindings: function MatHorizontalStepper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-stepper-label-position-end\", ctx.labelPosition == \"end\")(\"mat-stepper-label-position-bottom\", ctx.labelPosition == \"bottom\");\n    } }, inputs: { selectedIndex: \"selectedIndex\", labelPosition: \"labelPosition\" }, exportAs: [\"matHorizontalStepper\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatStepper, useExisting: MatHorizontalStepper },\n            { provide: CdkStepper, useExisting: MatHorizontalStepper }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 2, consts: [[1, \"mat-horizontal-stepper-header-container\"], [4, \"ngFor\", \"ngForOf\"], [1, \"mat-horizontal-content-container\"], [\"class\", \"mat-horizontal-stepper-content\", \"role\", \"tabpanel\", 3, \"id\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-horizontal-stepper-header\", 3, \"tabIndex\", \"id\", \"index\", \"state\", \"label\", \"selected\", \"active\", \"optional\", \"errorMessage\", \"iconOverrides\", \"disableRipple\", \"click\", \"keydown\"], [\"class\", \"mat-stepper-horizontal-line\", 4, \"ngIf\"], [1, \"mat-stepper-horizontal-line\"], [\"role\", \"tabpanel\", 1, \"mat-horizontal-stepper-content\", 3, \"id\"], [3, \"ngTemplateOutlet\"]], template: function MatHorizontalStepper_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatHorizontalStepper_ng_container_1_Template, 3, 18, \"ng-container\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(3, MatHorizontalStepper_div_3_Template, 2, 5, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n    } }, directives: [ɵngcc3.NgForOf, MatStepHeader, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet], styles: [_c1], encapsulation: 2, data: { animation: [matStepperAnimations.horizontalStepTransition] }, changeDetection: 0 });\nMatHorizontalStepper.propDecorators = {\n    labelPosition: [{ type: Input }]\n};\nconst ɵMatHorizontalStepper_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatHorizontalStepper);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHorizontalStepper, [{\n        type: Component,\n        args: [{\n                selector: 'mat-horizontal-stepper',\n                exportAs: 'matHorizontalStepper',\n                template: \"<div class=\\\"mat-horizontal-stepper-header-container\\\">\\n  <ng-container *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n    <mat-step-header class=\\\"mat-horizontal-stepper-header\\\"\\n                     (click)=\\\"step.select()\\\"\\n                     (keydown)=\\\"_onKeydown($event)\\\"\\n                     [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n                     [id]=\\\"_getStepLabelId(i)\\\"\\n                     [attr.aria-posinset]=\\\"i + 1\\\"\\n                     [attr.aria-setsize]=\\\"steps.length\\\"\\n                     [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                     [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n                     [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n                     [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n                     [index]=\\\"i\\\"\\n                     [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n                     [label]=\\\"step.stepLabel || step.label\\\"\\n                     [selected]=\\\"selectedIndex === i\\\"\\n                     [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                     [optional]=\\\"step.optional\\\"\\n                     [errorMessage]=\\\"step.errorMessage\\\"\\n                     [iconOverrides]=\\\"_iconOverrides\\\"\\n                     [disableRipple]=\\\"disableRipple\\\">\\n    </mat-step-header>\\n    <div *ngIf=\\\"!isLast\\\" class=\\\"mat-stepper-horizontal-line\\\"></div>\\n  </ng-container>\\n</div>\\n\\n<div class=\\\"mat-horizontal-content-container\\\">\\n  <div *ngFor=\\\"let step of steps; let i = index\\\"\\n       class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n       [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n       (@stepTransition.done)=\\\"_animationDone.next($event)\\\"\\n       [id]=\\\"_getStepContentId(i)\\\"\\n       [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n       [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n  </div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                host: {\n                    'class': 'mat-stepper-horizontal',\n                    '[class.mat-stepper-label-position-end]': 'labelPosition == \"end\"',\n                    '[class.mat-stepper-label-position-bottom]': 'labelPosition == \"bottom\"',\n                    'aria-orientation': 'horizontal',\n                    'role': 'tablist'\n                },\n                animations: [matStepperAnimations.horizontalStepTransition],\n                providers: [\n                    { provide: MatStepper, useExisting: MatHorizontalStepper },\n                    { provide: CdkStepper, useExisting: MatHorizontalStepper }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"]\n            }]\n    }], null, { labelPosition: [{\n            type: Input\n        }] }); })();\nclass MatVerticalStepper extends MatStepper {\n    constructor(dir, changeDetectorRef, \n    // @breaking-change 8.0.0 `elementRef` and `_document` parameters to become required.\n    elementRef, _document) {\n        super(dir, changeDetectorRef, elementRef, _document);\n        this._orientation = 'vertical';\n    }\n}\nMatVerticalStepper.ɵfac = function MatVerticalStepper_Factory(t) { return new (t || MatVerticalStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatVerticalStepper.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatVerticalStepper, selectors: [[\"mat-vertical-stepper\"]], hostAttrs: [\"aria-orientation\", \"vertical\", \"role\", \"tablist\", 1, \"mat-stepper-vertical\"], inputs: { selectedIndex: \"selectedIndex\" }, exportAs: [\"matVerticalStepper\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatStepper, useExisting: MatVerticalStepper },\n            { provide: CdkStepper, useExisting: MatVerticalStepper }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 1, consts: [[\"class\", \"mat-step\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-step\"], [1, \"mat-vertical-stepper-header\", 3, \"tabIndex\", \"id\", \"index\", \"state\", \"label\", \"selected\", \"active\", \"optional\", \"errorMessage\", \"iconOverrides\", \"disableRipple\", \"click\", \"keydown\"], [1, \"mat-vertical-content-container\"], [\"role\", \"tabpanel\", 1, \"mat-vertical-stepper-content\", 3, \"id\"], [1, \"mat-vertical-content\"], [3, \"ngTemplateOutlet\"]], template: function MatVerticalStepper_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatVerticalStepper_div_0_Template, 6, 24, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n    } }, directives: [ɵngcc3.NgForOf, MatStepHeader, ɵngcc3.NgTemplateOutlet], styles: [_c1], encapsulation: 2, data: { animation: [matStepperAnimations.verticalStepTransition] }, changeDetection: 0 });\nMatVerticalStepper.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatVerticalStepper, [{\n        type: Component,\n        args: [{\n                selector: 'mat-vertical-stepper',\n                exportAs: 'matVerticalStepper',\n                template: \"<div class=\\\"mat-step\\\" *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n  <mat-step-header class=\\\"mat-vertical-stepper-header\\\"\\n                   (click)=\\\"step.select()\\\"\\n                   (keydown)=\\\"_onKeydown($event)\\\"\\n                   [tabIndex]=\\\"_getFocusIndex() == i ? 0 : -1\\\"\\n                   [id]=\\\"_getStepLabelId(i)\\\"\\n                   [attr.aria-posinset]=\\\"i + 1\\\"\\n                   [attr.aria-setsize]=\\\"steps.length\\\"\\n                   [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                   [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n                   [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n                   [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n                   [index]=\\\"i\\\"\\n                   [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n                   [label]=\\\"step.stepLabel || step.label\\\"\\n                   [selected]=\\\"selectedIndex === i\\\"\\n                   [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                   [optional]=\\\"step.optional\\\"\\n                   [errorMessage]=\\\"step.errorMessage\\\"\\n                   [iconOverrides]=\\\"_iconOverrides\\\"\\n                   [disableRipple]=\\\"disableRipple\\\">\\n  </mat-step-header>\\n\\n  <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n    <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n         [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n         (@stepTransition.done)=\\\"_animationDone.next($event)\\\"\\n         [id]=\\\"_getStepContentId(i)\\\"\\n         [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n         [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n      <div class=\\\"mat-vertical-content\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                host: {\n                    'class': 'mat-stepper-vertical',\n                    'aria-orientation': 'vertical',\n                    'role': 'tablist'\n                },\n                animations: [matStepperAnimations.verticalStepTransition],\n                providers: [\n                    { provide: MatStepper, useExisting: MatVerticalStepper },\n                    { provide: CdkStepper, useExisting: MatVerticalStepper }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that moves to the next step in a stepper workflow. */\nclass MatStepperNext extends CdkStepperNext {\n}\nMatStepperNext.ɵfac = function MatStepperNext_Factory(t) { return ɵMatStepperNext_BaseFactory(t || MatStepperNext); };\nMatStepperNext.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepperNext, selectors: [[\"button\", \"matStepperNext\", \"\"]], hostAttrs: [1, \"mat-stepper-next\"], hostVars: 1, hostBindings: function MatStepperNext_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatStepperNext_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatStepperNext);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperNext, [{\n        type: Directive,\n        args: [{\n                selector: 'button[matStepperNext]',\n                host: {\n                    'class': 'mat-stepper-next',\n                    '[type]': 'type'\n                },\n                inputs: ['type']\n            }]\n    }], null, null); })();\n/** Button that moves to the previous step in a stepper workflow. */\nclass MatStepperPrevious extends CdkStepperPrevious {\n}\nMatStepperPrevious.ɵfac = function MatStepperPrevious_Factory(t) { return ɵMatStepperPrevious_BaseFactory(t || MatStepperPrevious); };\nMatStepperPrevious.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepperPrevious, selectors: [[\"button\", \"matStepperPrevious\", \"\"]], hostAttrs: [1, \"mat-stepper-previous\"], hostVars: 1, hostBindings: function MatStepperPrevious_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatStepperPrevious_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatStepperPrevious);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperPrevious, [{\n        type: Directive,\n        args: [{\n                selector: 'button[matStepperPrevious]',\n                host: {\n                    'class': 'mat-stepper-previous',\n                    '[type]': 'type'\n                },\n                inputs: ['type']\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatStepperModule {\n}\nMatStepperModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatStepperModule });\nMatStepperModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatStepperModule_Factory(t) { return new (t || MatStepperModule)(); }, providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher], imports: [[\n            MatCommonModule,\n            CommonModule,\n            PortalModule,\n            MatButtonModule,\n            CdkStepperModule,\n            MatIconModule,\n            MatRippleModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatStepperModule, { declarations: function () { return [MatHorizontalStepper, MatVerticalStepper, MatStep, MatStepLabel, MatStepper, MatStepperNext, MatStepperPrevious, MatStepHeader, MatStepperIcon]; }, imports: function () { return [MatCommonModule,\n        CommonModule,\n        PortalModule,\n        MatButtonModule,\n        CdkStepperModule,\n        MatIconModule,\n        MatRippleModule]; }, exports: function () { return [MatCommonModule, MatHorizontalStepper, MatVerticalStepper, MatStep, MatStepLabel, MatStepper, MatStepperNext, MatStepperPrevious, MatStepHeader, MatStepperIcon]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatCommonModule,\n                    CommonModule,\n                    PortalModule,\n                    MatButtonModule,\n                    CdkStepperModule,\n                    MatIconModule,\n                    MatRippleModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatHorizontalStepper,\n                    MatVerticalStepper,\n                    MatStep,\n                    MatStepLabel,\n                    MatStepper,\n                    MatStepperNext,\n                    MatStepperPrevious,\n                    MatStepHeader,\n                    MatStepperIcon,\n                ],\n                declarations: [\n                    MatHorizontalStepper,\n                    MatVerticalStepper,\n                    MatStep,\n                    MatStepLabel,\n                    MatStepper,\n                    MatStepperNext,\n                    MatStepperPrevious,\n                    MatStepHeader,\n                    MatStepperIcon,\n                ],\n                providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_STEPPER_INTL_PROVIDER, MAT_STEPPER_INTL_PROVIDER_FACTORY, MatHorizontalStepper, MatStep, MatStepHeader, MatStepLabel, MatStepper, MatStepperIcon, MatStepperIntl, MatStepperModule, MatStepperNext, MatStepperPrevious, MatVerticalStepper, matStepperAnimations };\n\n//# sourceMappingURL=stepper.js.map","import { Directive, ElementRef, Input, TemplateRef, ɵɵdefineInjectable, Injectable, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Renderer2, NgZone, Optional, Inject, Output, ViewChild, HostListener, InjectionToken, forwardRef, Attribute, ChangeDetectorRef, HostBinding, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { takeUntil, auditTime, startWith, tap, debounceTime, filter, map } from 'rxjs/operators';\nimport { animationFrameScheduler, asapScheduler, Subject, fromEvent, merge } from 'rxjs';\nimport { DOCUMENT, CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"content\"];\nconst _c1 = [\"scroll\"];\nconst _c2 = [\"padding\"];\nconst _c3 = function (a0) { return { searchTerm: a0 }; };\nfunction NgDropdownPanelComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵelementContainer(1, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.headerTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c3, ctx_r0.filterValue));\n} }\nfunction NgDropdownPanelComponent_div_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵelementContainer(1, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.footerTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c3, ctx_r4.filterValue));\n} }\nconst _c4 = [\"*\"];\nconst _c5 = [\"searchInput\"];\nfunction NgSelectComponent_ng_container_4_div_1_ng_template_1_Template(rf, ctx) { if (rf & 1) {\n    const _r13 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"span\", 15);\n    ɵngcc0.ɵɵlistener(\"click\", function NgSelectComponent_ng_container_4_div_1_ng_template_1_Template_span_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r13); const item_r7 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ctx_r11.unselect(item_r7); });\n    ɵngcc0.ɵɵtext(1, \"\\u00D7\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(2, \"span\", 16);\n} if (rf & 2) {\n    const item_r7 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngItemLabel\", item_r7.label)(\"escape\", ctx_r9.escapeHTML);\n} }\nfunction NgSelectComponent_ng_container_4_div_1_ng_template_3_Template(rf, ctx) { }\nconst _c6 = function (a0, a1, a2) { return { item: a0, clear: a1, label: a2 }; };\nfunction NgSelectComponent_ng_container_4_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵtemplate(1, NgSelectComponent_ng_container_4_div_1_ng_template_1_Template, 3, 2, \"ng-template\", null, 13, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(3, NgSelectComponent_ng_container_4_div_1_ng_template_3_Template, 0, 0, \"ng-template\", 14);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r7 = ctx.$implicit;\n    const _r8 = ɵngcc0.ɵɵreference(2);\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"ng-value-disabled\", item_r7.disabled);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r6.labelTemplate || _r8)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(4, _c6, item_r7.value, ctx_r6.clearItem, item_r7.label));\n} }\nfunction NgSelectComponent_ng_container_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NgSelectComponent_ng_container_4_div_1_Template, 4, 8, \"div\", 11);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.selectedItems)(\"ngForTrackBy\", ctx_r0.trackByOption);\n} }\nfunction NgSelectComponent_5_ng_template_0_Template(rf, ctx) { }\nconst _c7 = function (a0, a1) { return { items: a0, clear: a1 }; };\nfunction NgSelectComponent_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgSelectComponent_5_ng_template_0_Template, 0, 0, \"ng-template\", 14);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.multiLabelTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(2, _c7, ctx_r1.selectedValues, ctx_r1.clearItem));\n} }\nfunction NgSelectComponent_ng_container_9_ng_template_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 19);\n} }\nfunction NgSelectComponent_ng_container_9_ng_template_3_Template(rf, ctx) { }\nfunction NgSelectComponent_ng_container_9_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NgSelectComponent_ng_container_9_ng_template_1_Template, 1, 0, \"ng-template\", null, 17, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(3, NgSelectComponent_ng_container_9_ng_template_3_Template, 0, 0, \"ng-template\", 18);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const _r16 = ɵngcc0.ɵɵreference(2);\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.loadingSpinnerTemplate || _r16);\n} }\nfunction NgSelectComponent_span_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 20);\n    ɵngcc0.ɵɵelementStart(1, \"span\", 21);\n    ɵngcc0.ɵɵtext(2, \"\\u00D7\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", ctx_r4.clearAllText);\n} }\nfunction NgSelectComponent_ng_dropdown_panel_13_div_2_ng_template_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 27);\n} if (rf & 2) {\n    const item_r24 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r26 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngItemLabel\", item_r24.label)(\"escape\", ctx_r26.escapeHTML);\n} }\nfunction NgSelectComponent_ng_dropdown_panel_13_div_2_ng_template_3_Template(rf, ctx) { }\nconst _c8 = function (a0, a1, a2, a3) { return { item: a0, item$: a1, index: a2, searchTerm: a3 }; };\nfunction NgSelectComponent_ng_dropdown_panel_13_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r30 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25);\n    ɵngcc0.ɵɵlistener(\"click\", function NgSelectComponent_ng_dropdown_panel_13_div_2_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r30); const item_r24 = ctx.$implicit; const ctx_r29 = ɵngcc0.ɵɵnextContext(2); return ctx_r29.toggleItem(item_r24); })(\"mouseover\", function NgSelectComponent_ng_dropdown_panel_13_div_2_Template_div_mouseover_0_listener() { ɵngcc0.ɵɵrestoreView(_r30); const item_r24 = ctx.$implicit; const ctx_r31 = ɵngcc0.ɵɵnextContext(2); return ctx_r31.onItemHover(item_r24); });\n    ɵngcc0.ɵɵtemplate(1, NgSelectComponent_ng_dropdown_panel_13_div_2_ng_template_1_Template, 1, 2, \"ng-template\", null, 26, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(3, NgSelectComponent_ng_dropdown_panel_13_div_2_ng_template_3_Template, 0, 0, \"ng-template\", 14);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r24 = ctx.$implicit;\n    const _r25 = ɵngcc0.ɵɵreference(2);\n    const ctx_r19 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"ng-option-disabled\", item_r24.disabled)(\"ng-option-selected\", item_r24.selected)(\"ng-optgroup\", item_r24.children)(\"ng-option\", !item_r24.children)(\"ng-option-child\", !!item_r24.parent)(\"ng-option-marked\", item_r24 === ctx_r19.itemsList.markedItem);\n    ɵngcc0.ɵɵattribute(\"role\", item_r24.children ? \"group\" : \"option\")(\"aria-selected\", item_r24.selected)(\"id\", item_r24 == null ? null : item_r24.htmlId);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", item_r24.children ? ctx_r19.optgroupTemplate || _r25 : ctx_r19.optionTemplate || _r25)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction4(17, _c8, item_r24.value, item_r24, item_r24.index, ctx_r19.searchTerm));\n} }\nfunction NgSelectComponent_ng_dropdown_panel_13_div_3_ng_template_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵelementStart(1, \"span\", 30);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r33 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r33.addTagText);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\\\"\", ctx_r33.searchTerm, \"\\\"\");\n} }\nfunction NgSelectComponent_ng_dropdown_panel_13_div_3_ng_template_3_Template(rf, ctx) { }\nfunction NgSelectComponent_ng_dropdown_panel_13_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r36 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵlistener(\"mouseover\", function NgSelectComponent_ng_dropdown_panel_13_div_3_Template_div_mouseover_0_listener() { ɵngcc0.ɵɵrestoreView(_r36); const ctx_r35 = ɵngcc0.ɵɵnextContext(2); return ctx_r35.itemsList.unmarkItem(); })(\"click\", function NgSelectComponent_ng_dropdown_panel_13_div_3_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r36); const ctx_r37 = ɵngcc0.ɵɵnextContext(2); return ctx_r37.selectTag(); });\n    ɵngcc0.ɵɵtemplate(1, NgSelectComponent_ng_dropdown_panel_13_div_3_ng_template_1_Template, 4, 2, \"ng-template\", null, 29, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(3, NgSelectComponent_ng_dropdown_panel_13_div_3_ng_template_3_Template, 0, 0, \"ng-template\", 14);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const _r32 = ɵngcc0.ɵɵreference(2);\n    const ctx_r20 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"ng-option-marked\", !ctx_r20.itemsList.markedItem);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r20.tagTemplate || _r32)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(4, _c3, ctx_r20.searchTerm));\n} }\nfunction NgSelectComponent_ng_dropdown_panel_13_ng_container_4_ng_template_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 32);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r39 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r39.notFoundText);\n} }\nfunction NgSelectComponent_ng_dropdown_panel_13_ng_container_4_ng_template_3_Template(rf, ctx) { }\nfunction NgSelectComponent_ng_dropdown_panel_13_ng_container_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NgSelectComponent_ng_dropdown_panel_13_ng_container_4_ng_template_1_Template, 2, 1, \"ng-template\", null, 31, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(3, NgSelectComponent_ng_dropdown_panel_13_ng_container_4_ng_template_3_Template, 0, 0, \"ng-template\", 14);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const _r38 = ɵngcc0.ɵɵreference(2);\n    const ctx_r21 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r21.notFoundTemplate || _r38)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c3, ctx_r21.searchTerm));\n} }\nfunction NgSelectComponent_ng_dropdown_panel_13_ng_container_5_ng_template_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 32);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r42 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r42.typeToSearchText);\n} }\nfunction NgSelectComponent_ng_dropdown_panel_13_ng_container_5_ng_template_3_Template(rf, ctx) { }\nfunction NgSelectComponent_ng_dropdown_panel_13_ng_container_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NgSelectComponent_ng_dropdown_panel_13_ng_container_5_ng_template_1_Template, 2, 1, \"ng-template\", null, 33, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(3, NgSelectComponent_ng_dropdown_panel_13_ng_container_5_ng_template_3_Template, 0, 0, \"ng-template\", 18);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const _r41 = ɵngcc0.ɵɵreference(2);\n    const ctx_r22 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r22.typeToSearchTemplate || _r41);\n} }\nfunction NgSelectComponent_ng_dropdown_panel_13_ng_container_6_ng_template_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 32);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r45 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r45.loadingText);\n} }\nfunction NgSelectComponent_ng_dropdown_panel_13_ng_container_6_ng_template_3_Template(rf, ctx) { }\nfunction NgSelectComponent_ng_dropdown_panel_13_ng_container_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NgSelectComponent_ng_dropdown_panel_13_ng_container_6_ng_template_1_Template, 2, 1, \"ng-template\", null, 34, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(3, NgSelectComponent_ng_dropdown_panel_13_ng_container_6_ng_template_3_Template, 0, 0, \"ng-template\", 14);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const _r44 = ɵngcc0.ɵɵreference(2);\n    const ctx_r23 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r23.loadingTextTemplate || _r44)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c3, ctx_r23.searchTerm));\n} }\nfunction NgSelectComponent_ng_dropdown_panel_13_Template(rf, ctx) { if (rf & 1) {\n    const _r48 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"ng-dropdown-panel\", 22);\n    ɵngcc0.ɵɵlistener(\"update\", function NgSelectComponent_ng_dropdown_panel_13_Template_ng_dropdown_panel_update_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r48); const ctx_r47 = ɵngcc0.ɵɵnextContext(); return ctx_r47.viewPortItems = $event; })(\"scroll\", function NgSelectComponent_ng_dropdown_panel_13_Template_ng_dropdown_panel_scroll_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r48); const ctx_r49 = ɵngcc0.ɵɵnextContext(); return ctx_r49.scroll.emit($event); })(\"scrollToEnd\", function NgSelectComponent_ng_dropdown_panel_13_Template_ng_dropdown_panel_scrollToEnd_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r48); const ctx_r50 = ɵngcc0.ɵɵnextContext(); return ctx_r50.scrollToEnd.emit($event); })(\"outsideClick\", function NgSelectComponent_ng_dropdown_panel_13_Template_ng_dropdown_panel_outsideClick_0_listener() { ɵngcc0.ɵɵrestoreView(_r48); const ctx_r51 = ɵngcc0.ɵɵnextContext(); return ctx_r51.close(); });\n    ɵngcc0.ɵɵelementContainerStart(1);\n    ɵngcc0.ɵɵtemplate(2, NgSelectComponent_ng_dropdown_panel_13_div_2_Template, 4, 22, \"div\", 23);\n    ɵngcc0.ɵɵtemplate(3, NgSelectComponent_ng_dropdown_panel_13_div_3_Template, 4, 6, \"div\", 24);\n    ɵngcc0.ɵɵelementContainerEnd();\n    ɵngcc0.ɵɵtemplate(4, NgSelectComponent_ng_dropdown_panel_13_ng_container_4_Template, 4, 4, \"ng-container\", 3);\n    ɵngcc0.ɵɵtemplate(5, NgSelectComponent_ng_dropdown_panel_13_ng_container_5_Template, 4, 1, \"ng-container\", 3);\n    ɵngcc0.ɵɵtemplate(6, NgSelectComponent_ng_dropdown_panel_13_ng_container_6_Template, 4, 4, \"ng-container\", 3);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"ng-select-multiple\", ctx_r5.multiple);\n    ɵngcc0.ɵɵproperty(\"virtualScroll\", ctx_r5.virtualScroll)(\"bufferAmount\", ctx_r5.bufferAmount)(\"appendTo\", ctx_r5.appendTo)(\"position\", ctx_r5.dropdownPosition)(\"headerTemplate\", ctx_r5.headerTemplate)(\"footerTemplate\", ctx_r5.footerTemplate)(\"filterValue\", ctx_r5.searchTerm)(\"items\", ctx_r5.itemsList.filteredItems)(\"markedItem\", ctx_r5.itemsList.markedItem)(\"ngClass\", ctx_r5.appendTo ? ctx_r5.classes : null)(\"id\", ctx_r5.dropdownId);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r5.viewPortItems)(\"ngForTrackBy\", ctx_r5.trackByOption);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.showAddTag);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.showNoItemsFound());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.showTypeToSearch());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.loading && ctx_r5.itemsList.filteredItems.length === 0);\n} }\nconst unescapedHTMLExp = /[&<>\"']/g;\nconst hasUnescapedHTMLExp = RegExp(unescapedHTMLExp.source);\nconst htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    '\\'': '&#39;'\n};\nfunction escapeHTML(string) {\n    return (string && hasUnescapedHTMLExp.test(string)) ?\n        string.replace(unescapedHTMLExp, chr => htmlEscapes[chr]) :\n        string;\n}\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\nfunction isObject(value) {\n    return typeof value === 'object' && isDefined(value);\n}\nfunction isPromise(value) {\n    return value instanceof Promise;\n}\nfunction isFunction(value) {\n    return value instanceof Function;\n}\n\nclass NgItemLabelDirective {\n    constructor(element) {\n        this.element = element;\n        this.escape = true;\n    }\n    ngOnChanges(changes) {\n        this.element.nativeElement.innerHTML = this.escape ?\n            escapeHTML(this.ngItemLabel) :\n            this.ngItemLabel;\n    }\n}\nNgItemLabelDirective.ɵfac = function NgItemLabelDirective_Factory(t) { return new (t || NgItemLabelDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNgItemLabelDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgItemLabelDirective, selectors: [[\"\", \"ngItemLabel\", \"\"]], inputs: { escape: \"escape\", ngItemLabel: \"ngItemLabel\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nNgItemLabelDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nNgItemLabelDirective.propDecorators = {\n    ngItemLabel: [{ type: Input }],\n    escape: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgItemLabelDirective, [{\n        type: Directive,\n        args: [{ selector: '[ngItemLabel]' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { escape: [{\n            type: Input\n        }], ngItemLabel: [{\n            type: Input\n        }] }); })();\nclass NgOptionTemplateDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgOptionTemplateDirective.ɵfac = function NgOptionTemplateDirective_Factory(t) { return new (t || NgOptionTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNgOptionTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgOptionTemplateDirective, selectors: [[\"\", \"ng-option-tmp\", \"\"]] });\nNgOptionTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgOptionTemplateDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng-option-tmp]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nclass NgOptgroupTemplateDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgOptgroupTemplateDirective.ɵfac = function NgOptgroupTemplateDirective_Factory(t) { return new (t || NgOptgroupTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNgOptgroupTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgOptgroupTemplateDirective, selectors: [[\"\", \"ng-optgroup-tmp\", \"\"]] });\nNgOptgroupTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgOptgroupTemplateDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng-optgroup-tmp]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nclass NgLabelTemplateDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgLabelTemplateDirective.ɵfac = function NgLabelTemplateDirective_Factory(t) { return new (t || NgLabelTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNgLabelTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgLabelTemplateDirective, selectors: [[\"\", \"ng-label-tmp\", \"\"]] });\nNgLabelTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgLabelTemplateDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng-label-tmp]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nclass NgMultiLabelTemplateDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgMultiLabelTemplateDirective.ɵfac = function NgMultiLabelTemplateDirective_Factory(t) { return new (t || NgMultiLabelTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNgMultiLabelTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgMultiLabelTemplateDirective, selectors: [[\"\", \"ng-multi-label-tmp\", \"\"]] });\nNgMultiLabelTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgMultiLabelTemplateDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng-multi-label-tmp]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nclass NgHeaderTemplateDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgHeaderTemplateDirective.ɵfac = function NgHeaderTemplateDirective_Factory(t) { return new (t || NgHeaderTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNgHeaderTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgHeaderTemplateDirective, selectors: [[\"\", \"ng-header-tmp\", \"\"]] });\nNgHeaderTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgHeaderTemplateDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng-header-tmp]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nclass NgFooterTemplateDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgFooterTemplateDirective.ɵfac = function NgFooterTemplateDirective_Factory(t) { return new (t || NgFooterTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNgFooterTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgFooterTemplateDirective, selectors: [[\"\", \"ng-footer-tmp\", \"\"]] });\nNgFooterTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgFooterTemplateDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng-footer-tmp]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nclass NgNotFoundTemplateDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgNotFoundTemplateDirective.ɵfac = function NgNotFoundTemplateDirective_Factory(t) { return new (t || NgNotFoundTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNgNotFoundTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgNotFoundTemplateDirective, selectors: [[\"\", \"ng-notfound-tmp\", \"\"]] });\nNgNotFoundTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgNotFoundTemplateDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng-notfound-tmp]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nclass NgTypeToSearchTemplateDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgTypeToSearchTemplateDirective.ɵfac = function NgTypeToSearchTemplateDirective_Factory(t) { return new (t || NgTypeToSearchTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNgTypeToSearchTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgTypeToSearchTemplateDirective, selectors: [[\"\", \"ng-typetosearch-tmp\", \"\"]] });\nNgTypeToSearchTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgTypeToSearchTemplateDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng-typetosearch-tmp]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nclass NgLoadingTextTemplateDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgLoadingTextTemplateDirective.ɵfac = function NgLoadingTextTemplateDirective_Factory(t) { return new (t || NgLoadingTextTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNgLoadingTextTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgLoadingTextTemplateDirective, selectors: [[\"\", \"ng-loadingtext-tmp\", \"\"]] });\nNgLoadingTextTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgLoadingTextTemplateDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng-loadingtext-tmp]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nclass NgTagTemplateDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgTagTemplateDirective.ɵfac = function NgTagTemplateDirective_Factory(t) { return new (t || NgTagTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNgTagTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgTagTemplateDirective, selectors: [[\"\", \"ng-tag-tmp\", \"\"]] });\nNgTagTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgTagTemplateDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng-tag-tmp]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nclass NgLoadingSpinnerTemplateDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgLoadingSpinnerTemplateDirective.ɵfac = function NgLoadingSpinnerTemplateDirective_Factory(t) { return new (t || NgLoadingSpinnerTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNgLoadingSpinnerTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgLoadingSpinnerTemplateDirective, selectors: [[\"\", \"ng-loadingspinner-tmp\", \"\"]] });\nNgLoadingSpinnerTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgLoadingSpinnerTemplateDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng-loadingspinner-tmp]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\nclass ConsoleService {\n    warn(message) {\n        console.warn(message);\n    }\n}\nConsoleService.ɵfac = function ConsoleService_Factory(t) { return new (t || ConsoleService)(); };\nConsoleService.ɵprov = ɵɵdefineInjectable({ factory: function ConsoleService_Factory() { return new ConsoleService(); }, token: ConsoleService, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ConsoleService, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], null, null); })();\n\nfunction newId() {\n    // First character is an 'a', it's good practice to tag id to begin with a letter\n    return 'axxxxxxxxxxx'.replace(/[x]/g, function (_) {\n        // tslint:disable-next-line:no-bitwise\n        const val = Math.random() * 16 | 0;\n        return val.toString(16);\n    });\n}\n\nconst diacritics = {\n    '\\u24B6': 'A',\n    '\\uFF21': 'A',\n    '\\u00C0': 'A',\n    '\\u00C1': 'A',\n    '\\u00C2': 'A',\n    '\\u1EA6': 'A',\n    '\\u1EA4': 'A',\n    '\\u1EAA': 'A',\n    '\\u1EA8': 'A',\n    '\\u00C3': 'A',\n    '\\u0100': 'A',\n    '\\u0102': 'A',\n    '\\u1EB0': 'A',\n    '\\u1EAE': 'A',\n    '\\u1EB4': 'A',\n    '\\u1EB2': 'A',\n    '\\u0226': 'A',\n    '\\u01E0': 'A',\n    '\\u00C4': 'A',\n    '\\u01DE': 'A',\n    '\\u1EA2': 'A',\n    '\\u00C5': 'A',\n    '\\u01FA': 'A',\n    '\\u01CD': 'A',\n    '\\u0200': 'A',\n    '\\u0202': 'A',\n    '\\u1EA0': 'A',\n    '\\u1EAC': 'A',\n    '\\u1EB6': 'A',\n    '\\u1E00': 'A',\n    '\\u0104': 'A',\n    '\\u023A': 'A',\n    '\\u2C6F': 'A',\n    '\\uA732': 'AA',\n    '\\u00C6': 'AE',\n    '\\u01FC': 'AE',\n    '\\u01E2': 'AE',\n    '\\uA734': 'AO',\n    '\\uA736': 'AU',\n    '\\uA738': 'AV',\n    '\\uA73A': 'AV',\n    '\\uA73C': 'AY',\n    '\\u24B7': 'B',\n    '\\uFF22': 'B',\n    '\\u1E02': 'B',\n    '\\u1E04': 'B',\n    '\\u1E06': 'B',\n    '\\u0243': 'B',\n    '\\u0182': 'B',\n    '\\u0181': 'B',\n    '\\u24B8': 'C',\n    '\\uFF23': 'C',\n    '\\u0106': 'C',\n    '\\u0108': 'C',\n    '\\u010A': 'C',\n    '\\u010C': 'C',\n    '\\u00C7': 'C',\n    '\\u1E08': 'C',\n    '\\u0187': 'C',\n    '\\u023B': 'C',\n    '\\uA73E': 'C',\n    '\\u24B9': 'D',\n    '\\uFF24': 'D',\n    '\\u1E0A': 'D',\n    '\\u010E': 'D',\n    '\\u1E0C': 'D',\n    '\\u1E10': 'D',\n    '\\u1E12': 'D',\n    '\\u1E0E': 'D',\n    '\\u0110': 'D',\n    '\\u018B': 'D',\n    '\\u018A': 'D',\n    '\\u0189': 'D',\n    '\\uA779': 'D',\n    '\\u01F1': 'DZ',\n    '\\u01C4': 'DZ',\n    '\\u01F2': 'Dz',\n    '\\u01C5': 'Dz',\n    '\\u24BA': 'E',\n    '\\uFF25': 'E',\n    '\\u00C8': 'E',\n    '\\u00C9': 'E',\n    '\\u00CA': 'E',\n    '\\u1EC0': 'E',\n    '\\u1EBE': 'E',\n    '\\u1EC4': 'E',\n    '\\u1EC2': 'E',\n    '\\u1EBC': 'E',\n    '\\u0112': 'E',\n    '\\u1E14': 'E',\n    '\\u1E16': 'E',\n    '\\u0114': 'E',\n    '\\u0116': 'E',\n    '\\u00CB': 'E',\n    '\\u1EBA': 'E',\n    '\\u011A': 'E',\n    '\\u0204': 'E',\n    '\\u0206': 'E',\n    '\\u1EB8': 'E',\n    '\\u1EC6': 'E',\n    '\\u0228': 'E',\n    '\\u1E1C': 'E',\n    '\\u0118': 'E',\n    '\\u1E18': 'E',\n    '\\u1E1A': 'E',\n    '\\u0190': 'E',\n    '\\u018E': 'E',\n    '\\u24BB': 'F',\n    '\\uFF26': 'F',\n    '\\u1E1E': 'F',\n    '\\u0191': 'F',\n    '\\uA77B': 'F',\n    '\\u24BC': 'G',\n    '\\uFF27': 'G',\n    '\\u01F4': 'G',\n    '\\u011C': 'G',\n    '\\u1E20': 'G',\n    '\\u011E': 'G',\n    '\\u0120': 'G',\n    '\\u01E6': 'G',\n    '\\u0122': 'G',\n    '\\u01E4': 'G',\n    '\\u0193': 'G',\n    '\\uA7A0': 'G',\n    '\\uA77D': 'G',\n    '\\uA77E': 'G',\n    '\\u24BD': 'H',\n    '\\uFF28': 'H',\n    '\\u0124': 'H',\n    '\\u1E22': 'H',\n    '\\u1E26': 'H',\n    '\\u021E': 'H',\n    '\\u1E24': 'H',\n    '\\u1E28': 'H',\n    '\\u1E2A': 'H',\n    '\\u0126': 'H',\n    '\\u2C67': 'H',\n    '\\u2C75': 'H',\n    '\\uA78D': 'H',\n    '\\u24BE': 'I',\n    '\\uFF29': 'I',\n    '\\u00CC': 'I',\n    '\\u00CD': 'I',\n    '\\u00CE': 'I',\n    '\\u0128': 'I',\n    '\\u012A': 'I',\n    '\\u012C': 'I',\n    '\\u0130': 'I',\n    '\\u00CF': 'I',\n    '\\u1E2E': 'I',\n    '\\u1EC8': 'I',\n    '\\u01CF': 'I',\n    '\\u0208': 'I',\n    '\\u020A': 'I',\n    '\\u1ECA': 'I',\n    '\\u012E': 'I',\n    '\\u1E2C': 'I',\n    '\\u0197': 'I',\n    '\\u24BF': 'J',\n    '\\uFF2A': 'J',\n    '\\u0134': 'J',\n    '\\u0248': 'J',\n    '\\u24C0': 'K',\n    '\\uFF2B': 'K',\n    '\\u1E30': 'K',\n    '\\u01E8': 'K',\n    '\\u1E32': 'K',\n    '\\u0136': 'K',\n    '\\u1E34': 'K',\n    '\\u0198': 'K',\n    '\\u2C69': 'K',\n    '\\uA740': 'K',\n    '\\uA742': 'K',\n    '\\uA744': 'K',\n    '\\uA7A2': 'K',\n    '\\u24C1': 'L',\n    '\\uFF2C': 'L',\n    '\\u013F': 'L',\n    '\\u0139': 'L',\n    '\\u013D': 'L',\n    '\\u1E36': 'L',\n    '\\u1E38': 'L',\n    '\\u013B': 'L',\n    '\\u1E3C': 'L',\n    '\\u1E3A': 'L',\n    '\\u0141': 'L',\n    '\\u023D': 'L',\n    '\\u2C62': 'L',\n    '\\u2C60': 'L',\n    '\\uA748': 'L',\n    '\\uA746': 'L',\n    '\\uA780': 'L',\n    '\\u01C7': 'LJ',\n    '\\u01C8': 'Lj',\n    '\\u24C2': 'M',\n    '\\uFF2D': 'M',\n    '\\u1E3E': 'M',\n    '\\u1E40': 'M',\n    '\\u1E42': 'M',\n    '\\u2C6E': 'M',\n    '\\u019C': 'M',\n    '\\u24C3': 'N',\n    '\\uFF2E': 'N',\n    '\\u01F8': 'N',\n    '\\u0143': 'N',\n    '\\u00D1': 'N',\n    '\\u1E44': 'N',\n    '\\u0147': 'N',\n    '\\u1E46': 'N',\n    '\\u0145': 'N',\n    '\\u1E4A': 'N',\n    '\\u1E48': 'N',\n    '\\u0220': 'N',\n    '\\u019D': 'N',\n    '\\uA790': 'N',\n    '\\uA7A4': 'N',\n    '\\u01CA': 'NJ',\n    '\\u01CB': 'Nj',\n    '\\u24C4': 'O',\n    '\\uFF2F': 'O',\n    '\\u00D2': 'O',\n    '\\u00D3': 'O',\n    '\\u00D4': 'O',\n    '\\u1ED2': 'O',\n    '\\u1ED0': 'O',\n    '\\u1ED6': 'O',\n    '\\u1ED4': 'O',\n    '\\u00D5': 'O',\n    '\\u1E4C': 'O',\n    '\\u022C': 'O',\n    '\\u1E4E': 'O',\n    '\\u014C': 'O',\n    '\\u1E50': 'O',\n    '\\u1E52': 'O',\n    '\\u014E': 'O',\n    '\\u022E': 'O',\n    '\\u0230': 'O',\n    '\\u00D6': 'O',\n    '\\u022A': 'O',\n    '\\u1ECE': 'O',\n    '\\u0150': 'O',\n    '\\u01D1': 'O',\n    '\\u020C': 'O',\n    '\\u020E': 'O',\n    '\\u01A0': 'O',\n    '\\u1EDC': 'O',\n    '\\u1EDA': 'O',\n    '\\u1EE0': 'O',\n    '\\u1EDE': 'O',\n    '\\u1EE2': 'O',\n    '\\u1ECC': 'O',\n    '\\u1ED8': 'O',\n    '\\u01EA': 'O',\n    '\\u01EC': 'O',\n    '\\u00D8': 'O',\n    '\\u01FE': 'O',\n    '\\u0186': 'O',\n    '\\u019F': 'O',\n    '\\uA74A': 'O',\n    '\\uA74C': 'O',\n    '\\u01A2': 'OI',\n    '\\uA74E': 'OO',\n    '\\u0222': 'OU',\n    '\\u24C5': 'P',\n    '\\uFF30': 'P',\n    '\\u1E54': 'P',\n    '\\u1E56': 'P',\n    '\\u01A4': 'P',\n    '\\u2C63': 'P',\n    '\\uA750': 'P',\n    '\\uA752': 'P',\n    '\\uA754': 'P',\n    '\\u24C6': 'Q',\n    '\\uFF31': 'Q',\n    '\\uA756': 'Q',\n    '\\uA758': 'Q',\n    '\\u024A': 'Q',\n    '\\u24C7': 'R',\n    '\\uFF32': 'R',\n    '\\u0154': 'R',\n    '\\u1E58': 'R',\n    '\\u0158': 'R',\n    '\\u0210': 'R',\n    '\\u0212': 'R',\n    '\\u1E5A': 'R',\n    '\\u1E5C': 'R',\n    '\\u0156': 'R',\n    '\\u1E5E': 'R',\n    '\\u024C': 'R',\n    '\\u2C64': 'R',\n    '\\uA75A': 'R',\n    '\\uA7A6': 'R',\n    '\\uA782': 'R',\n    '\\u24C8': 'S',\n    '\\uFF33': 'S',\n    '\\u1E9E': 'S',\n    '\\u015A': 'S',\n    '\\u1E64': 'S',\n    '\\u015C': 'S',\n    '\\u1E60': 'S',\n    '\\u0160': 'S',\n    '\\u1E66': 'S',\n    '\\u1E62': 'S',\n    '\\u1E68': 'S',\n    '\\u0218': 'S',\n    '\\u015E': 'S',\n    '\\u2C7E': 'S',\n    '\\uA7A8': 'S',\n    '\\uA784': 'S',\n    '\\u24C9': 'T',\n    '\\uFF34': 'T',\n    '\\u1E6A': 'T',\n    '\\u0164': 'T',\n    '\\u1E6C': 'T',\n    '\\u021A': 'T',\n    '\\u0162': 'T',\n    '\\u1E70': 'T',\n    '\\u1E6E': 'T',\n    '\\u0166': 'T',\n    '\\u01AC': 'T',\n    '\\u01AE': 'T',\n    '\\u023E': 'T',\n    '\\uA786': 'T',\n    '\\uA728': 'TZ',\n    '\\u24CA': 'U',\n    '\\uFF35': 'U',\n    '\\u00D9': 'U',\n    '\\u00DA': 'U',\n    '\\u00DB': 'U',\n    '\\u0168': 'U',\n    '\\u1E78': 'U',\n    '\\u016A': 'U',\n    '\\u1E7A': 'U',\n    '\\u016C': 'U',\n    '\\u00DC': 'U',\n    '\\u01DB': 'U',\n    '\\u01D7': 'U',\n    '\\u01D5': 'U',\n    '\\u01D9': 'U',\n    '\\u1EE6': 'U',\n    '\\u016E': 'U',\n    '\\u0170': 'U',\n    '\\u01D3': 'U',\n    '\\u0214': 'U',\n    '\\u0216': 'U',\n    '\\u01AF': 'U',\n    '\\u1EEA': 'U',\n    '\\u1EE8': 'U',\n    '\\u1EEE': 'U',\n    '\\u1EEC': 'U',\n    '\\u1EF0': 'U',\n    '\\u1EE4': 'U',\n    '\\u1E72': 'U',\n    '\\u0172': 'U',\n    '\\u1E76': 'U',\n    '\\u1E74': 'U',\n    '\\u0244': 'U',\n    '\\u24CB': 'V',\n    '\\uFF36': 'V',\n    '\\u1E7C': 'V',\n    '\\u1E7E': 'V',\n    '\\u01B2': 'V',\n    '\\uA75E': 'V',\n    '\\u0245': 'V',\n    '\\uA760': 'VY',\n    '\\u24CC': 'W',\n    '\\uFF37': 'W',\n    '\\u1E80': 'W',\n    '\\u1E82': 'W',\n    '\\u0174': 'W',\n    '\\u1E86': 'W',\n    '\\u1E84': 'W',\n    '\\u1E88': 'W',\n    '\\u2C72': 'W',\n    '\\u24CD': 'X',\n    '\\uFF38': 'X',\n    '\\u1E8A': 'X',\n    '\\u1E8C': 'X',\n    '\\u24CE': 'Y',\n    '\\uFF39': 'Y',\n    '\\u1EF2': 'Y',\n    '\\u00DD': 'Y',\n    '\\u0176': 'Y',\n    '\\u1EF8': 'Y',\n    '\\u0232': 'Y',\n    '\\u1E8E': 'Y',\n    '\\u0178': 'Y',\n    '\\u1EF6': 'Y',\n    '\\u1EF4': 'Y',\n    '\\u01B3': 'Y',\n    '\\u024E': 'Y',\n    '\\u1EFE': 'Y',\n    '\\u24CF': 'Z',\n    '\\uFF3A': 'Z',\n    '\\u0179': 'Z',\n    '\\u1E90': 'Z',\n    '\\u017B': 'Z',\n    '\\u017D': 'Z',\n    '\\u1E92': 'Z',\n    '\\u1E94': 'Z',\n    '\\u01B5': 'Z',\n    '\\u0224': 'Z',\n    '\\u2C7F': 'Z',\n    '\\u2C6B': 'Z',\n    '\\uA762': 'Z',\n    '\\u24D0': 'a',\n    '\\uFF41': 'a',\n    '\\u1E9A': 'a',\n    '\\u00E0': 'a',\n    '\\u00E1': 'a',\n    '\\u00E2': 'a',\n    '\\u1EA7': 'a',\n    '\\u1EA5': 'a',\n    '\\u1EAB': 'a',\n    '\\u1EA9': 'a',\n    '\\u00E3': 'a',\n    '\\u0101': 'a',\n    '\\u0103': 'a',\n    '\\u1EB1': 'a',\n    '\\u1EAF': 'a',\n    '\\u1EB5': 'a',\n    '\\u1EB3': 'a',\n    '\\u0227': 'a',\n    '\\u01E1': 'a',\n    '\\u00E4': 'a',\n    '\\u01DF': 'a',\n    '\\u1EA3': 'a',\n    '\\u00E5': 'a',\n    '\\u01FB': 'a',\n    '\\u01CE': 'a',\n    '\\u0201': 'a',\n    '\\u0203': 'a',\n    '\\u1EA1': 'a',\n    '\\u1EAD': 'a',\n    '\\u1EB7': 'a',\n    '\\u1E01': 'a',\n    '\\u0105': 'a',\n    '\\u2C65': 'a',\n    '\\u0250': 'a',\n    '\\uA733': 'aa',\n    '\\u00E6': 'ae',\n    '\\u01FD': 'ae',\n    '\\u01E3': 'ae',\n    '\\uA735': 'ao',\n    '\\uA737': 'au',\n    '\\uA739': 'av',\n    '\\uA73B': 'av',\n    '\\uA73D': 'ay',\n    '\\u24D1': 'b',\n    '\\uFF42': 'b',\n    '\\u1E03': 'b',\n    '\\u1E05': 'b',\n    '\\u1E07': 'b',\n    '\\u0180': 'b',\n    '\\u0183': 'b',\n    '\\u0253': 'b',\n    '\\u24D2': 'c',\n    '\\uFF43': 'c',\n    '\\u0107': 'c',\n    '\\u0109': 'c',\n    '\\u010B': 'c',\n    '\\u010D': 'c',\n    '\\u00E7': 'c',\n    '\\u1E09': 'c',\n    '\\u0188': 'c',\n    '\\u023C': 'c',\n    '\\uA73F': 'c',\n    '\\u2184': 'c',\n    '\\u24D3': 'd',\n    '\\uFF44': 'd',\n    '\\u1E0B': 'd',\n    '\\u010F': 'd',\n    '\\u1E0D': 'd',\n    '\\u1E11': 'd',\n    '\\u1E13': 'd',\n    '\\u1E0F': 'd',\n    '\\u0111': 'd',\n    '\\u018C': 'd',\n    '\\u0256': 'd',\n    '\\u0257': 'd',\n    '\\uA77A': 'd',\n    '\\u01F3': 'dz',\n    '\\u01C6': 'dz',\n    '\\u24D4': 'e',\n    '\\uFF45': 'e',\n    '\\u00E8': 'e',\n    '\\u00E9': 'e',\n    '\\u00EA': 'e',\n    '\\u1EC1': 'e',\n    '\\u1EBF': 'e',\n    '\\u1EC5': 'e',\n    '\\u1EC3': 'e',\n    '\\u1EBD': 'e',\n    '\\u0113': 'e',\n    '\\u1E15': 'e',\n    '\\u1E17': 'e',\n    '\\u0115': 'e',\n    '\\u0117': 'e',\n    '\\u00EB': 'e',\n    '\\u1EBB': 'e',\n    '\\u011B': 'e',\n    '\\u0205': 'e',\n    '\\u0207': 'e',\n    '\\u1EB9': 'e',\n    '\\u1EC7': 'e',\n    '\\u0229': 'e',\n    '\\u1E1D': 'e',\n    '\\u0119': 'e',\n    '\\u1E19': 'e',\n    '\\u1E1B': 'e',\n    '\\u0247': 'e',\n    '\\u025B': 'e',\n    '\\u01DD': 'e',\n    '\\u24D5': 'f',\n    '\\uFF46': 'f',\n    '\\u1E1F': 'f',\n    '\\u0192': 'f',\n    '\\uA77C': 'f',\n    '\\u24D6': 'g',\n    '\\uFF47': 'g',\n    '\\u01F5': 'g',\n    '\\u011D': 'g',\n    '\\u1E21': 'g',\n    '\\u011F': 'g',\n    '\\u0121': 'g',\n    '\\u01E7': 'g',\n    '\\u0123': 'g',\n    '\\u01E5': 'g',\n    '\\u0260': 'g',\n    '\\uA7A1': 'g',\n    '\\u1D79': 'g',\n    '\\uA77F': 'g',\n    '\\u24D7': 'h',\n    '\\uFF48': 'h',\n    '\\u0125': 'h',\n    '\\u1E23': 'h',\n    '\\u1E27': 'h',\n    '\\u021F': 'h',\n    '\\u1E25': 'h',\n    '\\u1E29': 'h',\n    '\\u1E2B': 'h',\n    '\\u1E96': 'h',\n    '\\u0127': 'h',\n    '\\u2C68': 'h',\n    '\\u2C76': 'h',\n    '\\u0265': 'h',\n    '\\u0195': 'hv',\n    '\\u24D8': 'i',\n    '\\uFF49': 'i',\n    '\\u00EC': 'i',\n    '\\u00ED': 'i',\n    '\\u00EE': 'i',\n    '\\u0129': 'i',\n    '\\u012B': 'i',\n    '\\u012D': 'i',\n    '\\u00EF': 'i',\n    '\\u1E2F': 'i',\n    '\\u1EC9': 'i',\n    '\\u01D0': 'i',\n    '\\u0209': 'i',\n    '\\u020B': 'i',\n    '\\u1ECB': 'i',\n    '\\u012F': 'i',\n    '\\u1E2D': 'i',\n    '\\u0268': 'i',\n    '\\u0131': 'i',\n    '\\u24D9': 'j',\n    '\\uFF4A': 'j',\n    '\\u0135': 'j',\n    '\\u01F0': 'j',\n    '\\u0249': 'j',\n    '\\u24DA': 'k',\n    '\\uFF4B': 'k',\n    '\\u1E31': 'k',\n    '\\u01E9': 'k',\n    '\\u1E33': 'k',\n    '\\u0137': 'k',\n    '\\u1E35': 'k',\n    '\\u0199': 'k',\n    '\\u2C6A': 'k',\n    '\\uA741': 'k',\n    '\\uA743': 'k',\n    '\\uA745': 'k',\n    '\\uA7A3': 'k',\n    '\\u24DB': 'l',\n    '\\uFF4C': 'l',\n    '\\u0140': 'l',\n    '\\u013A': 'l',\n    '\\u013E': 'l',\n    '\\u1E37': 'l',\n    '\\u1E39': 'l',\n    '\\u013C': 'l',\n    '\\u1E3D': 'l',\n    '\\u1E3B': 'l',\n    '\\u017F': 'l',\n    '\\u0142': 'l',\n    '\\u019A': 'l',\n    '\\u026B': 'l',\n    '\\u2C61': 'l',\n    '\\uA749': 'l',\n    '\\uA781': 'l',\n    '\\uA747': 'l',\n    '\\u01C9': 'lj',\n    '\\u24DC': 'm',\n    '\\uFF4D': 'm',\n    '\\u1E3F': 'm',\n    '\\u1E41': 'm',\n    '\\u1E43': 'm',\n    '\\u0271': 'm',\n    '\\u026F': 'm',\n    '\\u24DD': 'n',\n    '\\uFF4E': 'n',\n    '\\u01F9': 'n',\n    '\\u0144': 'n',\n    '\\u00F1': 'n',\n    '\\u1E45': 'n',\n    '\\u0148': 'n',\n    '\\u1E47': 'n',\n    '\\u0146': 'n',\n    '\\u1E4B': 'n',\n    '\\u1E49': 'n',\n    '\\u019E': 'n',\n    '\\u0272': 'n',\n    '\\u0149': 'n',\n    '\\uA791': 'n',\n    '\\uA7A5': 'n',\n    '\\u01CC': 'nj',\n    '\\u24DE': 'o',\n    '\\uFF4F': 'o',\n    '\\u00F2': 'o',\n    '\\u00F3': 'o',\n    '\\u00F4': 'o',\n    '\\u1ED3': 'o',\n    '\\u1ED1': 'o',\n    '\\u1ED7': 'o',\n    '\\u1ED5': 'o',\n    '\\u00F5': 'o',\n    '\\u1E4D': 'o',\n    '\\u022D': 'o',\n    '\\u1E4F': 'o',\n    '\\u014D': 'o',\n    '\\u1E51': 'o',\n    '\\u1E53': 'o',\n    '\\u014F': 'o',\n    '\\u022F': 'o',\n    '\\u0231': 'o',\n    '\\u00F6': 'o',\n    '\\u022B': 'o',\n    '\\u1ECF': 'o',\n    '\\u0151': 'o',\n    '\\u01D2': 'o',\n    '\\u020D': 'o',\n    '\\u020F': 'o',\n    '\\u01A1': 'o',\n    '\\u1EDD': 'o',\n    '\\u1EDB': 'o',\n    '\\u1EE1': 'o',\n    '\\u1EDF': 'o',\n    '\\u1EE3': 'o',\n    '\\u1ECD': 'o',\n    '\\u1ED9': 'o',\n    '\\u01EB': 'o',\n    '\\u01ED': 'o',\n    '\\u00F8': 'o',\n    '\\u01FF': 'o',\n    '\\u0254': 'o',\n    '\\uA74B': 'o',\n    '\\uA74D': 'o',\n    '\\u0275': 'o',\n    '\\u01A3': 'oi',\n    '\\u0223': 'ou',\n    '\\uA74F': 'oo',\n    '\\u24DF': 'p',\n    '\\uFF50': 'p',\n    '\\u1E55': 'p',\n    '\\u1E57': 'p',\n    '\\u01A5': 'p',\n    '\\u1D7D': 'p',\n    '\\uA751': 'p',\n    '\\uA753': 'p',\n    '\\uA755': 'p',\n    '\\u24E0': 'q',\n    '\\uFF51': 'q',\n    '\\u024B': 'q',\n    '\\uA757': 'q',\n    '\\uA759': 'q',\n    '\\u24E1': 'r',\n    '\\uFF52': 'r',\n    '\\u0155': 'r',\n    '\\u1E59': 'r',\n    '\\u0159': 'r',\n    '\\u0211': 'r',\n    '\\u0213': 'r',\n    '\\u1E5B': 'r',\n    '\\u1E5D': 'r',\n    '\\u0157': 'r',\n    '\\u1E5F': 'r',\n    '\\u024D': 'r',\n    '\\u027D': 'r',\n    '\\uA75B': 'r',\n    '\\uA7A7': 'r',\n    '\\uA783': 'r',\n    '\\u24E2': 's',\n    '\\uFF53': 's',\n    '\\u00DF': 's',\n    '\\u015B': 's',\n    '\\u1E65': 's',\n    '\\u015D': 's',\n    '\\u1E61': 's',\n    '\\u0161': 's',\n    '\\u1E67': 's',\n    '\\u1E63': 's',\n    '\\u1E69': 's',\n    '\\u0219': 's',\n    '\\u015F': 's',\n    '\\u023F': 's',\n    '\\uA7A9': 's',\n    '\\uA785': 's',\n    '\\u1E9B': 's',\n    '\\u24E3': 't',\n    '\\uFF54': 't',\n    '\\u1E6B': 't',\n    '\\u1E97': 't',\n    '\\u0165': 't',\n    '\\u1E6D': 't',\n    '\\u021B': 't',\n    '\\u0163': 't',\n    '\\u1E71': 't',\n    '\\u1E6F': 't',\n    '\\u0167': 't',\n    '\\u01AD': 't',\n    '\\u0288': 't',\n    '\\u2C66': 't',\n    '\\uA787': 't',\n    '\\uA729': 'tz',\n    '\\u24E4': 'u',\n    '\\uFF55': 'u',\n    '\\u00F9': 'u',\n    '\\u00FA': 'u',\n    '\\u00FB': 'u',\n    '\\u0169': 'u',\n    '\\u1E79': 'u',\n    '\\u016B': 'u',\n    '\\u1E7B': 'u',\n    '\\u016D': 'u',\n    '\\u00FC': 'u',\n    '\\u01DC': 'u',\n    '\\u01D8': 'u',\n    '\\u01D6': 'u',\n    '\\u01DA': 'u',\n    '\\u1EE7': 'u',\n    '\\u016F': 'u',\n    '\\u0171': 'u',\n    '\\u01D4': 'u',\n    '\\u0215': 'u',\n    '\\u0217': 'u',\n    '\\u01B0': 'u',\n    '\\u1EEB': 'u',\n    '\\u1EE9': 'u',\n    '\\u1EEF': 'u',\n    '\\u1EED': 'u',\n    '\\u1EF1': 'u',\n    '\\u1EE5': 'u',\n    '\\u1E73': 'u',\n    '\\u0173': 'u',\n    '\\u1E77': 'u',\n    '\\u1E75': 'u',\n    '\\u0289': 'u',\n    '\\u24E5': 'v',\n    '\\uFF56': 'v',\n    '\\u1E7D': 'v',\n    '\\u1E7F': 'v',\n    '\\u028B': 'v',\n    '\\uA75F': 'v',\n    '\\u028C': 'v',\n    '\\uA761': 'vy',\n    '\\u24E6': 'w',\n    '\\uFF57': 'w',\n    '\\u1E81': 'w',\n    '\\u1E83': 'w',\n    '\\u0175': 'w',\n    '\\u1E87': 'w',\n    '\\u1E85': 'w',\n    '\\u1E98': 'w',\n    '\\u1E89': 'w',\n    '\\u2C73': 'w',\n    '\\u24E7': 'x',\n    '\\uFF58': 'x',\n    '\\u1E8B': 'x',\n    '\\u1E8D': 'x',\n    '\\u24E8': 'y',\n    '\\uFF59': 'y',\n    '\\u1EF3': 'y',\n    '\\u00FD': 'y',\n    '\\u0177': 'y',\n    '\\u1EF9': 'y',\n    '\\u0233': 'y',\n    '\\u1E8F': 'y',\n    '\\u00FF': 'y',\n    '\\u1EF7': 'y',\n    '\\u1E99': 'y',\n    '\\u1EF5': 'y',\n    '\\u01B4': 'y',\n    '\\u024F': 'y',\n    '\\u1EFF': 'y',\n    '\\u24E9': 'z',\n    '\\uFF5A': 'z',\n    '\\u017A': 'z',\n    '\\u1E91': 'z',\n    '\\u017C': 'z',\n    '\\u017E': 'z',\n    '\\u1E93': 'z',\n    '\\u1E95': 'z',\n    '\\u01B6': 'z',\n    '\\u0225': 'z',\n    '\\u0240': 'z',\n    '\\u2C6C': 'z',\n    '\\uA763': 'z',\n    '\\u0386': '\\u0391',\n    '\\u0388': '\\u0395',\n    '\\u0389': '\\u0397',\n    '\\u038A': '\\u0399',\n    '\\u03AA': '\\u0399',\n    '\\u038C': '\\u039F',\n    '\\u038E': '\\u03A5',\n    '\\u03AB': '\\u03A5',\n    '\\u038F': '\\u03A9',\n    '\\u03AC': '\\u03B1',\n    '\\u03AD': '\\u03B5',\n    '\\u03AE': '\\u03B7',\n    '\\u03AF': '\\u03B9',\n    '\\u03CA': '\\u03B9',\n    '\\u0390': '\\u03B9',\n    '\\u03CC': '\\u03BF',\n    '\\u03CD': '\\u03C5',\n    '\\u03CB': '\\u03C5',\n    '\\u03B0': '\\u03C5',\n    '\\u03C9': '\\u03C9',\n    '\\u03C2': '\\u03C3'\n};\nfunction stripSpecialChars(text) {\n    const match = (a) => {\n        return diacritics[a] || a;\n    };\n    return text.replace(/[^\\u0000-\\u007E]/g, match);\n}\n\nclass ItemsList {\n    constructor(_ngSelect, _selectionModel) {\n        this._ngSelect = _ngSelect;\n        this._selectionModel = _selectionModel;\n        this._items = [];\n        this._filteredItems = [];\n        this._markedIndex = -1;\n    }\n    get items() {\n        return this._items;\n    }\n    get filteredItems() {\n        return this._filteredItems;\n    }\n    get markedIndex() {\n        return this._markedIndex;\n    }\n    get selectedItems() {\n        return this._selectionModel.value;\n    }\n    get markedItem() {\n        return this._filteredItems[this._markedIndex];\n    }\n    get noItemsToSelect() {\n        return this._ngSelect.hideSelected && this._items.length === this.selectedItems.length;\n    }\n    get maxItemsSelected() {\n        return this._ngSelect.multiple && this._ngSelect.maxSelectedItems <= this.selectedItems.length;\n    }\n    get lastSelectedItem() {\n        let i = this.selectedItems.length - 1;\n        for (; i >= 0; i--) {\n            let item = this.selectedItems[i];\n            if (!item.disabled) {\n                return item;\n            }\n        }\n        return null;\n    }\n    setItems(items) {\n        this._items = items.map((item, index) => this.mapItem(item, index));\n        if (this._ngSelect.groupBy) {\n            this._groups = this._groupBy(this._items, this._ngSelect.groupBy);\n            this._items = this._flatten(this._groups);\n        }\n        else {\n            this._groups = new Map();\n            this._groups.set(undefined, this._items);\n        }\n        this._filteredItems = [...this._items];\n    }\n    select(item) {\n        if (item.selected || this.maxItemsSelected) {\n            return;\n        }\n        const multiple = this._ngSelect.multiple;\n        if (!multiple) {\n            this.clearSelected();\n        }\n        this._selectionModel.select(item, multiple, this._ngSelect.selectableGroupAsModel);\n        if (this._ngSelect.hideSelected) {\n            this._hideSelected(item);\n        }\n    }\n    unselect(item) {\n        if (!item.selected) {\n            return;\n        }\n        this._selectionModel.unselect(item, this._ngSelect.multiple);\n        if (this._ngSelect.hideSelected && isDefined(item.index) && this._ngSelect.multiple) {\n            this._showSelected(item);\n        }\n    }\n    findItem(value) {\n        let findBy;\n        if (this._ngSelect.compareWith) {\n            findBy = item => this._ngSelect.compareWith(item.value, value);\n        }\n        else if (this._ngSelect.bindValue) {\n            findBy = item => !item.children && this.resolveNested(item.value, this._ngSelect.bindValue) === value;\n        }\n        else {\n            findBy = item => item.value === value ||\n                !item.children && item.label && item.label === this.resolveNested(value, this._ngSelect.bindLabel);\n        }\n        return this._items.find(item => findBy(item));\n    }\n    addItem(item) {\n        const option = this.mapItem(item, this._items.length);\n        this._items.push(option);\n        this._filteredItems.push(option);\n        return option;\n    }\n    clearSelected(keepDisabled = false) {\n        this._selectionModel.clear(keepDisabled);\n        this._items.forEach(item => {\n            item.selected = keepDisabled && item.selected && item.disabled;\n            item.marked = false;\n        });\n        if (this._ngSelect.hideSelected) {\n            this.resetFilteredItems();\n        }\n    }\n    findByLabel(term) {\n        term = stripSpecialChars(term).toLocaleLowerCase();\n        return this.filteredItems.find(item => {\n            const label = stripSpecialChars(item.label).toLocaleLowerCase();\n            return label.substr(0, term.length) === term;\n        });\n    }\n    filter(term) {\n        if (!term) {\n            this.resetFilteredItems();\n            return;\n        }\n        this._filteredItems = [];\n        term = this._ngSelect.searchFn ? term : stripSpecialChars(term).toLocaleLowerCase();\n        const match = this._ngSelect.searchFn || this._defaultSearchFn;\n        const hideSelected = this._ngSelect.hideSelected;\n        for (const key of Array.from(this._groups.keys())) {\n            const matchedItems = [];\n            for (const item of this._groups.get(key)) {\n                if (hideSelected && (item.parent && item.parent.selected || item.selected)) {\n                    continue;\n                }\n                const searchItem = this._ngSelect.searchFn ? item.value : item;\n                if (match(term, searchItem)) {\n                    matchedItems.push(item);\n                }\n            }\n            if (matchedItems.length > 0) {\n                const [last] = matchedItems.slice(-1);\n                if (last.parent) {\n                    const head = this._items.find(x => x === last.parent);\n                    this._filteredItems.push(head);\n                }\n                this._filteredItems.push(...matchedItems);\n            }\n        }\n    }\n    resetFilteredItems() {\n        if (this._filteredItems.length === this._items.length) {\n            return;\n        }\n        if (this._ngSelect.hideSelected && this.selectedItems.length > 0) {\n            this._filteredItems = this._items.filter(x => !x.selected);\n        }\n        else {\n            this._filteredItems = this._items;\n        }\n    }\n    unmarkItem() {\n        this._markedIndex = -1;\n    }\n    markNextItem() {\n        this._stepToItem(+1);\n    }\n    markPreviousItem() {\n        this._stepToItem(-1);\n    }\n    markItem(item) {\n        this._markedIndex = this._filteredItems.indexOf(item);\n    }\n    markSelectedOrDefault(markDefault) {\n        if (this._filteredItems.length === 0) {\n            return;\n        }\n        const lastMarkedIndex = this._getLastMarkedIndex();\n        if (lastMarkedIndex > -1) {\n            this._markedIndex = lastMarkedIndex;\n        }\n        else {\n            this._markedIndex = markDefault ? this.filteredItems.findIndex(x => !x.disabled) : -1;\n        }\n    }\n    resolveNested(option, key) {\n        if (!isObject(option)) {\n            return option;\n        }\n        if (key.indexOf('.') === -1) {\n            return option[key];\n        }\n        else {\n            let keys = key.split('.');\n            let value = option;\n            for (let i = 0, len = keys.length; i < len; ++i) {\n                if (value == null) {\n                    return null;\n                }\n                value = value[keys[i]];\n            }\n            return value;\n        }\n    }\n    mapItem(item, index) {\n        const label = isDefined(item.$ngOptionLabel) ? item.$ngOptionLabel : this.resolveNested(item, this._ngSelect.bindLabel);\n        const value = isDefined(item.$ngOptionValue) ? item.$ngOptionValue : item;\n        return {\n            index: index,\n            label: isDefined(label) ? label.toString() : '',\n            value: value,\n            disabled: item.disabled,\n            htmlId: `${this._ngSelect.dropdownId}-${index}`,\n        };\n    }\n    mapSelectedItems() {\n        const multiple = this._ngSelect.multiple;\n        for (const selected of this.selectedItems) {\n            const value = this._ngSelect.bindValue ? this.resolveNested(selected.value, this._ngSelect.bindValue) : selected.value;\n            const item = isDefined(value) ? this.findItem(value) : null;\n            this._selectionModel.unselect(selected, multiple);\n            this._selectionModel.select(item || selected, multiple, this._ngSelect.selectableGroupAsModel);\n        }\n        if (this._ngSelect.hideSelected) {\n            this._filteredItems = this.filteredItems.filter(x => this.selectedItems.indexOf(x) === -1);\n        }\n    }\n    _showSelected(item) {\n        this._filteredItems.push(item);\n        if (item.parent) {\n            const parent = item.parent;\n            const parentExists = this._filteredItems.find(x => x === parent);\n            if (!parentExists) {\n                this._filteredItems.push(parent);\n            }\n        }\n        else if (item.children) {\n            for (const child of item.children) {\n                child.selected = false;\n                this._filteredItems.push(child);\n            }\n        }\n        this._filteredItems = [...this._filteredItems.sort((a, b) => (a.index - b.index))];\n    }\n    _hideSelected(item) {\n        this._filteredItems = this._filteredItems.filter(x => x !== item);\n        if (item.parent) {\n            const children = item.parent.children;\n            if (children.every(x => x.selected)) {\n                this._filteredItems = this._filteredItems.filter(x => x !== item.parent);\n            }\n        }\n        else if (item.children) {\n            this._filteredItems = this.filteredItems.filter(x => x.parent !== item);\n        }\n    }\n    _defaultSearchFn(search, opt) {\n        const label = stripSpecialChars(opt.label).toLocaleLowerCase();\n        return label.indexOf(search) > -1;\n    }\n    _getNextItemIndex(steps) {\n        if (steps > 0) {\n            return (this._markedIndex >= this._filteredItems.length - 1) ? 0 : (this._markedIndex + 1);\n        }\n        return (this._markedIndex <= 0) ? (this._filteredItems.length - 1) : (this._markedIndex - 1);\n    }\n    _stepToItem(steps) {\n        if (this._filteredItems.length === 0 || this._filteredItems.every(x => x.disabled)) {\n            return;\n        }\n        this._markedIndex = this._getNextItemIndex(steps);\n        if (this.markedItem.disabled) {\n            this._stepToItem(steps);\n        }\n    }\n    _getLastMarkedIndex() {\n        if (this._ngSelect.hideSelected) {\n            return -1;\n        }\n        if (this._markedIndex > -1 && this.markedItem === undefined) {\n            return -1;\n        }\n        const selectedIndex = this._filteredItems.indexOf(this.lastSelectedItem);\n        if (this.lastSelectedItem && selectedIndex < 0) {\n            return -1;\n        }\n        return Math.max(this.markedIndex, selectedIndex);\n    }\n    _groupBy(items, prop) {\n        const groups = new Map();\n        if (items.length === 0) {\n            return groups;\n        }\n        // Check if items are already grouped by given key.\n        if (Array.isArray(items[0].value[prop])) {\n            for (const item of items) {\n                const children = (item.value[prop] || []).map((x, index) => this.mapItem(x, index));\n                groups.set(item, children);\n            }\n            return groups;\n        }\n        const isFnKey = isFunction(this._ngSelect.groupBy);\n        const keyFn = (item) => {\n            let key = isFnKey ? prop(item.value) : item.value[prop];\n            return isDefined(key) ? key : undefined;\n        };\n        // Group items by key.\n        for (const item of items) {\n            let key = keyFn(item);\n            const group = groups.get(key);\n            if (group) {\n                group.push(item);\n            }\n            else {\n                groups.set(key, [item]);\n            }\n        }\n        return groups;\n    }\n    _flatten(groups) {\n        const isGroupByFn = isFunction(this._ngSelect.groupBy);\n        const items = [];\n        for (const key of Array.from(groups.keys())) {\n            let i = items.length;\n            if (key === undefined) {\n                const withoutGroup = groups.get(undefined) || [];\n                items.push(...withoutGroup.map(x => {\n                    x.index = i++;\n                    return x;\n                }));\n                continue;\n            }\n            const isObjectKey = isObject(key);\n            const parent = {\n                label: isObjectKey ? '' : String(key),\n                children: undefined,\n                parent: null,\n                index: i++,\n                disabled: !this._ngSelect.selectableGroup,\n                htmlId: newId(),\n            };\n            const groupKey = isGroupByFn ? this._ngSelect.bindLabel : this._ngSelect.groupBy;\n            const groupValue = this._ngSelect.groupValue || (() => {\n                if (isObjectKey) {\n                    return key.value;\n                }\n                return { [groupKey]: key };\n            });\n            const children = groups.get(key).map(x => {\n                x.parent = parent;\n                x.children = undefined;\n                x.index = i++;\n                return x;\n            });\n            parent.children = children;\n            parent.value = groupValue(key, children.map(x => x.value));\n            items.push(parent);\n            items.push(...children);\n        }\n        return items;\n    }\n}\n\nvar KeyCode;\n(function (KeyCode) {\n    KeyCode[KeyCode[\"Tab\"] = 9] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 13] = \"Enter\";\n    KeyCode[KeyCode[\"Esc\"] = 27] = \"Esc\";\n    KeyCode[KeyCode[\"Space\"] = 32] = \"Space\";\n    KeyCode[KeyCode[\"ArrowUp\"] = 38] = \"ArrowUp\";\n    KeyCode[KeyCode[\"ArrowDown\"] = 40] = \"ArrowDown\";\n    KeyCode[KeyCode[\"Backspace\"] = 8] = \"Backspace\";\n})(KeyCode || (KeyCode = {}));\n\nclass NgDropdownPanelService {\n    constructor() {\n        this._dimensions = {\n            itemHeight: 0,\n            panelHeight: 0,\n            itemsPerViewport: 0\n        };\n    }\n    get dimensions() {\n        return this._dimensions;\n    }\n    calculateItems(scrollPos, itemsLength, buffer) {\n        const d = this._dimensions;\n        const scrollHeight = d.itemHeight * itemsLength;\n        const scrollTop = Math.max(0, scrollPos);\n        const indexByScrollTop = scrollTop / scrollHeight * itemsLength;\n        let end = Math.min(itemsLength, Math.ceil(indexByScrollTop) + (d.itemsPerViewport + 1));\n        const maxStartEnd = end;\n        const maxStart = Math.max(0, maxStartEnd - d.itemsPerViewport);\n        let start = Math.min(maxStart, Math.floor(indexByScrollTop));\n        let topPadding = d.itemHeight * Math.ceil(start) - (d.itemHeight * Math.min(start, buffer));\n        topPadding = !isNaN(topPadding) ? topPadding : 0;\n        start = !isNaN(start) ? start : -1;\n        end = !isNaN(end) ? end : -1;\n        start -= buffer;\n        start = Math.max(0, start);\n        end += buffer;\n        end = Math.min(itemsLength, end);\n        return {\n            topPadding,\n            scrollHeight,\n            start,\n            end\n        };\n    }\n    setDimensions(itemHeight, panelHeight) {\n        const itemsPerViewport = Math.max(1, Math.floor(panelHeight / itemHeight));\n        this._dimensions = {\n            itemHeight,\n            panelHeight,\n            itemsPerViewport\n        };\n    }\n    getScrollTo(itemTop, itemHeight, lastScroll) {\n        const { panelHeight } = this.dimensions;\n        const itemBottom = itemTop + itemHeight;\n        const top = lastScroll;\n        const bottom = top + panelHeight;\n        if (panelHeight >= itemBottom && lastScroll === itemTop) {\n            return null;\n        }\n        if (itemBottom > bottom) {\n            return top + itemBottom - bottom;\n        }\n        else if (itemTop <= top) {\n            return itemTop;\n        }\n        return null;\n    }\n}\nNgDropdownPanelService.ɵfac = function NgDropdownPanelService_Factory(t) { return new (t || NgDropdownPanelService)(); };\nNgDropdownPanelService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgDropdownPanelService, factory: NgDropdownPanelService.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgDropdownPanelService, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n\nconst TOP_CSS_CLASS = 'ng-select-top';\nconst BOTTOM_CSS_CLASS = 'ng-select-bottom';\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\nclass NgDropdownPanelComponent {\n    constructor(_renderer, _zone, _panelService, _elementRef, _document) {\n        this._renderer = _renderer;\n        this._zone = _zone;\n        this._panelService = _panelService;\n        this._document = _document;\n        this.items = [];\n        this.position = 'auto';\n        this.virtualScroll = false;\n        this.filterValue = null;\n        this.update = new EventEmitter();\n        this.scroll = new EventEmitter();\n        this.scrollToEnd = new EventEmitter();\n        this.outsideClick = new EventEmitter();\n        this._destroy$ = new Subject();\n        this._scrollToEndFired = false;\n        this._updateScrollHeight = false;\n        this._lastScrollPosition = 0;\n        this._dropdown = _elementRef.nativeElement;\n    }\n    get currentPosition() {\n        return this._currentPosition;\n    }\n    get itemsLength() {\n        return this._itemsLength;\n    }\n    set itemsLength(value) {\n        if (value !== this._itemsLength) {\n            this._itemsLength = value;\n            this._onItemsLengthChanged();\n        }\n    }\n    get _startOffset() {\n        if (this.markedItem) {\n            const { itemHeight, panelHeight } = this._panelService.dimensions;\n            const offset = this.markedItem.index * itemHeight;\n            return panelHeight > offset ? 0 : offset;\n        }\n        return 0;\n    }\n    handleMousedown($event) {\n        const target = $event.target;\n        if (target.tagName === 'INPUT') {\n            return;\n        }\n        $event.preventDefault();\n    }\n    ngOnInit() {\n        this._select = this._dropdown.parentElement;\n        this._virtualPadding = this.paddingElementRef.nativeElement;\n        this._scrollablePanel = this.scrollElementRef.nativeElement;\n        this._contentPanel = this.contentElementRef.nativeElement;\n        this._handleScroll();\n        this._handleOutsideClick();\n        this._appendDropdown();\n    }\n    ngOnChanges(changes) {\n        if (changes.items) {\n            const change = changes.items;\n            this._onItemsChange(change.currentValue, change.firstChange);\n        }\n    }\n    ngOnDestroy() {\n        this._destroy$.next();\n        this._destroy$.complete();\n        this._destroy$.unsubscribe();\n        if (this.appendTo) {\n            this._renderer.removeChild(this._dropdown.parentNode, this._dropdown);\n        }\n    }\n    scrollTo(option, startFromOption = false) {\n        if (!option) {\n            return;\n        }\n        const index = this.items.indexOf(option);\n        if (index < 0 || index >= this.itemsLength) {\n            return;\n        }\n        let scrollTo;\n        if (this.virtualScroll) {\n            const itemHeight = this._panelService.dimensions.itemHeight;\n            scrollTo = this._panelService.getScrollTo(index * itemHeight, itemHeight, this._lastScrollPosition);\n        }\n        else {\n            const item = this._dropdown.querySelector(`#${option.htmlId}`);\n            const lastScroll = startFromOption ? item.offsetTop : this._lastScrollPosition;\n            scrollTo = this._panelService.getScrollTo(item.offsetTop, item.clientHeight, lastScroll);\n        }\n        if (isDefined(scrollTo)) {\n            this._scrollablePanel.scrollTop = scrollTo;\n        }\n    }\n    scrollToTag() {\n        const panel = this._scrollablePanel;\n        panel.scrollTop = panel.scrollHeight - panel.clientHeight;\n    }\n    adjustPosition() {\n        this._updateYPosition();\n    }\n    _handleDropdownPosition() {\n        this._currentPosition = this._calculateCurrentPosition(this._dropdown);\n        if (this._currentPosition === 'top') {\n            this._renderer.addClass(this._dropdown, TOP_CSS_CLASS);\n            this._renderer.removeClass(this._dropdown, BOTTOM_CSS_CLASS);\n            this._renderer.addClass(this._select, TOP_CSS_CLASS);\n            this._renderer.removeClass(this._select, BOTTOM_CSS_CLASS);\n        }\n        else {\n            this._renderer.addClass(this._dropdown, BOTTOM_CSS_CLASS);\n            this._renderer.removeClass(this._dropdown, TOP_CSS_CLASS);\n            this._renderer.addClass(this._select, BOTTOM_CSS_CLASS);\n            this._renderer.removeClass(this._select, TOP_CSS_CLASS);\n        }\n        if (this.appendTo) {\n            this._updateYPosition();\n        }\n        this._dropdown.style.opacity = '1';\n    }\n    _handleScroll() {\n        this._zone.runOutsideAngular(() => {\n            fromEvent(this.scrollElementRef.nativeElement, 'scroll')\n                .pipe(takeUntil(this._destroy$), auditTime(0, SCROLL_SCHEDULER))\n                .subscribe((e) => {\n                const path = e.path || (e.composedPath && e.composedPath());\n                const scrollTop = !path || path.length === 0 ? e.target.scrollTop : path[0].scrollTop;\n                this._onContentScrolled(scrollTop);\n            });\n        });\n    }\n    _handleOutsideClick() {\n        if (!this._document) {\n            return;\n        }\n        this._zone.runOutsideAngular(() => {\n            merge(fromEvent(this._document, 'touchstart', { capture: true }), fromEvent(this._document, 'mousedown', { capture: true })).pipe(takeUntil(this._destroy$))\n                .subscribe($event => this._checkToClose($event));\n        });\n    }\n    _checkToClose($event) {\n        if (this._select.contains($event.target) || this._dropdown.contains($event.target)) {\n            return;\n        }\n        const path = $event.path || ($event.composedPath && $event.composedPath());\n        if ($event.target && $event.target.shadowRoot && path && path[0] && this._select.contains(path[0])) {\n            return;\n        }\n        this._zone.run(() => this.outsideClick.emit());\n    }\n    _onItemsChange(items, firstChange) {\n        this.items = items || [];\n        this._scrollToEndFired = false;\n        this.itemsLength = items.length;\n        if (this.virtualScroll) {\n            this._updateItemsRange(firstChange);\n        }\n        else {\n            this._setVirtualHeight();\n            this._updateItems(firstChange);\n        }\n    }\n    _updateItems(firstChange) {\n        this.update.emit(this.items);\n        if (firstChange === false) {\n            return;\n        }\n        this._zone.runOutsideAngular(() => {\n            Promise.resolve().then(() => {\n                const panelHeight = this._scrollablePanel.clientHeight;\n                this._panelService.setDimensions(0, panelHeight);\n                this._handleDropdownPosition();\n                this.scrollTo(this.markedItem, firstChange);\n            });\n        });\n    }\n    _updateItemsRange(firstChange) {\n        this._zone.runOutsideAngular(() => {\n            this._measureDimensions().then(() => {\n                if (firstChange) {\n                    this._renderItemsRange(this._startOffset);\n                    this._handleDropdownPosition();\n                }\n                else {\n                    this._renderItemsRange();\n                }\n            });\n        });\n    }\n    _onContentScrolled(scrollTop) {\n        if (this.virtualScroll) {\n            this._renderItemsRange(scrollTop);\n        }\n        this._lastScrollPosition = scrollTop;\n        this._fireScrollToEnd(scrollTop);\n    }\n    _updateVirtualHeight(height) {\n        if (this._updateScrollHeight) {\n            this._virtualPadding.style.height = `${height}px`;\n            this._updateScrollHeight = false;\n        }\n    }\n    _setVirtualHeight() {\n        if (!this._virtualPadding) {\n            return;\n        }\n        this._virtualPadding.style.height = `0px`;\n    }\n    _onItemsLengthChanged() {\n        this._updateScrollHeight = true;\n    }\n    _renderItemsRange(scrollTop = null) {\n        if (scrollTop && this._lastScrollPosition === scrollTop) {\n            return;\n        }\n        scrollTop = scrollTop || this._scrollablePanel.scrollTop;\n        const range = this._panelService.calculateItems(scrollTop, this.itemsLength, this.bufferAmount);\n        this._updateVirtualHeight(range.scrollHeight);\n        this._contentPanel.style.transform = `translateY(${range.topPadding}px)`;\n        this._zone.run(() => {\n            this.update.emit(this.items.slice(range.start, range.end));\n            this.scroll.emit({ start: range.start, end: range.end });\n        });\n        if (isDefined(scrollTop) && this._lastScrollPosition === 0) {\n            this._scrollablePanel.scrollTop = scrollTop;\n            this._lastScrollPosition = scrollTop;\n        }\n    }\n    _measureDimensions() {\n        if (this._panelService.dimensions.itemHeight > 0 || this.itemsLength === 0) {\n            return Promise.resolve(this._panelService.dimensions);\n        }\n        const [first] = this.items;\n        this.update.emit([first]);\n        return Promise.resolve().then(() => {\n            const option = this._dropdown.querySelector(`#${first.htmlId}`);\n            const optionHeight = option.clientHeight;\n            this._virtualPadding.style.height = `${optionHeight * this.itemsLength}px`;\n            const panelHeight = this._scrollablePanel.clientHeight;\n            this._panelService.setDimensions(optionHeight, panelHeight);\n            return this._panelService.dimensions;\n        });\n    }\n    _fireScrollToEnd(scrollTop) {\n        if (this._scrollToEndFired || scrollTop === 0) {\n            return;\n        }\n        const padding = this.virtualScroll ?\n            this._virtualPadding :\n            this._contentPanel;\n        if (scrollTop + this._dropdown.clientHeight >= padding.clientHeight) {\n            this._zone.run(() => this.scrollToEnd.emit());\n            this._scrollToEndFired = true;\n        }\n    }\n    _calculateCurrentPosition(dropdownEl) {\n        if (this.position !== 'auto') {\n            return this.position;\n        }\n        const selectRect = this._select.getBoundingClientRect();\n        const scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n        const offsetTop = selectRect.top + window.pageYOffset;\n        const height = selectRect.height;\n        const dropdownHeight = dropdownEl.getBoundingClientRect().height;\n        if (offsetTop + height + dropdownHeight > scrollTop + document.documentElement.clientHeight) {\n            return 'top';\n        }\n        else {\n            return 'bottom';\n        }\n    }\n    _appendDropdown() {\n        if (!this.appendTo) {\n            return;\n        }\n        this._parent = document.querySelector(this.appendTo);\n        if (!this._parent) {\n            throw new Error(`appendTo selector ${this.appendTo} did not found any parent element`);\n        }\n        this._updateXPosition();\n        this._parent.appendChild(this._dropdown);\n    }\n    _updateXPosition() {\n        const select = this._select.getBoundingClientRect();\n        const parent = this._parent.getBoundingClientRect();\n        const offsetLeft = select.left - parent.left;\n        this._dropdown.style.left = offsetLeft + 'px';\n        this._dropdown.style.width = select.width + 'px';\n        this._dropdown.style.minWidth = select.width + 'px';\n    }\n    _updateYPosition() {\n        const select = this._select.getBoundingClientRect();\n        const parent = this._parent.getBoundingClientRect();\n        const delta = select.height;\n        if (this._currentPosition === 'top') {\n            const offsetBottom = parent.bottom - select.bottom;\n            this._dropdown.style.bottom = offsetBottom + delta + 'px';\n            this._dropdown.style.top = 'auto';\n        }\n        else if (this._currentPosition === 'bottom') {\n            const offsetTop = select.top - parent.top;\n            this._dropdown.style.top = offsetTop + delta + 'px';\n            this._dropdown.style.bottom = 'auto';\n        }\n    }\n}\nNgDropdownPanelComponent.ɵfac = function NgDropdownPanelComponent_Factory(t) { return new (t || NgDropdownPanelComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(NgDropdownPanelService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nNgDropdownPanelComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgDropdownPanelComponent, selectors: [[\"ng-dropdown-panel\"]], viewQuery: function NgDropdownPanelComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true, ElementRef);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true, ElementRef);\n        ɵngcc0.ɵɵstaticViewQuery(_c2, true, ElementRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentElementRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.scrollElementRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.paddingElementRef = _t.first);\n    } }, hostBindings: function NgDropdownPanelComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function NgDropdownPanelComponent_mousedown_HostBindingHandler($event) { return ctx.handleMousedown($event); });\n    } }, inputs: { items: \"items\", position: \"position\", virtualScroll: \"virtualScroll\", filterValue: \"filterValue\", markedItem: \"markedItem\", appendTo: \"appendTo\", bufferAmount: \"bufferAmount\", headerTemplate: \"headerTemplate\", footerTemplate: \"footerTemplate\" }, outputs: { update: \"update\", scroll: \"scroll\", scrollToEnd: \"scrollToEnd\", outsideClick: \"outsideClick\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c4, decls: 9, vars: 6, consts: [[\"class\", \"ng-dropdown-header\", 4, \"ngIf\"], [1, \"ng-dropdown-panel-items\", \"scroll-host\"], [\"scroll\", \"\"], [\"padding\", \"\"], [\"content\", \"\"], [\"class\", \"ng-dropdown-footer\", 4, \"ngIf\"], [1, \"ng-dropdown-header\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"ng-dropdown-footer\"]], template: function NgDropdownPanelComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, NgDropdownPanelComponent_div_0_Template, 2, 4, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵelement(3, \"div\", null, 3);\n        ɵngcc0.ɵɵelementStart(5, \"div\", null, 4);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, NgDropdownPanelComponent_div_8_Template, 2, 4, \"div\", 5);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.headerTemplate);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵclassProp(\"total-padding\", ctx.virtualScroll);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"scrollable-content\", ctx.virtualScroll && ctx.items.length);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.footerTemplate);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet], encapsulation: 2, changeDetection: 0 });\nNgDropdownPanelComponent.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: NgZone },\n    { type: NgDropdownPanelService },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nNgDropdownPanelComponent.propDecorators = {\n    items: [{ type: Input }],\n    markedItem: [{ type: Input }],\n    position: [{ type: Input }],\n    appendTo: [{ type: Input }],\n    bufferAmount: [{ type: Input }],\n    virtualScroll: [{ type: Input }],\n    headerTemplate: [{ type: Input }],\n    footerTemplate: [{ type: Input }],\n    filterValue: [{ type: Input }],\n    update: [{ type: Output }],\n    scroll: [{ type: Output }],\n    scrollToEnd: [{ type: Output }],\n    outsideClick: [{ type: Output }],\n    contentElementRef: [{ type: ViewChild, args: ['content', { read: ElementRef, static: true },] }],\n    scrollElementRef: [{ type: ViewChild, args: ['scroll', { read: ElementRef, static: true },] }],\n    paddingElementRef: [{ type: ViewChild, args: ['padding', { read: ElementRef, static: true },] }],\n    handleMousedown: [{ type: HostListener, args: ['mousedown', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgDropdownPanelComponent, [{\n        type: Component,\n        args: [{\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                selector: 'ng-dropdown-panel',\n                template: `\n        <div *ngIf=\"headerTemplate\" class=\"ng-dropdown-header\">\n            <ng-container [ngTemplateOutlet]=\"headerTemplate\" [ngTemplateOutletContext]=\"{ searchTerm: filterValue }\"></ng-container>\n        </div>\n        <div #scroll class=\"ng-dropdown-panel-items scroll-host\">\n            <div #padding [class.total-padding]=\"virtualScroll\"></div>\n            <div #content [class.scrollable-content]=\"virtualScroll && items.length\">\n                <ng-content></ng-content>\n            </div>\n        </div>\n        <div *ngIf=\"footerTemplate\" class=\"ng-dropdown-footer\">\n            <ng-container [ngTemplateOutlet]=\"footerTemplate\" [ngTemplateOutletContext]=\"{ searchTerm: filterValue }\"></ng-container>\n        </div>\n    `\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.NgZone }, { type: NgDropdownPanelService }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { items: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], virtualScroll: [{\n            type: Input\n        }], filterValue: [{\n            type: Input\n        }], update: [{\n            type: Output\n        }], scroll: [{\n            type: Output\n        }], scrollToEnd: [{\n            type: Output\n        }], outsideClick: [{\n            type: Output\n        }], handleMousedown: [{\n            type: HostListener,\n            args: ['mousedown', ['$event']]\n        }], markedItem: [{\n            type: Input\n        }], appendTo: [{\n            type: Input\n        }], bufferAmount: [{\n            type: Input\n        }], headerTemplate: [{\n            type: Input\n        }], footerTemplate: [{\n            type: Input\n        }], contentElementRef: [{\n            type: ViewChild,\n            args: ['content', { read: ElementRef, static: true }]\n        }], scrollElementRef: [{\n            type: ViewChild,\n            args: ['scroll', { read: ElementRef, static: true }]\n        }], paddingElementRef: [{\n            type: ViewChild,\n            args: ['padding', { read: ElementRef, static: true }]\n        }] }); })();\n\nclass NgOptionComponent {\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n        this.stateChange$ = new Subject();\n        this._disabled = false;\n    }\n    get disabled() { return this._disabled; }\n    set disabled(value) { this._disabled = this._isDisabled(value); }\n    get label() {\n        return (this.elementRef.nativeElement.textContent || '').trim();\n    }\n    ngOnChanges(changes) {\n        if (changes.disabled) {\n            this.stateChange$.next({\n                value: this.value,\n                disabled: this._disabled\n            });\n        }\n    }\n    ngAfterViewChecked() {\n        if (this.label !== this._previousLabel) {\n            this._previousLabel = this.label;\n            this.stateChange$.next({\n                value: this.value,\n                disabled: this._disabled,\n                label: this.elementRef.nativeElement.innerHTML\n            });\n        }\n    }\n    ngOnDestroy() {\n        this.stateChange$.complete();\n    }\n    _isDisabled(value) {\n        return value != null && `${value}` !== 'false';\n    }\n}\nNgOptionComponent.ɵfac = function NgOptionComponent_Factory(t) { return new (t || NgOptionComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNgOptionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgOptionComponent, selectors: [[\"ng-option\"]], inputs: { disabled: \"disabled\", value: \"value\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c4, decls: 1, vars: 0, template: function NgOptionComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\nNgOptionComponent.ctorParameters = () => [\n    { type: ElementRef }\n];\nNgOptionComponent.propDecorators = {\n    value: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgOptionComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ng-option',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: `<ng-content></ng-content>`\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { disabled: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\n\nclass NgSelectConfig {\n    constructor() {\n        this.notFoundText = 'No items found';\n        this.typeToSearchText = 'Type to search';\n        this.addTagText = 'Add item';\n        this.loadingText = 'Loading...';\n        this.clearAllText = 'Clear all';\n        this.disableVirtualScroll = true;\n        this.openOnEnter = true;\n        this.appearance = 'underline';\n    }\n}\nNgSelectConfig.ɵfac = function NgSelectConfig_Factory(t) { return new (t || NgSelectConfig)(); };\nNgSelectConfig.ɵprov = ɵɵdefineInjectable({ factory: function NgSelectConfig_Factory() { return new NgSelectConfig(); }, token: NgSelectConfig, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgSelectConfig, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\nconst SELECTION_MODEL_FACTORY = new InjectionToken('ng-select-selection-model');\nclass NgSelectComponent {\n    constructor(classes, autoFocus, config, newSelectionModel, _elementRef, _cd, _console) {\n        this.classes = classes;\n        this.autoFocus = autoFocus;\n        this._cd = _cd;\n        this._console = _console;\n        this.markFirst = true;\n        this.dropdownPosition = 'auto';\n        this.loading = false;\n        this.closeOnSelect = true;\n        this.hideSelected = false;\n        this.selectOnTab = false;\n        this.bufferAmount = 4;\n        this.selectableGroup = false;\n        this.selectableGroupAsModel = true;\n        this.searchFn = null;\n        this.trackByFn = null;\n        this.clearOnBackspace = true;\n        this.labelForId = null;\n        this.inputAttrs = {};\n        this.readonly = false;\n        this.searchWhileComposing = true;\n        this.minTermLength = 0;\n        this.editableSearchTerm = false;\n        this.keyDownFn = (_) => true;\n        this.multiple = false;\n        this.addTag = false;\n        this.searchable = true;\n        this.clearable = true;\n        this.isOpen = false;\n        // output events\n        this.blurEvent = new EventEmitter();\n        this.focusEvent = new EventEmitter();\n        this.changeEvent = new EventEmitter();\n        this.openEvent = new EventEmitter();\n        this.closeEvent = new EventEmitter();\n        this.searchEvent = new EventEmitter();\n        this.clearEvent = new EventEmitter();\n        this.addEvent = new EventEmitter();\n        this.removeEvent = new EventEmitter();\n        this.scroll = new EventEmitter();\n        this.scrollToEnd = new EventEmitter();\n        this.viewPortItems = [];\n        this.searchTerm = null;\n        this.dropdownId = newId();\n        this.escapeHTML = true;\n        this.useDefaultClass = true;\n        this._items = [];\n        this._defaultLabel = 'label';\n        this._pressedKeys = [];\n        this._isComposing = false;\n        this._destroy$ = new Subject();\n        this._keyPress$ = new Subject();\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this.clearItem = (item) => {\n            const option = this.selectedItems.find(x => x.value === item);\n            this.unselect(option);\n        };\n        this.trackByOption = (_, item) => {\n            if (this.trackByFn) {\n                return this.trackByFn(item.value);\n            }\n            return item;\n        };\n        this._mergeGlobalConfig(config);\n        this.itemsList = new ItemsList(this, newSelectionModel());\n        this.element = _elementRef.nativeElement;\n    }\n    get items() { return this._items; }\n    ;\n    set items(value) {\n        this._itemsAreUsed = true;\n        this._items = value;\n    }\n    ;\n    get compareWith() { return this._compareWith; }\n    set compareWith(fn) {\n        if (!isFunction(fn)) {\n            throw Error('`compareWith` must be a function.');\n        }\n        this._compareWith = fn;\n    }\n    get clearSearchOnAdd() { return isDefined(this._clearSearchOnAdd) ? this._clearSearchOnAdd : this.closeOnSelect; }\n    ;\n    set clearSearchOnAdd(value) {\n        this._clearSearchOnAdd = value;\n    }\n    ;\n    get disabled() { return this.readonly || this._disabled; }\n    ;\n    get filtered() { return (!!this.searchTerm && this.searchable || this._isComposing); }\n    ;\n    get _editableSearchTerm() {\n        return this.editableSearchTerm && !this.multiple;\n    }\n    get selectedItems() {\n        return this.itemsList.selectedItems;\n    }\n    get selectedValues() {\n        return this.selectedItems.map(x => x.value);\n    }\n    get hasValue() {\n        return this.selectedItems.length > 0;\n    }\n    get currentPanelPosition() {\n        if (this.dropdownPanel) {\n            return this.dropdownPanel.currentPosition;\n        }\n        return undefined;\n    }\n    ngOnInit() {\n        this._handleKeyPresses();\n        this._setInputAttributes();\n    }\n    ngOnChanges(changes) {\n        if (changes.multiple) {\n            this.itemsList.clearSelected();\n        }\n        if (changes.items) {\n            this._setItems(changes.items.currentValue || []);\n        }\n        if (changes.isOpen) {\n            this._manualOpen = isDefined(changes.isOpen.currentValue);\n        }\n    }\n    ngAfterViewInit() {\n        if (!this._itemsAreUsed) {\n            this.escapeHTML = false;\n            this._setItemsFromNgOptions();\n        }\n        if (isDefined(this.autoFocus)) {\n            this.focus();\n        }\n    }\n    ngOnDestroy() {\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n    handleKeyDown($event) {\n        const keyCode = KeyCode[$event.which];\n        if (keyCode) {\n            if (this.keyDownFn($event) === false) {\n                return;\n            }\n            this.handleKeyCode($event);\n        }\n        else if ($event.key && $event.key.length === 1) {\n            this._keyPress$.next($event.key.toLocaleLowerCase());\n        }\n    }\n    handleKeyCode($event) {\n        switch ($event.which) {\n            case KeyCode.ArrowDown:\n                this._handleArrowDown($event);\n                break;\n            case KeyCode.ArrowUp:\n                this._handleArrowUp($event);\n                break;\n            case KeyCode.Space:\n                this._handleSpace($event);\n                break;\n            case KeyCode.Enter:\n                this._handleEnter($event);\n                break;\n            case KeyCode.Tab:\n                this._handleTab($event);\n                break;\n            case KeyCode.Esc:\n                this.close();\n                $event.preventDefault();\n                break;\n            case KeyCode.Backspace:\n                this._handleBackspace();\n                break;\n        }\n    }\n    handleMousedown($event) {\n        const target = $event.target;\n        if (target.tagName !== 'INPUT') {\n            $event.preventDefault();\n        }\n        if (target.classList.contains('ng-clear-wrapper')) {\n            this.handleClearClick();\n            return;\n        }\n        if (target.classList.contains('ng-arrow-wrapper')) {\n            this.handleArrowClick();\n            return;\n        }\n        if (target.classList.contains('ng-value-icon')) {\n            return;\n        }\n        if (!this.focused) {\n            this.focus();\n        }\n        if (this.searchable) {\n            this.open();\n        }\n        else {\n            this.toggle();\n        }\n    }\n    handleArrowClick() {\n        if (this.isOpen) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    }\n    handleClearClick() {\n        if (this.hasValue) {\n            this.itemsList.clearSelected(true);\n            this._updateNgModel();\n        }\n        this._clearSearch();\n        this.focus();\n        this.clearEvent.emit();\n        this._onSelectionChanged();\n    }\n    clearModel() {\n        if (!this.clearable) {\n            return;\n        }\n        this.itemsList.clearSelected();\n        this._updateNgModel();\n    }\n    writeValue(value) {\n        this.itemsList.clearSelected();\n        this._handleWriteValue(value);\n        this._cd.markForCheck();\n    }\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    setDisabledState(state) {\n        this._disabled = state;\n        this._cd.markForCheck();\n    }\n    toggle() {\n        if (!this.isOpen) {\n            this.open();\n        }\n        else {\n            this.close();\n        }\n    }\n    open() {\n        if (this.disabled || this.isOpen || this.itemsList.maxItemsSelected || this._manualOpen) {\n            return;\n        }\n        if (!this._isTypeahead && !this.addTag && this.itemsList.noItemsToSelect) {\n            return;\n        }\n        this.isOpen = true;\n        this.itemsList.markSelectedOrDefault(this.markFirst);\n        this.openEvent.emit();\n        if (!this.searchTerm) {\n            this.focus();\n        }\n        this.detectChanges();\n    }\n    close() {\n        if (!this.isOpen || this._manualOpen) {\n            return;\n        }\n        this.isOpen = false;\n        this._isComposing = false;\n        if (!this._editableSearchTerm) {\n            this._clearSearch();\n        }\n        else {\n            this.itemsList.resetFilteredItems();\n        }\n        this.itemsList.unmarkItem();\n        this._onTouched();\n        this.closeEvent.emit();\n        this._cd.markForCheck();\n    }\n    toggleItem(item) {\n        if (!item || item.disabled || this.disabled) {\n            return;\n        }\n        if (this.multiple && item.selected) {\n            this.unselect(item);\n        }\n        else {\n            this.select(item);\n        }\n        if (this._editableSearchTerm) {\n            this._setSearchTermFromItems();\n        }\n        this._onSelectionChanged();\n    }\n    select(item) {\n        if (!item.selected) {\n            this.itemsList.select(item);\n            if (this.clearSearchOnAdd && !this._editableSearchTerm) {\n                this._clearSearch();\n            }\n            this._updateNgModel();\n            if (this.multiple) {\n                this.addEvent.emit(item.value);\n            }\n        }\n        if (this.closeOnSelect || this.itemsList.noItemsToSelect) {\n            this.close();\n        }\n    }\n    focus() {\n        this.searchInput.nativeElement.focus();\n    }\n    blur() {\n        this.searchInput.nativeElement.blur();\n    }\n    unselect(item) {\n        if (!item) {\n            return;\n        }\n        this.itemsList.unselect(item);\n        this.focus();\n        this._updateNgModel();\n        this.removeEvent.emit(item);\n    }\n    selectTag() {\n        let tag;\n        if (isFunction(this.addTag)) {\n            tag = this.addTag(this.searchTerm);\n        }\n        else {\n            tag = this._primitive ? this.searchTerm : { [this.bindLabel]: this.searchTerm };\n        }\n        const handleTag = (item) => this._isTypeahead || !this.isOpen ? this.itemsList.mapItem(item, null) : this.itemsList.addItem(item);\n        if (isPromise(tag)) {\n            tag.then(item => this.select(handleTag(item))).catch(() => { });\n        }\n        else if (tag) {\n            this.select(handleTag(tag));\n        }\n    }\n    showClear() {\n        return this.clearable && (this.hasValue || this.searchTerm) && !this.disabled;\n    }\n    get showAddTag() {\n        if (!this._validTerm) {\n            return false;\n        }\n        const term = this.searchTerm.toLowerCase().trim();\n        return this.addTag &&\n            (!this.itemsList.filteredItems.some(x => x.label.toLowerCase() === term) &&\n                (!this.hideSelected && this.isOpen || !this.selectedItems.some(x => x.label.toLowerCase() === term))) &&\n            !this.loading;\n    }\n    showNoItemsFound() {\n        const empty = this.itemsList.filteredItems.length === 0;\n        return ((empty && !this._isTypeahead && !this.loading) ||\n            (empty && this._isTypeahead && this._validTerm && !this.loading)) &&\n            !this.showAddTag;\n    }\n    showTypeToSearch() {\n        const empty = this.itemsList.filteredItems.length === 0;\n        return empty && this._isTypeahead && !this._validTerm && !this.loading;\n    }\n    onCompositionStart() {\n        this._isComposing = true;\n    }\n    onCompositionEnd(term) {\n        this._isComposing = false;\n        if (this.searchWhileComposing) {\n            return;\n        }\n        this.filter(term);\n    }\n    filter(term) {\n        if (this._isComposing && !this.searchWhileComposing) {\n            return;\n        }\n        this.searchTerm = term;\n        if (this._isTypeahead && (this._validTerm || this.minTermLength === 0)) {\n            this.typeahead.next(term);\n        }\n        if (!this._isTypeahead) {\n            this.itemsList.filter(this.searchTerm);\n            if (this.isOpen) {\n                this.itemsList.markSelectedOrDefault(this.markFirst);\n            }\n        }\n        this.searchEvent.emit({ term, items: this.itemsList.filteredItems.map(x => x.value) });\n        this.open();\n    }\n    onInputFocus($event) {\n        if (this.focused) {\n            return;\n        }\n        if (this._editableSearchTerm) {\n            this._setSearchTermFromItems();\n        }\n        this.element.classList.add('ng-select-focused');\n        this.focusEvent.emit($event);\n        this.focused = true;\n    }\n    onInputBlur($event) {\n        this.element.classList.remove('ng-select-focused');\n        this.blurEvent.emit($event);\n        if (!this.isOpen && !this.disabled) {\n            this._onTouched();\n        }\n        if (this._editableSearchTerm) {\n            this._setSearchTermFromItems();\n        }\n        this.focused = false;\n    }\n    onItemHover(item) {\n        if (item.disabled) {\n            return;\n        }\n        this.itemsList.markItem(item);\n    }\n    detectChanges() {\n        if (!this._cd.destroyed) {\n            this._cd.detectChanges();\n        }\n    }\n    _setSearchTermFromItems() {\n        const selected = this.selectedItems && this.selectedItems[0];\n        this.searchTerm = (selected && selected.label) || null;\n    }\n    _setItems(items) {\n        const firstItem = items[0];\n        this.bindLabel = this.bindLabel || this._defaultLabel;\n        this._primitive = isDefined(firstItem) ? !isObject(firstItem) : this._primitive || this.bindLabel === this._defaultLabel;\n        this.itemsList.setItems(items);\n        if (items.length > 0 && this.hasValue) {\n            this.itemsList.mapSelectedItems();\n        }\n        if (this.isOpen && isDefined(this.searchTerm) && !this._isTypeahead) {\n            this.itemsList.filter(this.searchTerm);\n        }\n        if (this._isTypeahead || this.isOpen) {\n            this.itemsList.markSelectedOrDefault(this.markFirst);\n        }\n    }\n    _setItemsFromNgOptions() {\n        const mapNgOptions = (options) => {\n            this.items = options.map(option => ({\n                $ngOptionValue: option.value,\n                $ngOptionLabel: option.elementRef.nativeElement.innerHTML,\n                disabled: option.disabled\n            }));\n            this.itemsList.setItems(this.items);\n            if (this.hasValue) {\n                this.itemsList.mapSelectedItems();\n            }\n            this.detectChanges();\n        };\n        const handleOptionChange = () => {\n            const changedOrDestroyed = merge(this.ngOptions.changes, this._destroy$);\n            merge(...this.ngOptions.map(option => option.stateChange$))\n                .pipe(takeUntil(changedOrDestroyed))\n                .subscribe(option => {\n                const item = this.itemsList.findItem(option.value);\n                item.disabled = option.disabled;\n                item.label = option.label || item.label;\n                this._cd.detectChanges();\n            });\n        };\n        this.ngOptions.changes\n            .pipe(startWith(this.ngOptions), takeUntil(this._destroy$))\n            .subscribe(options => {\n            this.bindLabel = this._defaultLabel;\n            mapNgOptions(options);\n            handleOptionChange();\n        });\n    }\n    _isValidWriteValue(value) {\n        if (!isDefined(value) || (this.multiple && value === '') || Array.isArray(value) && value.length === 0) {\n            return false;\n        }\n        const validateBinding = (item) => {\n            if (!isDefined(this.compareWith) && isObject(item) && this.bindValue) {\n                this._console.warn(`Setting object(${JSON.stringify(item)}) as your model with bindValue is not allowed unless [compareWith] is used.`);\n                return false;\n            }\n            return true;\n        };\n        if (this.multiple) {\n            if (!Array.isArray(value)) {\n                this._console.warn('Multiple select ngModel should be array.');\n                return false;\n            }\n            return value.every(item => validateBinding(item));\n        }\n        else {\n            return validateBinding(value);\n        }\n    }\n    _handleWriteValue(ngModel) {\n        if (!this._isValidWriteValue(ngModel)) {\n            return;\n        }\n        const select = (val) => {\n            let item = this.itemsList.findItem(val);\n            if (item) {\n                this.itemsList.select(item);\n            }\n            else {\n                const isValObject = isObject(val);\n                const isPrimitive = !isValObject && !this.bindValue;\n                if ((isValObject || isPrimitive)) {\n                    this.itemsList.select(this.itemsList.mapItem(val, null));\n                }\n                else if (this.bindValue) {\n                    item = {\n                        [this.bindLabel]: null,\n                        [this.bindValue]: val\n                    };\n                    this.itemsList.select(this.itemsList.mapItem(item, null));\n                }\n            }\n        };\n        if (this.multiple) {\n            ngModel.forEach(item => select(item));\n        }\n        else {\n            select(ngModel);\n        }\n    }\n    _handleKeyPresses() {\n        if (this.searchable) {\n            return;\n        }\n        this._keyPress$\n            .pipe(takeUntil(this._destroy$), tap(letter => this._pressedKeys.push(letter)), debounceTime(200), filter(() => this._pressedKeys.length > 0), map(() => this._pressedKeys.join('')))\n            .subscribe(term => {\n            const item = this.itemsList.findByLabel(term);\n            if (item) {\n                if (this.isOpen) {\n                    this.itemsList.markItem(item);\n                    this._scrollToMarked();\n                    this._cd.markForCheck();\n                }\n                else {\n                    this.select(item);\n                }\n            }\n            this._pressedKeys = [];\n        });\n    }\n    _setInputAttributes() {\n        const input = this.searchInput.nativeElement;\n        const attributes = Object.assign({ type: 'text', autocorrect: 'off', autocapitalize: 'off', autocomplete: this.labelForId ? 'off' : this.dropdownId }, this.inputAttrs);\n        for (const key of Object.keys(attributes)) {\n            input.setAttribute(key, attributes[key]);\n        }\n    }\n    _updateNgModel() {\n        const model = [];\n        for (const item of this.selectedItems) {\n            if (this.bindValue) {\n                let value = null;\n                if (item.children) {\n                    const groupKey = this.groupValue ? this.bindValue : this.groupBy;\n                    value = item.value[groupKey || this.groupBy];\n                }\n                else {\n                    value = this.itemsList.resolveNested(item.value, this.bindValue);\n                }\n                model.push(value);\n            }\n            else {\n                model.push(item.value);\n            }\n        }\n        const selected = this.selectedItems.map(x => x.value);\n        if (this.multiple) {\n            this._onChange(model);\n            this.changeEvent.emit(selected);\n        }\n        else {\n            this._onChange(isDefined(model[0]) ? model[0] : null);\n            this.changeEvent.emit(selected[0]);\n        }\n        this._cd.markForCheck();\n    }\n    _clearSearch() {\n        if (!this.searchTerm) {\n            return;\n        }\n        this._changeSearch(null);\n        this.itemsList.resetFilteredItems();\n    }\n    _changeSearch(searchTerm) {\n        this.searchTerm = searchTerm;\n        if (this._isTypeahead) {\n            this.typeahead.next(searchTerm);\n        }\n    }\n    _scrollToMarked() {\n        if (!this.isOpen || !this.dropdownPanel) {\n            return;\n        }\n        this.dropdownPanel.scrollTo(this.itemsList.markedItem);\n    }\n    _scrollToTag() {\n        if (!this.isOpen || !this.dropdownPanel) {\n            return;\n        }\n        this.dropdownPanel.scrollToTag();\n    }\n    _onSelectionChanged() {\n        if (this.isOpen && this.multiple && this.appendTo) {\n            // Make sure items are rendered.\n            this._cd.detectChanges();\n            this.dropdownPanel.adjustPosition();\n        }\n    }\n    _handleTab($event) {\n        if (this.isOpen === false && !this.addTag) {\n            return;\n        }\n        if (this.selectOnTab) {\n            if (this.itemsList.markedItem) {\n                this.toggleItem(this.itemsList.markedItem);\n                $event.preventDefault();\n            }\n            else if (this.showAddTag) {\n                this.selectTag();\n                $event.preventDefault();\n            }\n            else {\n                this.close();\n            }\n        }\n        else {\n            this.close();\n        }\n    }\n    _handleEnter($event) {\n        if (this.isOpen || this._manualOpen) {\n            if (this.itemsList.markedItem) {\n                this.toggleItem(this.itemsList.markedItem);\n            }\n            else if (this.showAddTag) {\n                this.selectTag();\n            }\n        }\n        else if (this.openOnEnter) {\n            this.open();\n        }\n        else {\n            return;\n        }\n        $event.preventDefault();\n    }\n    _handleSpace($event) {\n        if (this.isOpen || this._manualOpen) {\n            return;\n        }\n        this.open();\n        $event.preventDefault();\n    }\n    _handleArrowDown($event) {\n        if (this._nextItemIsTag(+1)) {\n            this.itemsList.unmarkItem();\n            this._scrollToTag();\n        }\n        else {\n            this.itemsList.markNextItem();\n            this._scrollToMarked();\n        }\n        this.open();\n        $event.preventDefault();\n    }\n    _handleArrowUp($event) {\n        if (!this.isOpen) {\n            return;\n        }\n        if (this._nextItemIsTag(-1)) {\n            this.itemsList.unmarkItem();\n            this._scrollToTag();\n        }\n        else {\n            this.itemsList.markPreviousItem();\n            this._scrollToMarked();\n        }\n        $event.preventDefault();\n    }\n    _nextItemIsTag(nextStep) {\n        const nextIndex = this.itemsList.markedIndex + nextStep;\n        return this.addTag && this.searchTerm\n            && this.itemsList.markedItem\n            && (nextIndex < 0 || nextIndex === this.itemsList.filteredItems.length);\n    }\n    _handleBackspace() {\n        if (this.searchTerm || !this.clearable || !this.clearOnBackspace || !this.hasValue) {\n            return;\n        }\n        if (this.multiple) {\n            this.unselect(this.itemsList.lastSelectedItem);\n        }\n        else {\n            this.clearModel();\n        }\n    }\n    get _isTypeahead() {\n        return this.typeahead && this.typeahead.observers.length > 0;\n    }\n    get _validTerm() {\n        const term = this.searchTerm && this.searchTerm.trim();\n        return term && term.length >= this.minTermLength;\n    }\n    _mergeGlobalConfig(config) {\n        this.placeholder = this.placeholder || config.placeholder;\n        this.notFoundText = this.notFoundText || config.notFoundText;\n        this.typeToSearchText = this.typeToSearchText || config.typeToSearchText;\n        this.addTagText = this.addTagText || config.addTagText;\n        this.loadingText = this.loadingText || config.loadingText;\n        this.clearAllText = this.clearAllText || config.clearAllText;\n        this.virtualScroll = isDefined(this.virtualScroll)\n            ? this.virtualScroll\n            : isDefined(config.disableVirtualScroll) ? !config.disableVirtualScroll : false;\n        this.openOnEnter = isDefined(this.openOnEnter) ? this.openOnEnter : config.openOnEnter;\n        this.appendTo = this.appendTo || config.appendTo;\n        this.bindValue = this.bindValue || config.bindValue;\n        this.bindLabel = this.bindLabel || config.bindLabel;\n        this.appearance = this.appearance || config.appearance;\n    }\n}\nNgSelectComponent.ɵfac = function NgSelectComponent_Factory(t) { return new (t || NgSelectComponent)(ɵngcc0.ɵɵinjectAttribute('class'), ɵngcc0.ɵɵinjectAttribute('autofocus'), ɵngcc0.ɵɵdirectiveInject(NgSelectConfig), ɵngcc0.ɵɵdirectiveInject(SELECTION_MODEL_FACTORY), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ConsoleService)); };\nNgSelectComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgSelectComponent, selectors: [[\"ng-select\"]], contentQueries: function NgSelectComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgOptionTemplateDirective, true, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgOptgroupTemplateDirective, true, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgLabelTemplateDirective, true, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgMultiLabelTemplateDirective, true, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgHeaderTemplateDirective, true, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgFooterTemplateDirective, true, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgNotFoundTemplateDirective, true, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgTypeToSearchTemplateDirective, true, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgLoadingTextTemplateDirective, true, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgTagTemplateDirective, true, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgLoadingSpinnerTemplateDirective, true, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgOptionComponent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optgroupTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.labelTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.multiLabelTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.notFoundTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.typeToSearchTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.loadingTextTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tagTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.loadingSpinnerTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ngOptions = _t);\n    } }, viewQuery: function NgSelectComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(NgDropdownPanelComponent, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropdownPanel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.searchInput = _t.first);\n    } }, hostVars: 20, hostBindings: function NgSelectComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function NgSelectComponent_keydown_HostBindingHandler($event) { return ctx.handleKeyDown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ng-select\", ctx.useDefaultClass)(\"ng-select-single\", !ctx.multiple)(\"ng-select-multiple\", ctx.multiple)(\"ng-select-taggable\", ctx.addTag)(\"ng-select-searchable\", ctx.searchable)(\"ng-select-clearable\", ctx.clearable)(\"ng-select-opened\", ctx.isOpen)(\"ng-select-disabled\", ctx.disabled)(\"ng-select-filtered\", ctx.filtered)(\"ng-select-typeahead\", ctx.typeahead);\n    } }, inputs: { markFirst: \"markFirst\", dropdownPosition: \"dropdownPosition\", loading: \"loading\", closeOnSelect: \"closeOnSelect\", hideSelected: \"hideSelected\", selectOnTab: \"selectOnTab\", bufferAmount: \"bufferAmount\", selectableGroup: \"selectableGroup\", selectableGroupAsModel: \"selectableGroupAsModel\", searchFn: \"searchFn\", trackByFn: \"trackByFn\", clearOnBackspace: \"clearOnBackspace\", labelForId: \"labelForId\", inputAttrs: \"inputAttrs\", readonly: \"readonly\", searchWhileComposing: \"searchWhileComposing\", minTermLength: \"minTermLength\", editableSearchTerm: \"editableSearchTerm\", keyDownFn: \"keyDownFn\", multiple: \"multiple\", addTag: \"addTag\", searchable: \"searchable\", clearable: \"clearable\", isOpen: \"isOpen\", items: \"items\", compareWith: \"compareWith\", clearSearchOnAdd: \"clearSearchOnAdd\", bindLabel: \"bindLabel\", placeholder: \"placeholder\", notFoundText: \"notFoundText\", typeToSearchText: \"typeToSearchText\", addTagText: \"addTagText\", loadingText: \"loadingText\", clearAllText: \"clearAllText\", virtualScroll: \"virtualScroll\", openOnEnter: \"openOnEnter\", appendTo: \"appendTo\", bindValue: \"bindValue\", appearance: \"appearance\", maxSelectedItems: \"maxSelectedItems\", groupBy: \"groupBy\", groupValue: \"groupValue\", tabIndex: \"tabIndex\", typeahead: \"typeahead\" }, outputs: { blurEvent: \"blur\", focusEvent: \"focus\", changeEvent: \"change\", openEvent: \"open\", closeEvent: \"close\", searchEvent: \"search\", clearEvent: \"clear\", addEvent: \"add\", removeEvent: \"remove\", scroll: \"scroll\", scrollToEnd: \"scrollToEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => NgSelectComponent),\n                multi: true\n            }, NgDropdownPanelService]), ɵngcc0.ɵɵNgOnChangesFeature], decls: 14, vars: 19, consts: [[1, \"ng-select-container\", 3, \"mousedown\"], [1, \"ng-value-container\"], [1, \"ng-placeholder\"], [4, \"ngIf\"], [\"role\", \"combobox\", \"aria-haspopup\", \"listbox\", 1, \"ng-input\"], [\"aria-autocomplete\", \"list\", 3, \"readOnly\", \"disabled\", \"value\", \"input\", \"compositionstart\", \"compositionend\", \"focus\", \"blur\", \"change\"], [\"searchInput\", \"\"], [\"class\", \"ng-clear-wrapper\", 3, \"title\", 4, \"ngIf\"], [1, \"ng-arrow-wrapper\"], [1, \"ng-arrow\"], [\"class\", \"ng-dropdown-panel\", \"role\", \"listbox\", \"aria-label\", \"Options list\", 3, \"virtualScroll\", \"bufferAmount\", \"appendTo\", \"position\", \"headerTemplate\", \"footerTemplate\", \"filterValue\", \"items\", \"markedItem\", \"ng-select-multiple\", \"ngClass\", \"id\", \"update\", \"scroll\", \"scrollToEnd\", \"outsideClick\", 4, \"ngIf\"], [\"class\", \"ng-value\", 3, \"ng-value-disabled\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"ng-value\"], [\"defaultLabelTemplate\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"aria-hidden\", \"true\", 1, \"ng-value-icon\", \"left\", 3, \"click\"], [1, \"ng-value-label\", 3, \"ngItemLabel\", \"escape\"], [\"defaultLoadingSpinnerTemplate\", \"\"], [3, \"ngTemplateOutlet\"], [1, \"ng-spinner-loader\"], [1, \"ng-clear-wrapper\", 3, \"title\"], [\"aria-hidden\", \"true\", 1, \"ng-clear\"], [\"role\", \"listbox\", \"aria-label\", \"Options list\", 1, \"ng-dropdown-panel\", 3, \"virtualScroll\", \"bufferAmount\", \"appendTo\", \"position\", \"headerTemplate\", \"footerTemplate\", \"filterValue\", \"items\", \"markedItem\", \"ngClass\", \"id\", \"update\", \"scroll\", \"scrollToEnd\", \"outsideClick\"], [\"class\", \"ng-option\", 3, \"ng-option-disabled\", \"ng-option-selected\", \"ng-optgroup\", \"ng-option\", \"ng-option-child\", \"ng-option-marked\", \"click\", \"mouseover\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"class\", \"ng-option\", \"role\", \"option\", 3, \"ng-option-marked\", \"mouseover\", \"click\", 4, \"ngIf\"], [1, \"ng-option\", 3, \"click\", \"mouseover\"], [\"defaultOptionTemplate\", \"\"], [1, \"ng-option-label\", 3, \"ngItemLabel\", \"escape\"], [\"role\", \"option\", 1, \"ng-option\", 3, \"mouseover\", \"click\"], [\"defaultTagTemplate\", \"\"], [1, \"ng-tag-label\"], [\"defaultNotFoundTemplate\", \"\"], [1, \"ng-option\", \"ng-option-disabled\"], [\"defaultTypeToSearchTemplate\", \"\"], [\"defaultLoadingTextTemplate\", \"\"]], template: function NgSelectComponent_Template(rf, ctx) { if (rf & 1) {\n        const _r52 = ɵngcc0.ɵɵgetCurrentView();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function NgSelectComponent_Template_div_mousedown_0_listener($event) { return ctx.handleMousedown($event); });\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵtext(3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, NgSelectComponent_ng_container_4_Template, 2, 2, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(5, NgSelectComponent_5_Template, 1, 5, undefined, 3);\n        ɵngcc0.ɵɵelementStart(6, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(7, \"input\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"input\", function NgSelectComponent_Template_input_input_7_listener() { ɵngcc0.ɵɵrestoreView(_r52); const _r2 = ɵngcc0.ɵɵreference(8); return ctx.filter(_r2.value); })(\"compositionstart\", function NgSelectComponent_Template_input_compositionstart_7_listener() { return ctx.onCompositionStart(); })(\"compositionend\", function NgSelectComponent_Template_input_compositionend_7_listener() { ɵngcc0.ɵɵrestoreView(_r52); const _r2 = ɵngcc0.ɵɵreference(8); return ctx.onCompositionEnd(_r2.value); })(\"focus\", function NgSelectComponent_Template_input_focus_7_listener($event) { return ctx.onInputFocus($event); })(\"blur\", function NgSelectComponent_Template_input_blur_7_listener($event) { return ctx.onInputBlur($event); })(\"change\", function NgSelectComponent_Template_input_change_7_listener($event) { return $event.stopPropagation(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(9, NgSelectComponent_ng_container_9_Template, 4, 1, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(10, NgSelectComponent_span_10_Template, 3, 1, \"span\", 7);\n        ɵngcc0.ɵɵelementStart(11, \"span\", 8);\n        ɵngcc0.ɵɵelement(12, \"span\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(13, NgSelectComponent_ng_dropdown_panel_13_Template, 7, 19, \"ng-dropdown-panel\", 10);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ng-appearance-outline\", ctx.appearance === \"outline\")(\"ng-has-value\", ctx.hasValue);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate(ctx.placeholder);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", (!ctx.multiLabelTemplate || !ctx.multiple) && ctx.selectedItems.length > 0);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple && ctx.multiLabelTemplate && ctx.selectedValues.length > 0);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isOpen)(\"aria-owns\", ctx.isOpen ? ctx.dropdownId : null);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"readOnly\", !ctx.searchable || ctx.itemsList.maxItemsSelected)(\"disabled\", ctx.disabled)(\"value\", ctx.searchTerm ? ctx.searchTerm : \"\");\n        ɵngcc0.ɵɵattribute(\"id\", ctx.labelForId)(\"tabindex\", ctx.tabIndex)(\"aria-activedescendant\", ctx.isOpen ? ctx.itemsList == null ? null : ctx.itemsList.markedItem == null ? null : ctx.itemsList.markedItem.htmlId : null)(\"aria-controls\", ctx.isOpen ? ctx.dropdownId : null);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.loading);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showClear());\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isOpen);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet, NgItemLabelDirective, NgDropdownPanelComponent, ɵngcc1.NgClass], styles: [\".ng-select{display:block;position:relative}.ng-select,.ng-select div,.ng-select input,.ng-select span{box-sizing:border-box}.ng-select [hidden]{display:none}.ng-select.ng-select-searchable .ng-select-container .ng-value-container .ng-input{opacity:1}.ng-select.ng-select-opened .ng-select-container{z-index:1001}.ng-select.ng-select-disabled .ng-select-container .ng-value-container .ng-placeholder,.ng-select.ng-select-disabled .ng-select-container .ng-value-container .ng-value{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;cursor:default;user-select:none}.ng-select.ng-select-disabled .ng-arrow-wrapper{cursor:default}.ng-select.ng-select-filtered .ng-placeholder{display:none}.ng-select .ng-select-container{cursor:default;display:flex;outline:none;overflow:hidden;position:relative;width:100%}.ng-select .ng-select-container .ng-value-container{display:flex;flex:1}.ng-select .ng-select-container .ng-value-container .ng-input{opacity:0}.ng-select .ng-select-container .ng-value-container .ng-input>input{background:none transparent;border:0;box-shadow:none;box-sizing:content-box;cursor:default;outline:none;padding:0;width:100%}.ng-select .ng-select-container .ng-value-container .ng-input>input::-ms-clear{display:none}.ng-select .ng-select-container .ng-value-container .ng-input>input[readonly]{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;padding:0;user-select:none;width:0}.ng-select.ng-select-single.ng-select-filtered .ng-select-container .ng-value-container .ng-value{visibility:hidden}.ng-select.ng-select-single .ng-select-container .ng-value-container,.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-value{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-value .ng-value-icon{display:none}.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-input{left:0;position:absolute;width:100%}.ng-select.ng-select-multiple.ng-select-disabled>.ng-select-container .ng-value-container .ng-value .ng-value-icon{display:none}.ng-select.ng-select-multiple .ng-select-container .ng-value-container{flex-wrap:wrap}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-placeholder{position:absolute}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value{white-space:nowrap}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value.ng-value-disabled .ng-value-icon{display:none}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-icon{cursor:pointer}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-input{flex:1;z-index:2}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-placeholder{z-index:1}.ng-select .ng-clear-wrapper{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;cursor:pointer;position:relative;user-select:none;width:17px}.ng-select .ng-clear-wrapper .ng-clear{display:inline-block;font-size:18px;line-height:1;pointer-events:none}.ng-select .ng-spinner-loader{-webkit-animation:load8 .8s linear infinite;animation:load8 .8s linear infinite;border:2px solid rgba(66,66,66,.2);border-left-color:#424242;border-radius:50%;font-size:10px;height:17px;margin-right:5px;position:relative;text-indent:-9999em;transform:translateZ(0);width:17px}.ng-select .ng-spinner-loader:after{border-radius:50%;height:17px;width:17px}@-webkit-keyframes load8{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}@keyframes load8{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}.ng-select .ng-arrow-wrapper{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;cursor:pointer;position:relative;text-align:center;user-select:none}.ng-select .ng-arrow-wrapper .ng-arrow{display:inline-block;height:0;pointer-events:none;position:relative;width:0}.ng-dropdown-panel{-webkit-overflow-scrolling:touch;box-sizing:border-box;opacity:0;position:absolute;width:100%;z-index:1050}.ng-dropdown-panel .ng-dropdown-panel-items{box-sizing:border-box;display:block;height:auto;max-height:240px;overflow-y:auto}.ng-dropdown-panel .ng-dropdown-panel-items .ng-optgroup,.ng-dropdown-panel .ng-dropdown-panel-items .ng-option{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option{box-sizing:border-box;cursor:pointer;display:block}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option .ng-option-label:empty:before{content:\\\"\\\\200b\\\"}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option .highlighted{font-weight:700;text-decoration:underline}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option.disabled{cursor:default}.ng-dropdown-panel .scroll-host{-webkit-overflow-scrolling:touch;display:block;overflow:hidden;overflow-y:auto;position:relative}.ng-dropdown-panel .scrollable-content{height:100%;left:0;position:absolute;top:0;width:100%}.ng-dropdown-panel .total-padding{opacity:0;width:1px}\"], encapsulation: 2, changeDetection: 0 });\nNgSelectComponent.ctorParameters = () => [\n    { type: String, decorators: [{ type: Attribute, args: ['class',] }] },\n    { type: undefined, decorators: [{ type: Attribute, args: ['autofocus',] }] },\n    { type: NgSelectConfig },\n    { type: undefined, decorators: [{ type: Inject, args: [SELECTION_MODEL_FACTORY,] }] },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ConsoleService }\n];\nNgSelectComponent.propDecorators = {\n    bindLabel: [{ type: Input }],\n    bindValue: [{ type: Input }],\n    markFirst: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    notFoundText: [{ type: Input }],\n    typeToSearchText: [{ type: Input }],\n    addTagText: [{ type: Input }],\n    loadingText: [{ type: Input }],\n    clearAllText: [{ type: Input }],\n    appearance: [{ type: Input }],\n    dropdownPosition: [{ type: Input }],\n    appendTo: [{ type: Input }],\n    loading: [{ type: Input }],\n    closeOnSelect: [{ type: Input }],\n    hideSelected: [{ type: Input }],\n    selectOnTab: [{ type: Input }],\n    openOnEnter: [{ type: Input }],\n    maxSelectedItems: [{ type: Input }],\n    groupBy: [{ type: Input }],\n    groupValue: [{ type: Input }],\n    bufferAmount: [{ type: Input }],\n    virtualScroll: [{ type: Input }],\n    selectableGroup: [{ type: Input }],\n    selectableGroupAsModel: [{ type: Input }],\n    searchFn: [{ type: Input }],\n    trackByFn: [{ type: Input }],\n    clearOnBackspace: [{ type: Input }],\n    labelForId: [{ type: Input }],\n    inputAttrs: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    readonly: [{ type: Input }],\n    searchWhileComposing: [{ type: Input }],\n    minTermLength: [{ type: Input }],\n    editableSearchTerm: [{ type: Input }],\n    keyDownFn: [{ type: Input }],\n    typeahead: [{ type: Input }, { type: HostBinding, args: ['class.ng-select-typeahead',] }],\n    multiple: [{ type: Input }, { type: HostBinding, args: ['class.ng-select-multiple',] }],\n    addTag: [{ type: Input }, { type: HostBinding, args: ['class.ng-select-taggable',] }],\n    searchable: [{ type: Input }, { type: HostBinding, args: ['class.ng-select-searchable',] }],\n    clearable: [{ type: Input }, { type: HostBinding, args: ['class.ng-select-clearable',] }],\n    isOpen: [{ type: Input }, { type: HostBinding, args: ['class.ng-select-opened',] }],\n    items: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    clearSearchOnAdd: [{ type: Input }],\n    blurEvent: [{ type: Output, args: ['blur',] }],\n    focusEvent: [{ type: Output, args: ['focus',] }],\n    changeEvent: [{ type: Output, args: ['change',] }],\n    openEvent: [{ type: Output, args: ['open',] }],\n    closeEvent: [{ type: Output, args: ['close',] }],\n    searchEvent: [{ type: Output, args: ['search',] }],\n    clearEvent: [{ type: Output, args: ['clear',] }],\n    addEvent: [{ type: Output, args: ['add',] }],\n    removeEvent: [{ type: Output, args: ['remove',] }],\n    scroll: [{ type: Output, args: ['scroll',] }],\n    scrollToEnd: [{ type: Output, args: ['scrollToEnd',] }],\n    optionTemplate: [{ type: ContentChild, args: [NgOptionTemplateDirective, { read: TemplateRef },] }],\n    optgroupTemplate: [{ type: ContentChild, args: [NgOptgroupTemplateDirective, { read: TemplateRef },] }],\n    labelTemplate: [{ type: ContentChild, args: [NgLabelTemplateDirective, { read: TemplateRef },] }],\n    multiLabelTemplate: [{ type: ContentChild, args: [NgMultiLabelTemplateDirective, { read: TemplateRef },] }],\n    headerTemplate: [{ type: ContentChild, args: [NgHeaderTemplateDirective, { read: TemplateRef },] }],\n    footerTemplate: [{ type: ContentChild, args: [NgFooterTemplateDirective, { read: TemplateRef },] }],\n    notFoundTemplate: [{ type: ContentChild, args: [NgNotFoundTemplateDirective, { read: TemplateRef },] }],\n    typeToSearchTemplate: [{ type: ContentChild, args: [NgTypeToSearchTemplateDirective, { read: TemplateRef },] }],\n    loadingTextTemplate: [{ type: ContentChild, args: [NgLoadingTextTemplateDirective, { read: TemplateRef },] }],\n    tagTemplate: [{ type: ContentChild, args: [NgTagTemplateDirective, { read: TemplateRef },] }],\n    loadingSpinnerTemplate: [{ type: ContentChild, args: [NgLoadingSpinnerTemplateDirective, { read: TemplateRef },] }],\n    dropdownPanel: [{ type: ViewChild, args: [forwardRef(() => NgDropdownPanelComponent),] }],\n    searchInput: [{ type: ViewChild, args: ['searchInput', { static: true },] }],\n    ngOptions: [{ type: ContentChildren, args: [NgOptionComponent, { descendants: true },] }],\n    disabled: [{ type: HostBinding, args: ['class.ng-select-disabled',] }],\n    filtered: [{ type: HostBinding, args: ['class.ng-select-filtered',] }],\n    handleKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgSelectComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ng-select',\n                template: \"<div\\n    (mousedown)=\\\"handleMousedown($event)\\\"\\n    [class.ng-appearance-outline]=\\\"appearance === 'outline'\\\"\\n    [class.ng-has-value]=\\\"hasValue\\\"\\n    class=\\\"ng-select-container\\\">\\n\\n    <div class=\\\"ng-value-container\\\">\\n        <div class=\\\"ng-placeholder\\\">{{placeholder}}</div>\\n\\n        <ng-container *ngIf=\\\"(!multiLabelTemplate  || !multiple ) && selectedItems.length > 0\\\">\\n            <div [class.ng-value-disabled]=\\\"item.disabled\\\" class=\\\"ng-value\\\" *ngFor=\\\"let item of selectedItems; trackBy: trackByOption\\\">\\n                <ng-template #defaultLabelTemplate>\\n                    <span class=\\\"ng-value-icon left\\\" (click)=\\\"unselect(item);\\\" aria-hidden=\\\"true\\\">\\u00D7</span>\\n                    <span class=\\\"ng-value-label\\\" [ngItemLabel]=\\\"item.label\\\" [escape]=\\\"escapeHTML\\\"></span>\\n                </ng-template>\\n\\n                <ng-template\\n                    [ngTemplateOutlet]=\\\"labelTemplate || defaultLabelTemplate\\\"\\n                    [ngTemplateOutletContext]=\\\"{ item: item.value, clear: clearItem, label: item.label }\\\">\\n                </ng-template>\\n            </div>\\n        </ng-container>\\n\\n        <ng-template *ngIf=\\\"multiple && multiLabelTemplate && selectedValues.length > 0\\\"\\n                [ngTemplateOutlet]=\\\"multiLabelTemplate\\\"\\n                [ngTemplateOutletContext]=\\\"{ items: selectedValues, clear: clearItem }\\\">\\n        </ng-template>\\n\\n        <div class=\\\"ng-input\\\"\\n            role=\\\"combobox\\\" \\n            [attr.aria-expanded]=\\\"isOpen\\\" \\n            [attr.aria-owns]=\\\"isOpen ? dropdownId : null\\\" \\n            aria-haspopup=\\\"listbox\\\">\\n\\n            <input #searchInput\\n                   [attr.id]=\\\"labelForId\\\"\\n                   [attr.tabindex]=\\\"tabIndex\\\"\\n                   [readOnly]=\\\"!searchable || itemsList.maxItemsSelected\\\"\\n                   [disabled]=\\\"disabled\\\"\\n                   [value]=\\\"searchTerm ? searchTerm : ''\\\"\\n                   (input)=\\\"filter(searchInput.value)\\\"\\n                   (compositionstart)=\\\"onCompositionStart()\\\"\\n                   (compositionend)=\\\"onCompositionEnd(searchInput.value)\\\"\\n                   (focus)=\\\"onInputFocus($event)\\\"\\n                   (blur)=\\\"onInputBlur($event)\\\"\\n                   (change)=\\\"$event.stopPropagation()\\\"\\n                   [attr.aria-activedescendant]=\\\"isOpen ? itemsList?.markedItem?.htmlId : null\\\"\\n                   aria-autocomplete=\\\"list\\\"\\n                   [attr.aria-controls]=\\\"isOpen ? dropdownId : null\\\">\\n        </div>\\n    </div>\\n\\n    <ng-container *ngIf=\\\"loading\\\">\\n        <ng-template #defaultLoadingSpinnerTemplate>\\n            <div class=\\\"ng-spinner-loader\\\"></div>\\n        </ng-template>\\n\\n        <ng-template\\n            [ngTemplateOutlet]=\\\"loadingSpinnerTemplate || defaultLoadingSpinnerTemplate\\\">\\n        </ng-template>\\n    </ng-container>\\n\\n    <span *ngIf=\\\"showClear()\\\" class=\\\"ng-clear-wrapper\\\" title=\\\"{{clearAllText}}\\\">\\n        <span class=\\\"ng-clear\\\" aria-hidden=\\\"true\\\">\\u00D7</span>\\n    </span>\\n\\n    <span class=\\\"ng-arrow-wrapper\\\">\\n        <span class=\\\"ng-arrow\\\"></span>\\n    </span>\\n</div>\\n\\n<ng-dropdown-panel *ngIf=\\\"isOpen\\\"\\n                   class=\\\"ng-dropdown-panel\\\"\\n                   [virtualScroll]=\\\"virtualScroll\\\"\\n                   [bufferAmount]=\\\"bufferAmount\\\"\\n                   [appendTo]=\\\"appendTo\\\"\\n                   [position]=\\\"dropdownPosition\\\"\\n                   [headerTemplate]=\\\"headerTemplate\\\"\\n                   [footerTemplate]=\\\"footerTemplate\\\"\\n                   [filterValue]=\\\"searchTerm\\\"\\n                   [items]=\\\"itemsList.filteredItems\\\"\\n                   [markedItem]=\\\"itemsList.markedItem\\\"\\n                   (update)=\\\"viewPortItems = $event\\\"\\n                   (scroll)=\\\"scroll.emit($event)\\\"\\n                   (scrollToEnd)=\\\"scrollToEnd.emit($event)\\\"\\n                   (outsideClick)=\\\"close()\\\"\\n                   [class.ng-select-multiple]=\\\"multiple\\\"\\n                   [ngClass]=\\\"appendTo ? classes : null\\\"\\n                   [id]=\\\"dropdownId\\\"\\n                   role=\\\"listbox\\\"\\n                   aria-label=\\\"Options list\\\">\\n\\n    <ng-container>\\n        <div class=\\\"ng-option\\\" [attr.role]=\\\"item.children ? 'group' : 'option'\\\" (click)=\\\"toggleItem(item)\\\" (mouseover)=\\\"onItemHover(item)\\\"\\n                *ngFor=\\\"let item of viewPortItems; trackBy: trackByOption\\\"\\n                [class.ng-option-disabled]=\\\"item.disabled\\\"\\n                [class.ng-option-selected]=\\\"item.selected\\\"\\n                [class.ng-optgroup]=\\\"item.children\\\"\\n                [class.ng-option]=\\\"!item.children\\\"\\n                [class.ng-option-child]=\\\"!!item.parent\\\"\\n                [class.ng-option-marked]=\\\"item === itemsList.markedItem\\\"\\n                [attr.aria-selected]=\\\"item.selected\\\"\\n                [attr.id]=\\\"item?.htmlId\\\">\\n\\n            <ng-template #defaultOptionTemplate>\\n                <span class=\\\"ng-option-label\\\" [ngItemLabel]=\\\"item.label\\\" [escape]=\\\"escapeHTML\\\"></span>\\n            </ng-template>\\n\\n            <ng-template\\n                [ngTemplateOutlet]=\\\"item.children ? (optgroupTemplate || defaultOptionTemplate) : (optionTemplate || defaultOptionTemplate)\\\"\\n                [ngTemplateOutletContext]=\\\"{ item: item.value, item$:item, index: item.index, searchTerm: searchTerm }\\\">\\n            </ng-template>\\n        </div>\\n\\n        <div class=\\\"ng-option\\\" [class.ng-option-marked]=\\\"!itemsList.markedItem\\\" (mouseover)=\\\"itemsList.unmarkItem()\\\" role=\\\"option\\\" (click)=\\\"selectTag()\\\" *ngIf=\\\"showAddTag\\\">\\n            <ng-template #defaultTagTemplate>\\n                <span><span class=\\\"ng-tag-label\\\">{{addTagText}}</span>\\\"{{searchTerm}}\\\"</span>\\n            </ng-template>\\n\\n            <ng-template\\n                [ngTemplateOutlet]=\\\"tagTemplate || defaultTagTemplate\\\"\\n                [ngTemplateOutletContext]=\\\"{ searchTerm: searchTerm }\\\">\\n            </ng-template>\\n        </div>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"showNoItemsFound()\\\">\\n        <ng-template #defaultNotFoundTemplate>\\n            <div class=\\\"ng-option ng-option-disabled\\\">{{notFoundText}}</div>\\n        </ng-template>\\n\\n        <ng-template\\n            [ngTemplateOutlet]=\\\"notFoundTemplate || defaultNotFoundTemplate\\\"\\n            [ngTemplateOutletContext]=\\\"{ searchTerm: searchTerm }\\\">\\n        </ng-template>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"showTypeToSearch()\\\">\\n        <ng-template #defaultTypeToSearchTemplate>\\n            <div class=\\\"ng-option ng-option-disabled\\\">{{typeToSearchText}}</div>\\n        </ng-template>\\n\\n        <ng-template\\n            [ngTemplateOutlet]=\\\"typeToSearchTemplate || defaultTypeToSearchTemplate\\\">\\n        </ng-template>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"loading && itemsList.filteredItems.length === 0\\\">\\n        <ng-template #defaultLoadingTextTemplate>\\n            <div class=\\\"ng-option ng-option-disabled\\\">{{loadingText}}</div>\\n        </ng-template>\\n\\n        <ng-template\\n            [ngTemplateOutlet]=\\\"loadingTextTemplate || defaultLoadingTextTemplate\\\"\\n            [ngTemplateOutletContext]=\\\"{ searchTerm: searchTerm }\\\">\\n        </ng-template>\\n    </ng-container>\\n\\n</ng-dropdown-panel>\\n\",\n                providers: [{\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef(() => NgSelectComponent),\n                        multi: true\n                    }, NgDropdownPanelService],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[class.ng-select]': 'useDefaultClass',\n                    '[class.ng-select-single]': '!multiple'\n                },\n                styles: [\".ng-select{display:block;position:relative}.ng-select,.ng-select div,.ng-select input,.ng-select span{box-sizing:border-box}.ng-select [hidden]{display:none}.ng-select.ng-select-searchable .ng-select-container .ng-value-container .ng-input{opacity:1}.ng-select.ng-select-opened .ng-select-container{z-index:1001}.ng-select.ng-select-disabled .ng-select-container .ng-value-container .ng-placeholder,.ng-select.ng-select-disabled .ng-select-container .ng-value-container .ng-value{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;cursor:default;user-select:none}.ng-select.ng-select-disabled .ng-arrow-wrapper{cursor:default}.ng-select.ng-select-filtered .ng-placeholder{display:none}.ng-select .ng-select-container{cursor:default;display:flex;outline:none;overflow:hidden;position:relative;width:100%}.ng-select .ng-select-container .ng-value-container{display:flex;flex:1}.ng-select .ng-select-container .ng-value-container .ng-input{opacity:0}.ng-select .ng-select-container .ng-value-container .ng-input>input{background:none transparent;border:0;box-shadow:none;box-sizing:content-box;cursor:default;outline:none;padding:0;width:100%}.ng-select .ng-select-container .ng-value-container .ng-input>input::-ms-clear{display:none}.ng-select .ng-select-container .ng-value-container .ng-input>input[readonly]{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;padding:0;user-select:none;width:0}.ng-select.ng-select-single.ng-select-filtered .ng-select-container .ng-value-container .ng-value{visibility:hidden}.ng-select.ng-select-single .ng-select-container .ng-value-container,.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-value{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-value .ng-value-icon{display:none}.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-input{left:0;position:absolute;width:100%}.ng-select.ng-select-multiple.ng-select-disabled>.ng-select-container .ng-value-container .ng-value .ng-value-icon{display:none}.ng-select.ng-select-multiple .ng-select-container .ng-value-container{flex-wrap:wrap}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-placeholder{position:absolute}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value{white-space:nowrap}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value.ng-value-disabled .ng-value-icon{display:none}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-icon{cursor:pointer}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-input{flex:1;z-index:2}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-placeholder{z-index:1}.ng-select .ng-clear-wrapper{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;cursor:pointer;position:relative;user-select:none;width:17px}.ng-select .ng-clear-wrapper .ng-clear{display:inline-block;font-size:18px;line-height:1;pointer-events:none}.ng-select .ng-spinner-loader{-webkit-animation:load8 .8s linear infinite;animation:load8 .8s linear infinite;border:2px solid rgba(66,66,66,.2);border-left-color:#424242;border-radius:50%;font-size:10px;height:17px;margin-right:5px;position:relative;text-indent:-9999em;transform:translateZ(0);width:17px}.ng-select .ng-spinner-loader:after{border-radius:50%;height:17px;width:17px}@-webkit-keyframes load8{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}@keyframes load8{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}.ng-select .ng-arrow-wrapper{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;cursor:pointer;position:relative;text-align:center;user-select:none}.ng-select .ng-arrow-wrapper .ng-arrow{display:inline-block;height:0;pointer-events:none;position:relative;width:0}.ng-dropdown-panel{-webkit-overflow-scrolling:touch;box-sizing:border-box;opacity:0;position:absolute;width:100%;z-index:1050}.ng-dropdown-panel .ng-dropdown-panel-items{box-sizing:border-box;display:block;height:auto;max-height:240px;overflow-y:auto}.ng-dropdown-panel .ng-dropdown-panel-items .ng-optgroup,.ng-dropdown-panel .ng-dropdown-panel-items .ng-option{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option{box-sizing:border-box;cursor:pointer;display:block}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option .ng-option-label:empty:before{content:\\\"\\\\200b\\\"}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option .highlighted{font-weight:700;text-decoration:underline}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option.disabled{cursor:default}.ng-dropdown-panel .scroll-host{-webkit-overflow-scrolling:touch;display:block;overflow:hidden;overflow-y:auto;position:relative}.ng-dropdown-panel .scrollable-content{height:100%;left:0;position:absolute;top:0;width:100%}.ng-dropdown-panel .total-padding{opacity:0;width:1px}\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Attribute,\n                args: ['class']\n            }] }, { type: undefined, decorators: [{\n                type: Attribute,\n                args: ['autofocus']\n            }] }, { type: NgSelectConfig }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [SELECTION_MODEL_FACTORY]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ConsoleService }]; }, { markFirst: [{\n            type: Input\n        }], dropdownPosition: [{\n            type: Input\n        }], loading: [{\n            type: Input\n        }], closeOnSelect: [{\n            type: Input\n        }], hideSelected: [{\n            type: Input\n        }], selectOnTab: [{\n            type: Input\n        }], bufferAmount: [{\n            type: Input\n        }], selectableGroup: [{\n            type: Input\n        }], selectableGroupAsModel: [{\n            type: Input\n        }], searchFn: [{\n            type: Input\n        }], trackByFn: [{\n            type: Input\n        }], clearOnBackspace: [{\n            type: Input\n        }], labelForId: [{\n            type: Input\n        }], inputAttrs: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], searchWhileComposing: [{\n            type: Input\n        }], minTermLength: [{\n            type: Input\n        }], editableSearchTerm: [{\n            type: Input\n        }], keyDownFn: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }, {\n            type: HostBinding,\n            args: ['class.ng-select-multiple']\n        }], addTag: [{\n            type: Input\n        }, {\n            type: HostBinding,\n            args: ['class.ng-select-taggable']\n        }], searchable: [{\n            type: Input\n        }, {\n            type: HostBinding,\n            args: ['class.ng-select-searchable']\n        }], clearable: [{\n            type: Input\n        }, {\n            type: HostBinding,\n            args: ['class.ng-select-clearable']\n        }], isOpen: [{\n            type: Input\n        }, {\n            type: HostBinding,\n            args: ['class.ng-select-opened']\n        }], blurEvent: [{\n            type: Output,\n            args: ['blur']\n        }], focusEvent: [{\n            type: Output,\n            args: ['focus']\n        }], changeEvent: [{\n            type: Output,\n            args: ['change']\n        }], openEvent: [{\n            type: Output,\n            args: ['open']\n        }], closeEvent: [{\n            type: Output,\n            args: ['close']\n        }], searchEvent: [{\n            type: Output,\n            args: ['search']\n        }], clearEvent: [{\n            type: Output,\n            args: ['clear']\n        }], addEvent: [{\n            type: Output,\n            args: ['add']\n        }], removeEvent: [{\n            type: Output,\n            args: ['remove']\n        }], scroll: [{\n            type: Output,\n            args: ['scroll']\n        }], scrollToEnd: [{\n            type: Output,\n            args: ['scrollToEnd']\n        }], items: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], clearSearchOnAdd: [{\n            type: Input\n        }], disabled: [{\n            type: HostBinding,\n            args: ['class.ng-select-disabled']\n        }], filtered: [{\n            type: HostBinding,\n            args: ['class.ng-select-filtered']\n        }], handleKeyDown: [{\n            type: HostListener,\n            args: ['keydown', ['$event']]\n        }], bindLabel: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], notFoundText: [{\n            type: Input\n        }], typeToSearchText: [{\n            type: Input\n        }], addTagText: [{\n            type: Input\n        }], loadingText: [{\n            type: Input\n        }], clearAllText: [{\n            type: Input\n        }], virtualScroll: [{\n            type: Input\n        }], openOnEnter: [{\n            type: Input\n        }], appendTo: [{\n            type: Input\n        }], bindValue: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], maxSelectedItems: [{\n            type: Input\n        }], groupBy: [{\n            type: Input\n        }], groupValue: [{\n            type: Input\n        }], tabIndex: [{\n            type: Input\n        }], typeahead: [{\n            type: Input\n        }, {\n            type: HostBinding,\n            args: ['class.ng-select-typeahead']\n        }], optionTemplate: [{\n            type: ContentChild,\n            args: [NgOptionTemplateDirective, { read: TemplateRef }]\n        }], optgroupTemplate: [{\n            type: ContentChild,\n            args: [NgOptgroupTemplateDirective, { read: TemplateRef }]\n        }], labelTemplate: [{\n            type: ContentChild,\n            args: [NgLabelTemplateDirective, { read: TemplateRef }]\n        }], multiLabelTemplate: [{\n            type: ContentChild,\n            args: [NgMultiLabelTemplateDirective, { read: TemplateRef }]\n        }], headerTemplate: [{\n            type: ContentChild,\n            args: [NgHeaderTemplateDirective, { read: TemplateRef }]\n        }], footerTemplate: [{\n            type: ContentChild,\n            args: [NgFooterTemplateDirective, { read: TemplateRef }]\n        }], notFoundTemplate: [{\n            type: ContentChild,\n            args: [NgNotFoundTemplateDirective, { read: TemplateRef }]\n        }], typeToSearchTemplate: [{\n            type: ContentChild,\n            args: [NgTypeToSearchTemplateDirective, { read: TemplateRef }]\n        }], loadingTextTemplate: [{\n            type: ContentChild,\n            args: [NgLoadingTextTemplateDirective, { read: TemplateRef }]\n        }], tagTemplate: [{\n            type: ContentChild,\n            args: [NgTagTemplateDirective, { read: TemplateRef }]\n        }], loadingSpinnerTemplate: [{\n            type: ContentChild,\n            args: [NgLoadingSpinnerTemplateDirective, { read: TemplateRef }]\n        }], dropdownPanel: [{\n            type: ViewChild,\n            args: [forwardRef(() => NgDropdownPanelComponent)]\n        }], searchInput: [{\n            type: ViewChild,\n            args: ['searchInput', { static: true }]\n        }], ngOptions: [{\n            type: ContentChildren,\n            args: [NgOptionComponent, { descendants: true }]\n        }] }); })();\n\nfunction DefaultSelectionModelFactory() {\n    return new DefaultSelectionModel();\n}\nclass DefaultSelectionModel {\n    constructor() {\n        this._selected = [];\n    }\n    get value() {\n        return this._selected;\n    }\n    select(item, multiple, groupAsModel) {\n        item.selected = true;\n        if (!item.children || (!multiple && groupAsModel)) {\n            this._selected.push(item);\n        }\n        if (multiple) {\n            if (item.parent) {\n                const childrenCount = item.parent.children.length;\n                const selectedCount = item.parent.children.filter(x => x.selected).length;\n                item.parent.selected = childrenCount === selectedCount;\n            }\n            else if (item.children) {\n                this._setChildrenSelectedState(item.children, true);\n                this._removeChildren(item);\n                if (groupAsModel && this._activeChildren(item)) {\n                    this._selected = [...this._selected.filter(x => x.parent !== item), item];\n                }\n                else {\n                    this._selected = [...this._selected, ...item.children.filter(x => !x.disabled)];\n                }\n            }\n        }\n    }\n    unselect(item, multiple) {\n        this._selected = this._selected.filter(x => x !== item);\n        item.selected = false;\n        if (multiple) {\n            if (item.parent && item.parent.selected) {\n                const children = item.parent.children;\n                this._removeParent(item.parent);\n                this._removeChildren(item.parent);\n                this._selected.push(...children.filter(x => x !== item && !x.disabled));\n                item.parent.selected = false;\n            }\n            else if (item.children) {\n                this._setChildrenSelectedState(item.children, false);\n                this._removeChildren(item);\n            }\n        }\n    }\n    clear(keepDisabled) {\n        this._selected = keepDisabled ? this._selected.filter(x => x.disabled) : [];\n    }\n    _setChildrenSelectedState(children, selected) {\n        for (const child of children) {\n            if (child.disabled) {\n                continue;\n            }\n            child.selected = selected;\n        }\n        ;\n    }\n    _removeChildren(parent) {\n        this._selected = [\n            ...this._selected.filter(x => x.parent !== parent),\n            ...parent.children.filter(x => x.parent === parent && x.disabled && x.selected)\n        ];\n    }\n    _removeParent(parent) {\n        this._selected = this._selected.filter(x => x !== parent);\n    }\n    _activeChildren(item) {\n        return item.children.every(x => !x.disabled || x.selected);\n    }\n}\n\nconst ɵ0 = DefaultSelectionModelFactory;\nclass NgSelectModule {\n}\nNgSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgSelectModule });\nNgSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgSelectModule_Factory(t) { return new (t || NgSelectModule)(); }, providers: [\n        { provide: SELECTION_MODEL_FACTORY, useValue: ɵ0 }\n    ], imports: [[\n            CommonModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgSelectModule, { declarations: function () { return [NgDropdownPanelComponent, NgOptionComponent, NgSelectComponent, NgOptgroupTemplateDirective, NgOptionTemplateDirective, NgLabelTemplateDirective, NgMultiLabelTemplateDirective, NgHeaderTemplateDirective, NgFooterTemplateDirective, NgNotFoundTemplateDirective, NgTypeToSearchTemplateDirective, NgLoadingTextTemplateDirective, NgTagTemplateDirective, NgLoadingSpinnerTemplateDirective, NgItemLabelDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgSelectComponent, NgOptionComponent, NgOptgroupTemplateDirective, NgOptionTemplateDirective, NgLabelTemplateDirective, NgMultiLabelTemplateDirective, NgHeaderTemplateDirective, NgFooterTemplateDirective, NgNotFoundTemplateDirective, NgTypeToSearchTemplateDirective, NgLoadingTextTemplateDirective, NgTagTemplateDirective, NgLoadingSpinnerTemplateDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgSelectModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    NgDropdownPanelComponent,\n                    NgOptionComponent,\n                    NgSelectComponent,\n                    NgOptgroupTemplateDirective,\n                    NgOptionTemplateDirective,\n                    NgLabelTemplateDirective,\n                    NgMultiLabelTemplateDirective,\n                    NgHeaderTemplateDirective,\n                    NgFooterTemplateDirective,\n                    NgNotFoundTemplateDirective,\n                    NgTypeToSearchTemplateDirective,\n                    NgLoadingTextTemplateDirective,\n                    NgTagTemplateDirective,\n                    NgLoadingSpinnerTemplateDirective,\n                    NgItemLabelDirective\n                ],\n                imports: [\n                    CommonModule\n                ],\n                exports: [\n                    NgSelectComponent,\n                    NgOptionComponent,\n                    NgOptgroupTemplateDirective,\n                    NgOptionTemplateDirective,\n                    NgLabelTemplateDirective,\n                    NgMultiLabelTemplateDirective,\n                    NgHeaderTemplateDirective,\n                    NgFooterTemplateDirective,\n                    NgNotFoundTemplateDirective,\n                    NgTypeToSearchTemplateDirective,\n                    NgLoadingTextTemplateDirective,\n                    NgTagTemplateDirective,\n                    NgLoadingSpinnerTemplateDirective\n                ],\n                providers: [\n                    { provide: SELECTION_MODEL_FACTORY, useValue: ɵ0 }\n                ]\n            }]\n    }], null, null); })();\n\n/*\n * Public API Surface of ng-select\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgSelectComponent, NgSelectConfig, NgSelectModule, SELECTION_MODEL_FACTORY, DefaultSelectionModelFactory as ɵb, DefaultSelectionModel as ɵc, NgDropdownPanelService as ɵd, NgItemLabelDirective as ɵe, NgOptionTemplateDirective as ɵf, NgOptgroupTemplateDirective as ɵg, NgLabelTemplateDirective as ɵh, NgMultiLabelTemplateDirective as ɵi, NgHeaderTemplateDirective as ɵj, NgFooterTemplateDirective as ɵk, NgNotFoundTemplateDirective as ɵl, NgTypeToSearchTemplateDirective as ɵm, NgLoadingTextTemplateDirective as ɵn, NgTagTemplateDirective as ɵo, NgLoadingSpinnerTemplateDirective as ɵp, NgDropdownPanelComponent as ɵq, NgOptionComponent as ɵr, ConsoleService as ɵs };\n\n//# sourceMappingURL=ng-select-ng-select.js.map","import { Injectable, NgModule, Pipe } from '@angular/core';\n\nimport * as ɵngcc0 from '@angular/core';\nclass Ng2SearchPipe {\n    /**\n     * @param {?} items object from array\n     * @param {?} term term's search\n     * @return {?}\n     */\n    transform(items, term) {\n        if (!term || !items)\n            return items;\n        return Ng2SearchPipe.filter(items, term);\n    }\n    /**\n     *\n     * @param {?} items List of items to filter\n     * @param {?} term  a string term to compare with every property of the list\n     *\n     * @return {?}\n     */\n    static filter(items, term) {\n        const /** @type {?} */ toCompare = term.toLowerCase();\n        /**\n         * @param {?} item\n         * @param {?} term\n         * @return {?}\n         */\n        function checkInside(item, term) {\n            for (let /** @type {?} */ property in item) {\n                if (item[property] === null || item[property] == undefined) {\n                    continue;\n                }\n                if (typeof item[property] === 'object') {\n                    if (checkInside(item[property], term)) {\n                        return true;\n                    }\n                }\n                if (item[property].toString().toLowerCase().includes(toCompare)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return items.filter(function (item) {\n            return checkInside(item, term);\n        });\n    }\n}\nNg2SearchPipe.ɵfac = function Ng2SearchPipe_Factory(t) { return new (t || Ng2SearchPipe)(); };\nNg2SearchPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"filter\", type: Ng2SearchPipe, pure: false });\nNg2SearchPipe.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Ng2SearchPipe, factory: Ng2SearchPipe.ɵfac });\n/**\n * @nocollapse\n */\nNg2SearchPipe.ctorParameters = () => [];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Ng2SearchPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'filter',\n                pure: false\n            }]\n    }, {\n        type: Injectable\n    }], null, null); })();\n\nclass Ng2SearchPipeModule {\n}\nNg2SearchPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: Ng2SearchPipeModule });\nNg2SearchPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function Ng2SearchPipeModule_Factory(t) { return new (t || Ng2SearchPipeModule)(); } });\n/**\n * @nocollapse\n */\nNg2SearchPipeModule.ctorParameters = () => [];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Ng2SearchPipeModule, { declarations: [Ng2SearchPipe], exports: [Ng2SearchPipe] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Ng2SearchPipeModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [Ng2SearchPipe],\n                exports: [Ng2SearchPipe]\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Ng2SearchPipeModule, Ng2SearchPipe };\n\n//# sourceMappingURL=ng2-search-filter.js.map","import { forwardRef, EventEmitter, Directive, ElementRef, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport { NG_VALIDATORS } from '@angular/forms';\n\nimport * as ɵngcc0 from '@angular/core';\nconst KEYFILTER_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => KeyFilter),\n    multi: true\n};\nconst DEFAULT_MASKS = {\n    pint: /[\\d]/,\n    'int': /[\\d\\-]/,\n    pnum: /[\\d\\.]/,\n    money: /[\\d\\.\\s,]/,\n    num: /[\\d\\-\\.]/,\n    hex: /[0-9a-f]/i,\n    email: /[a-z0-9_\\.\\-@]/i,\n    alpha: /[a-z_]/i,\n    alphanum: /[a-z0-9_]/i\n};\nconst KEYS = {\n    TAB: 9,\n    RETURN: 13,\n    ESC: 27,\n    BACKSPACE: 8,\n    DELETE: 46\n};\nconst SAFARI_KEYS = {\n    63234: 37,\n    63235: 39,\n    63232: 38,\n    63233: 40,\n    63276: 33,\n    63277: 34,\n    63272: 46,\n    63273: 36,\n    63275: 35 // end\n};\nclass KeyFilter {\n    constructor(el) {\n        this.el = el;\n        this.ngModelChange = new EventEmitter();\n        this.isAndroid = DomHandler.isAndroid();\n    }\n    get pattern() {\n        return this._pattern;\n    }\n    set pattern(_pattern) {\n        this._pattern = _pattern;\n        this.regex = DEFAULT_MASKS[this._pattern] || this._pattern;\n    }\n    isNavKeyPress(e) {\n        let k = e.keyCode;\n        k = DomHandler.getBrowser().safari ? (SAFARI_KEYS[k] || k) : k;\n        return (k >= 33 && k <= 40) || k == KEYS.RETURN || k == KEYS.TAB || k == KEYS.ESC;\n    }\n    ;\n    isSpecialKey(e) {\n        let k = e.keyCode || e.charCode;\n        return k == 9 || k == 13 || k == 27 || k == 16 || k == 17 || (k >= 18 && k <= 20) ||\n            (DomHandler.getBrowser().opera && !e.shiftKey && (k == 8 || (k >= 33 && k <= 35) || (k >= 36 && k <= 39) || (k >= 44 && k <= 45)));\n    }\n    getKey(e) {\n        let k = e.keyCode || e.charCode;\n        return DomHandler.getBrowser().safari ? (SAFARI_KEYS[k] || k) : k;\n    }\n    getCharCode(e) {\n        return e.charCode || e.keyCode || e.which;\n    }\n    findDelta(value, prevValue) {\n        let delta = '';\n        for (let i = 0; i < value.length; i++) {\n            let str = value.substr(0, i) + value.substr(i + value.length - prevValue.length);\n            if (str === prevValue)\n                delta = value.substr(i, value.length - prevValue.length);\n        }\n        return delta;\n    }\n    isValidChar(c) {\n        return this.regex.test(c);\n    }\n    isValidString(str) {\n        for (let i = 0; i < str.length; i++) {\n            if (!this.isValidChar(str.substr(i, 1))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    onInput(e) {\n        if (this.isAndroid && !this.pValidateOnly) {\n            let val = this.el.nativeElement.value;\n            let lastVal = this.lastValue || '';\n            let inserted = this.findDelta(val, lastVal);\n            let removed = this.findDelta(lastVal, val);\n            let pasted = inserted.length > 1 || (!inserted && !removed);\n            if (pasted) {\n                if (!this.isValidString(val)) {\n                    this.el.nativeElement.value = lastVal;\n                    this.ngModelChange.emit(lastVal);\n                }\n            }\n            else if (!removed) {\n                if (!this.isValidChar(inserted)) {\n                    this.el.nativeElement.value = lastVal;\n                    this.ngModelChange.emit(lastVal);\n                }\n            }\n            val = this.el.nativeElement.value;\n            if (this.isValidString(val)) {\n                this.lastValue = val;\n            }\n        }\n    }\n    onKeyPress(e) {\n        if (this.isAndroid || this.pValidateOnly) {\n            return;\n        }\n        let browser = DomHandler.getBrowser();\n        let k = this.getKey(e);\n        if (browser.mozilla && (e.ctrlKey || e.altKey)) {\n            return;\n        }\n        else if (k == 17 || k == 18) {\n            return;\n        }\n        let c = this.getCharCode(e);\n        let cc = String.fromCharCode(c);\n        let ok = true;\n        if (!browser.mozilla && (this.isSpecialKey(e) || !cc)) {\n            return;\n        }\n        ok = this.regex.test(cc);\n        if (!ok) {\n            e.preventDefault();\n        }\n    }\n    onPaste(e) {\n        const clipboardData = e.clipboardData || window.clipboardData.getData('text');\n        if (clipboardData) {\n            const pastedText = clipboardData.getData('text');\n            for (let char of pastedText.toString()) {\n                if (!this.regex.test(char)) {\n                    e.preventDefault();\n                    return;\n                }\n            }\n        }\n    }\n    validate(c) {\n        if (this.pValidateOnly) {\n            let value = this.el.nativeElement.value;\n            if (value && !this.regex.test(value)) {\n                return {\n                    validatePattern: false\n                };\n            }\n        }\n    }\n}\nKeyFilter.ɵfac = function KeyFilter_Factory(t) { return new (t || KeyFilter)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nKeyFilter.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: KeyFilter, selectors: [[\"\", \"pKeyFilter\", \"\"]], hostBindings: function KeyFilter_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function KeyFilter_input_HostBindingHandler($event) { return ctx.onInput($event); })(\"keypress\", function KeyFilter_keypress_HostBindingHandler($event) { return ctx.onKeyPress($event); })(\"paste\", function KeyFilter_paste_HostBindingHandler($event) { return ctx.onPaste($event); });\n    } }, inputs: { pattern: [\"pKeyFilter\", \"pattern\"], pValidateOnly: \"pValidateOnly\" }, outputs: { ngModelChange: \"ngModelChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([KEYFILTER_VALIDATOR])] });\nKeyFilter.ctorParameters = () => [\n    { type: ElementRef }\n];\nKeyFilter.propDecorators = {\n    pValidateOnly: [{ type: Input }],\n    ngModelChange: [{ type: Output }],\n    pattern: [{ type: Input, args: ['pKeyFilter',] }],\n    onInput: [{ type: HostListener, args: ['input', ['$event'],] }],\n    onKeyPress: [{ type: HostListener, args: ['keypress', ['$event'],] }],\n    onPaste: [{ type: HostListener, args: ['paste', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(KeyFilter, [{\n        type: Directive,\n        args: [{\n                selector: '[pKeyFilter]',\n                providers: [KEYFILTER_VALIDATOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { ngModelChange: [{\n            type: Output\n        }], pattern: [{\n            type: Input,\n            args: ['pKeyFilter']\n        }], onInput: [{\n            type: HostListener,\n            args: ['input', ['$event']]\n        }], onKeyPress: [{\n            type: HostListener,\n            args: ['keypress', ['$event']]\n        }], onPaste: [{\n            type: HostListener,\n            args: ['paste', ['$event']]\n        }], pValidateOnly: [{\n            type: Input\n        }] }); })();\nclass KeyFilterModule {\n}\nKeyFilterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: KeyFilterModule });\nKeyFilterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function KeyFilterModule_Factory(t) { return new (t || KeyFilterModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(KeyFilterModule, { declarations: function () { return [KeyFilter]; }, imports: function () { return [CommonModule]; }, exports: function () { return [KeyFilter]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(KeyFilterModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: [KeyFilter],\n                declarations: [KeyFilter]\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { KEYFILTER_VALIDATOR, KeyFilter, KeyFilterModule };\n\n//# sourceMappingURL=primeng-keyfilter.js.map","import { HttpParams } from '@angular/common/http';\nexport const HTTP_PARAMS = new HttpParams();\n","import { REGISTER_ROUTE } from \"./routes_obj/register_route\";\n\nexport const ROUTES_CORES = {\n  registerRoutes: REGISTER_ROUTE\n}\n","import { RegisterSupplierComponent } from './../../../modules/register/register-supplier/register-supplier.component';\nimport { RegisterJourneyComponent } from './../../../modules/register/register-journey/register-journey.component';\nimport { RegisterTypeMaintenanceComponent } from '../../../modules/register/register-maintenance/type-maintenance/type-maintenance.component';\nimport { RegisterVehicleAccidentComponent } from '../../../modules/register/vehicle-accident/register-vehicle-accident/register-vehicle-accident.component';\nimport { RegisterMaintenanceComponent } from '../../../modules/register/register-maintenance/maintenance/maintenance.component';\nimport { AlertComponent } from '../../../modules/register/alert/alert.component';\nimport { RegisterFunctionComponent } from '../../../modules/register/register-employee/register-function/register-function.component';\nimport { RegisterKmComponent } from '../../../modules/register/register-km/register-km.component';\nimport { RegisterDriverComponent } from '../../../modules/register/register-employee/register-driver/register-driver.component';\nimport { RegisterEmployeeComponent } from '../../../modules/register/register-employee/register-employee/register-employee.component';\nimport { AuthGuardService } from '../../guards/auth-guard.service';\nimport { RegisterPerfilComponent } from '../../../modules/register/register-perfil/register-perfil.component';\nimport { RegisterCustomerComponent } from '../../../modules/register/register-customer/register-customer.component';\nimport { RegisterFuelComponent } from '../../../modules/register/register-fuel/register-fuel.component';\nimport { RegisterExpensesComponent } from '../../../modules/register/register-expenses/register-expenses.component';\nimport { RegisterVehiclesComponent } from '../../../modules/register/register-vehicles/register-vehicles.component';\nimport { RegisterReportComponent } from '../../../modules/register/register-report/register-report.component';\nimport { RegisterVehicleAccidentTypeComponent } from 'src/app/modules/register/vehicle-accident/register-vehicle-accident-type/register-vehicle-accident-type.component';\n\nexport const REGISTER_ROUTE = [\n  {\n    path: 'employee',\n    children: [\n      {\n        path: '',\n        canActivate: [AuthGuardService],\n        component: RegisterEmployeeComponent,\n        key: 'colaboradores_post',\n      },\n      {\n        path: 'driver',\n        canActivate: [AuthGuardService],\n        component: RegisterDriverComponent,\n        key: 'colaboradores_post',\n      }]\n  },\n  {\n    path: 'km',\n    component: RegisterKmComponent,\n    canActivate: [AuthGuardService],\n    key: '',\n  },\n  {\n    path: 'type-function',\n    component: RegisterFunctionComponent,\n    canActivate: [AuthGuardService],\n    key: 'tipo_colaborador_post',\n  },\n  {\n    path: 'perfil',\n    component: RegisterPerfilComponent,\n    canActivate: [AuthGuardService],\n    key: 'perfil_post',\n  },\n  {\n    path: 'alert',\n    component: AlertComponent,\n    canActivate: [AuthGuardService],\n    key: 'alerta_post',\n  },\n  {\n    path: 'maintenance',\n    component: RegisterMaintenanceComponent,\n    canActivate: [AuthGuardService],\n    key: 'despesa_post',\n  },\n  {\n    path: 'vehicle-accident',\n    component: RegisterVehicleAccidentComponent,\n    canActivate: [AuthGuardService],\n    key: 'sinistros_post',\n  },\n  {\n    path: 'customer',\n    component: RegisterCustomerComponent,\n    canActivate: [AuthGuardService],\n    key: 'clientes_post',\n  },\n  {\n    path: 'supplier',\n    component: RegisterSupplierComponent,\n    canActivate: [AuthGuardService],\n    key: 'fornecedores_post',\n  },\n  {\n    path: 'fuel',\n    component: RegisterFuelComponent,\n    canActivate: [AuthGuardService],\n    key: 'abastecimento_post',\n  },\n  {\n    path: 'type-expense',\n    component: RegisterTypeMaintenanceComponent,\n    canActivate: [AuthGuardService],\n    key: 'tipo_despesa_post',\n  },\n  {\n    path: 'expenses',\n    component: RegisterExpensesComponent,\n    canActivate: [AuthGuardService],\n    key: 'despesa_post',\n  },\n  {\n    path: 'vehicle',\n    component: RegisterVehiclesComponent,\n    canActivate: [AuthGuardService],\n    key: 'veiculos_post',\n  },\n  {\n    path: 'report',\n    component: RegisterReportComponent,\n    canActivate: [AuthGuardService],\n    key: '',\n  },\n  {\n    path: 'journey',\n    component: RegisterJourneyComponent,\n    canActivate: [AuthGuardService],\n    key: 'journey_post',\n  },\n  {\n    path: 'vehicle-accident-type',\n    component: RegisterVehicleAccidentTypeComponent,\n    canActivate: [AuthGuardService],\n    key: 'tipo_sinistro_post',\n  },\n]\n","import { environment } from '../../../environments/environment.prod';\nimport { ElementsResponse } from '../../shared/model/response/elementsResponse';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CepService {\n\n  constructor( private httpClient: HttpClient ) { }\n\n  public get<T>( cep ): Observable<any> {\n   return this.httpClient.get<T>(`${environment.cep.url}/${cep}/${environment.cep.response_type}`, { })\n   .pipe(map((r: any) => {\n       return {\n        cep: r.cep,\n        street: r.logradouro,\n        neighborhood: r.bairro,\n        city: r.localidade,\n        state: r.uf\n       }\n   }));\n  }\n}\n","import { BUILD_PAYLOAD_ALERT } from './build_payload';\nimport { CAR_REDUX } from './../../../core/redux/reducers/cartReducer';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { MsgService } from 'src/app/core/menssages/msg.service';\nimport { ApiService } from 'src/app/core/services/api.service';\nimport { BreadcrumbService } from 'src/app/shared/config/app.breadcrumb.service';\nimport { ApiPaths } from 'src/app/shared/enuns/api-paths.enum';\nimport { TOAST_SUCCESSO } from 'src/app/core/menssages/toastEvent';\nimport { SAVE_SUCESS } from 'src/app/core/menssages/menssagens';\nimport { LoginCookieStorage } from 'src/app/core/cookieStorage/loginCookieStorage';\nimport { ElementsResponse, Page } from 'src/app/shared/model/response/elementsResponse';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.scss']\n})\nexport class AlertComponent implements OnInit {\n\n  public alertFormGroup: FormGroup;\n  public alerts: FormArray;\n  public page = new Page();\n  public perfis = [{label: 'Apenas para mim', value: null}];\n\n  @Input() id: string;\n  @Input() vehicle: any;\n  @Input() loadApp: boolean;\n  @Input() stepper: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private msg: MsgService,\n    public loginCookieStorage: LoginCookieStorage,\n    private spinner: NgxSpinnerService,\n    private service: ApiService,\n    private breadcrumbService: BreadcrumbService\n  ) {\n    this.breadcrumbService.setItems([{ label: 'Registrar alertas'}]);\n  }\n\n  private loadFormGroup():void{\n    this.alertFormGroup = this.formBuilder.group({\n      title: ['', [Validators.required]],\n      note: ['', [Validators.required]],\n      notifys: [''],\n      carId: [''],\n      vehicleRegistration: [''],\n      priorityName: [''],\n      priorityColor: [''],\n      alertDay: ['', [Validators.required]],\n    });\n  }\n\n  public onClick(){\n     this.loadPerfis();\n  }\n\n  public loadPerfis(){\n    if(this.perfis.length == 1){\n      this.spinner.show();\n      this.service.get(ApiPaths.PERFIL, {page: 0, size: 1000})\n                  .subscribe((r: ElementsResponse) => {\n\n                    r.elements.forEach((r) => {\n                      this.perfis.push({label: r.name, value: r.name});\n                   });\n\n                   this.perfis = [...this.perfis];\n                   this.spinner.hide();\n                   this.page = r.page;\n\n                  });\n    }\n  }\n\n  public register(): void {\n\n   this.service.post(ApiPaths.ALERT, BUILD_PAYLOAD_ALERT(this))\n                .subscribe((r) => {\n                  this.spinner.hide();\n                  this.msg.toast(TOAST_SUCCESSO(SAVE_SUCESS));\n                  this.alertFormGroup.reset();\n                });\n  }\n\n  public removeAlert(i): void {\n    this.alerts.removeAt(i);\n  }\n\n  ngOnInit(): void {\n\n    this.loadFormGroup();\n  }\n\n}\n","<div class=\"p-grid p-fluid\">\n  <div class=\"p-col-12 p-md-12\">\n    <div class=\"card\">\n      <form [formGroup]=\"this.alertFormGroup\">\n        <div>\n          <div>\n            <div style=\"padding: 0 !important;\" class=\"p-col-12 p-mb-6 p-lg-4 p-mb-lg-2\">\n              <h6>\n                Alerta:\n                <span name=\"name\">\n                  <small>\n                    {{this.alertFormGroup.value.title}}\n                  </small>\n                </span>\n              </h6>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <br>\n                <input name=\"name\" formControlName=\"title\" pInputText placeholder=\"Título\">\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <br>\n                <input type=\"text\" mask=\"00/00/0000\" formControlName=\"alertDay\" pInputText placeholder=\"Data do alerta\" />\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <br>\n                <textarea type=\"text\" formControlName=\"note\" pInputTextarea\n                  placeholder=\"Observação\">\n                  </textarea>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <br>\n                <p-multiSelect\n                  (onPanelShow)=\"onClick()\"\n                  placeholder=\"Selecionar perfis\"\n                  formControlName=\"notifys\"\n                  [options]=\"perfis\" >\n                </p-multiSelect>\n                <small> Serão notificados todos os associados aos perfis selecionados</small>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <br>\n                <input name=\"name\" formControlName=\"priorityName\" pInputText placeholder=\"Grau de prioridade\">\n              </div>\n              <div class=\"p-col-12 p-mb-1 p-lg-2 p-mb-lg-1\">\n                <br>\n                <p-colorPicker [showTransitionOptions]=\"'0ms'\" [hideTransitionOptions]=\"'0ms'\" formControlName=\"priorityColor\"></p-colorPicker>\n                <small> Selecionar cor de prioridade </small>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"p-grid p-formgrid\">\n          <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n            <button pButton label=\"salvar\"\n              [disabled]=\"!this.alertFormGroup.valid\" (click)=\"register()\" type=\"button\" class=\"p-mr-2 p-mb-2\">\n            </button>\n          </div>\n          <div *ngIf=\"this.loadApp\" class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n            <button pButton label=\"Continuar\" (click)=\"this.stepper.next()\" type=\"button\" class=\"p-mr-2 p-mb-2\">\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n    </div>\n    </div>\n","import { ValidateDate } from \"src/app/shared/utils/validateDate\";\n\nexport const BUILD_PAYLOAD_ALERT = function buildPayload($this) {\n\n  if($this.id){\n    $this.alertFormGroup.value.notifys = [...$this.alertFormGroup.value.notifys, $this.id]\n  }\n\n  if($this.vehicle){\n    $this.alertFormGroup.value.carId = $this.vehicle.id;\n    $this.alertFormGroup.value.vehicleRegistration = $this.vehicle.vehicleRegistration\n  }\n\n  let payload = {\n    ...$this.alertFormGroup.value,\n    byUser: {\n      id: $this.loginCookieStorage.get().id,\n      name: $this.loginCookieStorage.get().name,\n    }\n  };\n\n  payload.alertDay = ValidateDate.parseDate(payload.alertDay);\n\n  return payload;\n};\n","import { ImgService } from './img.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Input } from '@angular/core';\nimport { Spinner } from 'ngx-spinner/lib/ngx-spinner.enum';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ApiService } from 'src/app/core/services/api.service';\n\n@Component({\n  selector: 'app-img',\n  templateUrl: './img.component.html',\n  styleUrls: ['./img.component.scss']\n})\nexport class ImgComponent implements OnInit {\n\n  @Input() stepper;\n  @Input() apiPaths;\n  @Input() id;\n\n  constructor(public service: ImgService,\n              private spinner: NgxSpinnerService,\n              private apiService: ApiService,\n              ) { }\n\n  /* IMG */\n\n  public onSelectImg(event): void {\n    this.service.uploadedFiles = event.currentFiles;\n  }\n\n  public onClear(): void {\n    this.service.uploadedFiles = [];\n  }\n\n  public sendImg(stepper){\n    this.spinner.show();\n    this.apiService.update<void>(`${this.apiPaths}/${this.id}`, this.service.buildFormDatas())\n                .subscribe(() => {\n                  this.spinner.hide();\n                  stepper.next();\n                })\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h4>Anexar documentos</h4>\n<div>\n  <div>\n    <p-fileUpload name=\"demo[]\" (onSelect)=\"this.onSelectImg($event)\" (onClear)=\"this.onClear()\"\n      chooseLabel=\"Selecionar imagens\" chooseIcon=\"pi pi-images\" cancelLabel=\"Limpar\"\n      [showUploadButton]=\"false\" multiple=\"multiple\" accept=\"image/*\" maxFileSize=\"1000000\">\n    </p-fileUpload>\n  </div>\n</div>\n<br>\n<br>\n<div class=\"p-grid p-formgrid\">\n  <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n    <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n      class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n  </div>\n  <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n    <button pButton label=\"Continuar\" (click)=\"this.sendImg(stepper)\" class=\"p-button-success p-mr-2 p-mb-2\">\n    </button>\n  </div>\n  <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n    <button pButton label=\"Pular\" (click)=\"stepper.next()\" class=\"p-mr-2 p-mb-2\">\n    </button>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImgService {\n\n  public uploadedFiles = new Array<File>();\n\n  constructor() { }\n\n  public buildFormDatas()  {\n    const formData = new FormData();\n\n    for (let file of this.uploadedFiles) {\n      formData.append('files', file);\n    }\n\n    return formData;\n  }\n\n}\n","import { BUILD_WORD_KEY } from './../../../shared/utils/builWordKey';\n\nexport const BUILD_PAYLOAD_CUSTOMER = function ($this) {\n  let payload = {\n    ...$this.companyFormGroup.value,\n    byUser: {\n      id: $this.loginCookieStorage.get().id,\n      name: $this.loginCookieStorage.get().name,\n    },\n    companyData: buildCompanyData($this),\n\n    wordKey: BUILD_WORD_KEY({ ...$this.companyFormGroup.value }),\n  };\n\n  return payload;\n};\n\nfunction buildCompanyData($this) {\n  return $this.addressFormGroup.value.address.map((a) => {\n    let location = null;\n\n    if (a.latlng) {\n      const latlng: any[] = a.latlng.replace(' ', '').split(',');\n      location = { lat: latlng[0], lng: latlng[1] };\n    }\n    return {\n      address: {\n        postalCode: a.postalCode,\n        street: a.street,\n        number: a.number,\n        neighborhood: a.neighborhood,\n        complement: a.complement,\n        city: a.city,\n        state: a.state,\n        location: location,\n      },\n      contact: {\n        email: a.email,\n        phones: a.phones.map((result) => {\n          return result.phone;\n        }),\n      },\n    };\n  });\n}\n","import { LoginCookieStorage } from 'src/app/core/cookieStorage/loginCookieStorage';\nimport { BUILD_PAYLOAD_CUSTOMER } from './build_payload';\nimport { FormGroup, FormArray, FormBuilder, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { MsgService } from 'src/app/core/menssages/msg.service';\nimport { ApiService } from 'src/app/core/services/api.service';\nimport { CepService } from 'src/app/core/services/cep.service';\nimport { BreadcrumbService } from 'src/app/shared/config/app.breadcrumb.service';\nimport { DeviceType } from 'src/app/shared/utils/device-type';\nimport { DRIVER_TYPE_DEFAULTS, GENDERS, MARITAL_STATUS } from '../register-employee/register-employee/constants-employee';\nimport { Subscription } from 'rxjs';\nimport { MatStepper } from '@angular/material/stepper';\nimport { ValidateDate } from 'src/app/shared/utils/validateDate';\nimport { ValidateDoc } from 'src/app/shared/utils/validateDoc';\nimport { BUILD_WORD_KEY } from 'src/app/shared/utils/builWordKey';\nimport { TOAST_ERROR, TOAST_SUCCESSO } from 'src/app/core/menssages/toastEvent';\nimport { CrudRegisterDriverStorage } from 'src/app/shared/storage/crudStorageDriverRegister';\nimport { ApiPaths } from 'src/app/shared/enuns/api-paths.enum';\nimport { SAVE_SUCESS } from 'src/app/core/menssages/menssagens';\nimport { ADD_DETAIL, FORM_BUILDER_DETAIL, REMOVE_DETAIL } from 'src/app/shared/FormBuilderControls/controls_detail_form';\nimport { SimpleData } from 'src/app/shared/model/simple_data';\n\n@Component({\n  selector: 'app-register-customer',\n  templateUrl: './register-customer.component.html',\n  styleUrls: ['./register-customer.component.scss']\n})\nexport class RegisterCustomerComponent implements OnInit {\n\n  public companyFormGroup: FormGroup;\n  public detailsFormGroup: FormGroup;\n  public contactFormGroup: FormGroup;\n  public addressFormGroup: FormGroup;\n\n  public apiPathFile: ApiPaths.CUSTOMER_FILE;\n\n  public addDetail = ADD_DETAIL;\n  public removeDetail = REMOVE_DETAIL;\n\n  private subscription = new Subscription();\n  public id: string;\n\n  public phones: FormArray;\n  public details: FormArray;\n  public address: FormArray;\n\n  public mobile =  DeviceType.mobileType();\n\n  public alerts: FormArray;\n  public alertSh: boolean;\n\n  public selectedMtStatus;\n  public isLinear = false;\n  public stepper: MatStepper;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private loginCookieStorage: LoginCookieStorage,\n    private msg: MsgService,\n    private spinner: NgxSpinnerService,\n    private service: ApiService,\n    private router: Router,\n    private cep: CepService,\n    private breadcrumbService: BreadcrumbService\n  ) {\n    this.breadcrumbService.setItems([{ label: 'Registrar Cliente' }]);\n  }\n\n  private loadFormGroup(): void {\n    this.companyFormGroup = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      fantasyName: ['', [Validators.required]],\n      taxId: ['', [ValidateDoc.validateCNPJ]],\n      stateRegistration: ['', [Validators.required]],\n      municipalRegistration: ['', [Validators.required]]\n     }\n    );\n\n    this.addressFormGroup = this.formBuilder.group({\n      address: this.formBuilder.array([ this.createFormAddress() ]),\n     }\n   );\n\n    this.detailsFormGroup = FORM_BUILDER_DETAIL(this)\n  }\n\n  public createFormPhone(): FormGroup {\n    return this.formBuilder.group({\n      phone: ['', [Validators.required]]\n    });\n  }\n\n  public addPhone(i): void {\n    this.phones = this.addressFormGroup.get('address')['controls'][i].get('phones')['controls'] as FormArray;\n    this.phones.push(this.createFormPhone());\n  }\n\n  public removePhone(i): void {\n    this.phones.removeAt(i);\n  }\n\n  public createFormAddress(): FormGroup {\n    return this.formBuilder.group({\n      postalCode: ['', [Validators.required]],\n      street: ['',  [Validators.required]],\n      number: ['', [Validators.required]],\n      neighborhood: ['', [Validators.required]],\n      complement: [''],\n      city: ['', [Validators.required]],\n      state: ['', [Validators.required]],\n      phones: this.formBuilder.array([ this.createFormPhone() ]),\n      email: ['']\n     }\n    );\n  }\n\n  public addPhoneAddress(): void {\n    this.phones = this.addressFormGroup.get('address')['controls'].get('phones')['controls'] as FormArray;\n    this.phones.push(this.createFormPhone());\n  }\n\n  public addPAddress(): void {\n    this.address = this.addressFormGroup.get('address') as FormArray;\n    this.address.push(this.createFormAddress());\n  }\n\n  public removeAddress(i): void {\n    this.address.removeAt(i);\n  }\n\n  public cancelAlert() {\n    this.alertSh = false;\n  }\n\n  public reset(stepper){\n    this.loadFormGroup();\n     stepper.reset();\n  }\n\n  public keyUpcep( cep, index ): void{\n      if( cep.length == 9 ){\n        this.spinner.show();\n        this.cep.get( cep ).subscribe((r) => {\n          if(!r.cep){ this.msg.toast(TOAST_ERROR('CEP não encontrado!')); }\n              this.spinner.hide();\n              this.addressFormGroup.get('address')['controls'][index].get('city').setValue(r.city);\n              this.addressFormGroup.get('address')['controls'][index].get('neighborhood').setValue(r.neighborhood);\n              this.addressFormGroup.get('address')['controls'][index].get('state').setValue(r.state);\n              this.addressFormGroup.get('address')['controls'][index].get('street').setValue(r.street);\n        });\n      }\n  }\n\n  public register(stepper): void{\n\n    this.spinner.show();\n    const sub = this.service\n                    .post<SimpleData>(`${ApiPaths.CUSTOMER}`, BUILD_PAYLOAD_CUSTOMER(this))\n                    .subscribe((r) => {\n                       this.id = r.id;\n          stepper.next()\n        this.spinner.hide();\n        this.msg.toast(TOAST_SUCCESSO(SAVE_SUCESS));\n      });\n    this.subscription.add(sub);\n    return\n  }\n\n  ngOnInit(): void {\n    this.loadFormGroup();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<div *ngIf=\"!mobile\" class=\"p-grid p-fluid\">\n  <div class=\"p-col-12 p-md-12\">\n    <div class=\"card\">\n      <mat-horizontal-stepper [linear]=\"true\" #stepper>\n        <mat-step>\n          <h4>Dados Iniciais</h4>\n          <form [formGroup]=\"this.companyFormGroup\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input mask=\"00.000.000/0000-00\" formControlName=\"taxId\" type=\"text\" pInputText placeholder=\"CNPJ*\">\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input formControlName=\"name\" [ngStyle]=\"{'text-transform' : 'capitalize'}\" type=\"text\" pInputText\n                  placeholder=\"Razão social*\">\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input formControlName=\"fantasyName\" [ngStyle]=\"{'text-transform' : 'capitalize'}\" type=\"text\"\n                  pInputText placeholder=\"Nome fantasia*\">\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input formControlName=\"stateRegistration\" [ngStyle]=\"{'text-transform' : 'capitalize'}\" type=\"text\"\n                  pInputText placeholder=\"Inscrição estadual*\">\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input formControlName=\"municipalRegistration\" [ngStyle]=\"{'text-transform' : 'capitalize'}\" type=\"text\"\n                  pInputText placeholder=\"Inscrição municipal*\">\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Continuar\" (click)=\"this.stepper.next()\"\n                  [disabled]=\"!this.companyFormGroup.valid\" class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Endereço</h4>\n          <form [formGroup]=\"this.addressFormGroup\">\n            <div>\n              <div formArrayName=\"address\"\n                *ngFor=\"let item of this.addressFormGroup.get('address')['controls']; let i = index;\">\n                <div style=\"padding: 0 !important;\" class=\"p-col-12 p-mb-6 p-lg-4 p-mb-lg-2\">\n                  <i class=\"pi pi-times-circle\" style=\"cursor: pointer; font-size: 1rem\"\n                    *ngIf=\"this.addressFormGroup.get('address')['controls'].length > 1\"\n                    (click)=\"this.removeAddress(i)\"></i>\n                </div>\n                <div class=\"p-grid p-formgrid\" [formGroupName]=\"i\">\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <input (keyup)=\"this.keyUpcep($event.target.value, i)\" formControlName=\"postalCode\" mask=\"00000-000\"\n                      type=\"text\" pInputText placeholder=\"CEP*\">\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <input type=\"text\" formControlName=\"street\" pInputText placeholder=\"Rua*\" />\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <input type=\"text\" pKeyFilter=\"int\" formControlName=\"number\" pInputText placeholder=\"Número*\" />\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <input type=\"text\" formControlName=\"complement\" pInputText placeholder=\"Complemento\" />\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <input type=\"text\" formControlName=\"neighborhood\" pInputText placeholder=\"Bairro*\" />\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <input type=\"text\" formControlName=\"city\" pInputText placeholder=\"Cidade*\" />\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <input formControlName=\"state\" type=\"text\" pInputText placeholder=\"UF*\">\n                  </div>\n                  <div class=\"p-col-12 p-mb-12 p-lg-12 p-mb-lg-12\">\n                  <strong>Contatos</strong>\n                  <br>\n                  <br>\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br *ngIf=\"this.addressFormGroup.get('address')['controls'][i].get('phones')['controls'].length > 1\">\n                    <input formControlName=\"email\" type=\"text\" pInputText placeholder=\"E-mail\">\n                  </div>\n                  <div formArrayName=\"phones\"\n                    *ngFor=\"let item of this.addressFormGroup.get('address')['controls'][i].get('phones')['controls']; let iph = index;\"\n                    class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <div [formGroupName]=\"iph\">\n                      <i class=\"pi pi-times-circle\" style=\"cursor: pointer; font-size: 1rem\"\n                        *ngIf=\"this.addressFormGroup.get('address')['controls'][i].get('phones')['controls'].length > 1\"\n                        (click)=\"this.removePhone(i)\"></i>\n                      <input formControlName=\"phone\" mask=\"(00) 00000-0000||(00) 0000-0000\" type=\"phone\" pInputText\n                        placeholder=\"Telefone*\">\n                    </div>\n                  </div>\n                </div>\n                <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                  <i title=\"Adicionar novo contato\" class=\"material-icons\" style=\"cursor: pointer; font-size: 2rem;\"\n                    (click)=\"addPhone(i)\">smartphone <small>+</small></i>\n                </div>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Continuar\" (click)=\"this.stepper.next()\"\n                  [disabled]=\"!this.addressFormGroup.valid\" type=\"button\" class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-0\">\n                <i title=\"Adicionar detalhes e informaçoes\" class=\"material-icons\"\n                  style=\"cursor: pointer; font-size: 1.5rem;\" (click)=\"this.addPAddress()\"> info <small>+</small></i>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Detalhes e Informações</h4>\n          <form [formGroup]=\"this.detailsFormGroup\">\n            <div>\n              <div formArrayName=\"details\"\n                *ngFor=\"let item of this.detailsFormGroup.get('details')['controls']; let i = index;\">\n                <div style=\"padding: 0 !important;\" class=\"p-col-12 p-mb-6 p-lg-4 p-mb-lg-2\">\n                  <h6>\n                    <i class=\"pi pi-times-circle\" style=\"cursor: pointer; font-size: 1rem\"\n                      *ngIf=\"this.detailsFormGroup.get('details')['controls'].length > 1\"\n                      (click)=\"this.removeDetail(this, i)\"></i>\n                    Título:\n                    <span name=\"name\">\n                      <small>\n                        {{item.value.title}}\n                      </small>\n                    </span>\n                  </h6>\n                </div>\n                <div class=\"p-grid p-formgrid\" [formGroupName]=\"i\">\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <input name=\"name\" formControlName=\"title\" pInputText placeholder=\"Titulo*\">\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <textarea type=\"text\" formControlName=\"note\" pInputTextarea placeholder=\"Descrição*\">\n                  </textarea>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Continuar\" (click)=\"this.stepper.next()\"\n                  [disabled]=\"!this.detailsFormGroup.valid\" type=\"button\" class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-0\">\n                <i title=\"Adicionar detalhes e informaçoes\" class=\"material-icons\"\n                  style=\"cursor: pointer; font-size: 1.5rem;\" (click)=\"this.addDetail(this)\"> info <small>+</small></i>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Registrar</h4>\n          <br>\n          <form>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-12 p-lg-6 p-mb-lg-12\">\n                <h6>Continuar cadastro do cliente\n                  <span name=\"name\">\n                    {{this.companyFormGroup.value.fantasyName}}\n                  </span>.\n\n                </h6>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-4\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"voltar\" type=\"button\"\n                  class=\"p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-4\">\n                <p-button label=\"Continuar\" (click)=\"this.register(stepper)\" class=\"p-mr-2 p-mb-2\"></p-button>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Alertas</h4>\n          <div *ngIf=\"!this.alertSh\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <h5>Deseja adiconar alertas?</h5>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Sim\" (click)=\"this.alertSh = true;\" type=\"button\"\n                  class=\"p-button-success p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-2 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Pular\" (click)=\"this.stepper.next()\" type=\"button\"\n                  class=\"p-mr-2 p-mb-2\"></button>\n              </div>\n            </div>\n          </div>\n          <div *ngIf=\"this.alertSh\">\n            <app-alert [loadApp]=\"true\" [id]=\"this.id\" [stepper]=\"stepper\"></app-alert>\n          </div>\n        </mat-step>\n        <mat-step>\n          <app-img [stepper]=\"stepper\" [id]=\"this.id\" [apiPaths]=\"this.apiPathFile\"></app-img>\n        </mat-step>\n        <mat-step>\n          <h4>\n            <span style=\"text-transform: capitalize; font-weight: 400;\">\n              {{this.companyFormGroup.value.fantasyName}}\n            </span>\n            Cadastrado com sucesso! <i class=\"pi pi-check\" style=\"color: rgb(0, 180, 0); font-size: 1.5rem\"></i>\n          </h4>\n          <br>\n          <form [ngStyle]=\"{'text-align' : 'center'}\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <h6>Cadastrar novo cliente</h6>\n                <div class=\"card\">\n                  <button (click)=\"reset(stepper)\" pButton label=\"Voltar ao início\" type=\"submit\"\n                    class=\"p-mr-2 p-mb-2 p-button-secondary\"></button>\n                </div>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <h6>Visualizar Clientes</h6>\n                <div class=\"card\">\n                  <p-button (click)=\"this.router.navigate(['/query/type/customer'])\" label=\"Clientes\"\n                    class=\"p-mr-2 p-mb-2\"></p-button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n      </mat-horizontal-stepper>\n      <div class=\"p-grid p-formgrid\">\n        <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-0\">\n          <small>Campos obrigatórios <span style=\"color: red;\">*</span></small>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { ValidateDate } from 'src/app/shared/utils/validateDate';\nexport const BUILD_PAYLOAD_EMPLOYEE_DRIVER = function buildPayload<Driver>(component) {\n\n  handleDate(component);\n  handlePhone(component);\n\n  return {\n    driversLicense: {\n      ...component.cnhFormGroup.value\n    },\n    associedVehicles: [],\n    contactReference: component.driverDetailsFormGroup.value.contactReferences,\n    thirdOrAggregate: component.driverDetailsFormGroup.value.thirdOrAggregate,\n    courses: component.coursesFormGroup.value.courses,\n    authorization: component.authorizationFormGroup.value.authorizations,\n    firstTravel: component.driverDetailsFormGroup.value.firstTravel,\n  }\n}\n\nfunction handlePhone(component){\n      component.driverDetailsFormGroup\n              .value\n              .contactReferences\n              .forEach((r) => {\n              r.contacts = [{\n                               phones: r.contacts.map((p: any) => {\n                                         return p.phone\n                     }),\n                                email: ''\n            }];\n          });\n}\n\nfunction handleDate(component){\n  component.coursesFormGroup.value\n                            .courses\n                            .forEach((r) => {\n                              r.validity = ValidateDate.parseDate(r.validity);\n                            });\n\n  component.authorizationFormGroup.value\n                                  .authorizations\n                                  .forEach((r) => {\n                                    r.validity = ValidateDate.parseDate(r.validity);\n                                  });\n\n  component.cnhFormGroup.value.dateIssue = ValidateDate.parseDate(component.cnhFormGroup.value.dateIssue);\n  component.cnhFormGroup.value.firstCnh = ValidateDate.parseDate(component.cnhFormGroup.value.firstCnh);\n  component.cnhFormGroup.value.validity = ValidateDate.parseDate(component.cnhFormGroup.value.validity);\n  component.driverDetailsFormGroup.value.firstTravel = ValidateDate.parseDate(component.driverDetailsFormGroup.value.firstTravel);\n\n}\n","import { Driver } from '../../../../shared/model/driver_model';\nimport { BUILD_PAYLOAD_EMPLOYEE_DRIVER } from './build_payload';\nimport { CrudRegisterDriverStorage } from '../../../../shared/storage/crudStorageDriverRegister';\nimport { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatStepper } from '@angular/material/stepper';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Subscription } from 'rxjs';\nimport { MsgService } from 'src/app/core/menssages/msg.service';\nimport { ApiService } from 'src/app/core/services/api.service';\nimport { BreadcrumbService } from 'src/app/shared/config/app.breadcrumb.service';\nimport { DeviceType } from 'src/app/shared/utils/device-type';\nimport { TOAST_SUCCESSO } from 'src/app/core/menssages/toastEvent';\nimport { ApiPaths } from 'src/app/shared/enuns/api-paths.enum';\nimport { BUILD_PAYLOAD_EMPLOYEE } from '../register-employee/build_payload';\nimport { SAVE_SUCESS } from 'src/app/core/menssages/menssagens';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register-driver',\n  templateUrl: './register-driver.component.html',\n  styleUrls: ['./register-driver.component.scss'],\n})\nexport class RegisterDriverComponent implements OnInit {\n\n  public cnhFormGroup: FormGroup;\n  public driverDetailsFormGroup: FormGroup;\n  public contactFormGroup: FormGroup;\n  public addressFormGroup: FormGroup;\n  public docFormGroup: FormGroup;\n  public coursesFormGroup: FormGroup;\n  public authorizationFormGroup: FormGroup;\n  public alertFormGroup: FormGroup;\n\n  private subscription = new Subscription();\n  public selectedMtStatus;\n  public isLinear = false;\n  public stepper: MatStepper;\n\n  public contactReferences: FormArray;\n  public contacts: FormArray;\n  public couses: FormArray;\n  public authorizations: FormArray;\n  public alerts: FormArray;\n\n  public storage = CrudRegisterDriverStorage.get();\n  public apiPathFile = ApiPaths.EMPLOYEE_FILES;\n  public addCours: boolean;\n  public addAuth: boolean;\n  public alertSh: boolean;\n  public uploadedFiles = new Array<any>();\n  public formDataList = Array<FormData>();\n  public mobile = DeviceType.mobileType();\n\n\n  public categories = [{label: 'ACC', value: 'ACC'},\n                       {label: 'A', value: 'A'},\n                       {label: 'B', value: 'B'},\n                       {label: 'C', value: 'C'},\n                       {label: 'D', value: 'D'},\n                       {label: 'E', value: 'E'}]\n\n\n  public options = [ {label: 'Terceiro', value: 'Terceiro'},\n                     {label: 'Agregado', value: 'Agregado'} ];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public router: Router,\n    private msg: MsgService,\n    private spinner: NgxSpinnerService,\n    private service: ApiService,\n    private breadcrumbService: BreadcrumbService\n  ) {\n    this.breadcrumbService.setItems([{ label: 'Registrar ' + CrudRegisterDriverStorage.getType() }]);\n  }\n\n  private loadFormGroup(): void {\n\n    this.cnhFormGroup = this.formBuilder.group({\n      number: ['', [Validators.required]],\n      categorys: ['', [Validators.required]],\n      validity: ['', [Validators.required]],\n      firstCnh: ['', [Validators.required]],\n      dateIssue: ['', [Validators.required]],\n      mirrorNumber: ['', [Validators.required]],\n      NRenach: ['', [Validators.required]],\n      emittingOrgan: ['', [Validators.required]],\n      securityCode: ['', [Validators.required]],\n      state: ['', [Validators.required]],\n    });\n\n    this.driverDetailsFormGroup = this.formBuilder.group({\n/*       note: [''],\n */      firstTravel: ['', [Validators.required]],\n      thirdOrAggregate: ['', [Validators.required]],\n      contactReferences: this.formBuilder.array([ this.createFormReferences() ]),\n    });\n\n    this.coursesFormGroup = this.formBuilder.group({\n      courses: this.formBuilder.array([ this.createFormCurses() ]),\n    });\n\n    this.authorizationFormGroup = this.formBuilder.group({\n      authorizations: this.formBuilder.array([ this.createAuthorizations() ]),\n    });\n\n    this.alertFormGroup = this.formBuilder.group({\n      alerts: this.formBuilder.array([ this.createAlerts() ]),\n    });\n  }\n\n  /* References */\n  public createFormReferences(): FormGroup {\n    return this.formBuilder.group({\n      relationshipKinship: ['', [Validators.required]],\n      name: ['', [Validators.required]],\n      contacts: this.formBuilder.array([ this.createFormPhones() ])\n    });\n  }\n\n  public addReferences(): void {\n    this.contactReferences = this.driverDetailsFormGroup.get('contactReferences') as FormArray;\n    this.contactReferences.push(this.createFormReferences());\n  }\n\n  public removeReferences(i): void {\n    this.contactReferences.removeAt(i);\n  }\n\n  /* Phones */\n  public createFormPhones(): FormGroup {\n    return this.formBuilder.group({\n      phone: ['', [Validators.required]],\n    });\n  }\n\n  public addPhones(i): void {\n    this.contacts = this.driverDetailsFormGroup.get('contactReferences')['controls'][i].get('contacts') as FormArray;\n    this.contacts.push(this.createFormPhones());\n  }\n\n  public removePhone(i): void {\n    this.contacts.removeAt(i);\n  }\n\n   /* Curses */\n\n   public createFormCurses(): FormGroup {\n    return this.formBuilder.group({\n      type: ['', [Validators.required]],\n      decription: ['', [Validators.required]],\n      validity: ['']\n    });\n  }\n\n  public addCurses(): void {\n    this.couses = this.coursesFormGroup.get('courses') as FormArray;\n    this.couses.push(this.createFormCurses());\n  }\n\n  public removeCurses(i): void {\n    this.couses.removeAt(i);\n  }\n\n    /* Authorizations */\n\n    public createAuthorizations(): FormGroup {\n      return this.formBuilder.group({\n        type: ['', [Validators.required]],\n        decription: ['', [Validators.required]],\n        number: ['', [Validators.required]],\n        validity: ['', [Validators.required]]\n      });\n    }\n\n    public addAuthorizations(): void {\n      this.authorizations = this.authorizationFormGroup.get('authorizations') as FormArray;\n      this.authorizations.push(this.createAuthorizations());\n    }\n\n    public removeAuthorizations(i): void {\n      this.authorizations.removeAt(i);\n    }\n\n    public cancelAuthorization(){\n      this.addAuth = false;\n      this.authorizationFormGroup.reset();\n    }\n\n    /* Alerts */\n\n    public createAlerts(): FormGroup {\n      return this.formBuilder.group({\n        title: ['', [Validators.required]],\n        date: ['', [Validators.required]],\n        note: ['', [Validators.required]],\n        priorityColor: ['', [Validators.required]],\n        namePriority: ['', [Validators.required]],\n        perfil: [''],\n        usersIds: []\n      });\n    }\n\n    public addAlert(): void {\n      this.alerts = this.alertFormGroup.get('alerts') as FormArray;\n      this.alerts.push(this.createAlerts());\n    }\n\n    public removeAlert(i): void {\n      this.alerts.removeAt(i);\n    }\n\n    public cancelAlert(){\n      this.alertSh = false;\n      this.alertFormGroup.reset();\n    }\n\n    /* END */\n\n    /* IMG */\n\n    public onSelectImg(event): void{\n      this.uploadedFiles = event.currentFiles;\n    }\n\n    public onClear(): void{\n    this.uploadedFiles =  [];\n    }\n\n    public buildFormDatas(stepper):void{\n\n      const fd = new Array<FormData>()\n\n     for(let file of this.uploadedFiles){\n       const formData = new FormData()\n       formData.append('file', file)\n       fd.push(formData);\n     }\n\n     this.formDataList = fd;\n     console.log(this.formDataList );\n      stepper.next();\n    }\n\n  /* END */\n\n    public cancelCourse(){\n      this.addCours = false;\n      this.coursesFormGroup.reset();\n    }\n\n  public reset() {\n    this.loadFormGroup();\n  //  stepper.reset();\n  }\n\n  public register(stepper?): void {\n\n    this.spinner.show();\n    const sub = this.service\n                    .updateAll<void>(`${ApiPaths.DRIVER}/${CrudRegisterDriverStorage.get()}`,\n                                       BUILD_PAYLOAD_EMPLOYEE_DRIVER<Driver>(this))\n                    .subscribe(() => {\n\n                      stepper.next()\n\n                      this.spinner.hide();\n                      this.msg.toast(TOAST_SUCCESSO(SAVE_SUCESS));\n                    });\n    this.subscription.add(sub);\n  }\n\n  ngOnInit(): void {\n    this.loadFormGroup();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<div class=\"p-grid p-fluid\">\n  <div class=\"p-col-12 p-md-12\">\n    <div class=\"card\">\n      <mat-horizontal-stepper [linear]=\"true\" #stepper>\n        <mat-step>\n          <h4>Habilitação (CNH)</h4>\n          <form [formGroup]=\"this.cnhFormGroup\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input pKeyFilter=\"int\" formControlName=\"number\" type=\"text\" pInputText placeholder=\"Número*\">\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input pKeyFilter=\"int\" formControlName=\"mirrorNumber\"\n                 type=\"text\" pInputText placeholder=\"Número do espelho*\">\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <p-multiSelect\n                 [filter]=\"!this.mobile\"\n                 selectedItemsLabel=\"{0} categorias selecionadas\"\n                 [options]=\"this.categories\" formControlName=\"categorys\" placeholder=\"Categorias*\" ></p-multiSelect>\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input [dropSpecialCharacters]=\"false\" [hiddenInput]=\"true\" formControlName=\"validity\" mask=\"00/00/0000\"\n                  type=\"text\" pInputText placeholder=\"Data de validade*\">\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input [dropSpecialCharacters]=\"false\" [hiddenInput]=\"true\" formControlName=\"firstCnh\" mask=\"00/00/0000\"\n                  type=\"text\" pInputText placeholder=\"Data da primeira Habilitação*\">\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input [dropSpecialCharacters]=\"false\" [hiddenInput]=\"true\" formControlName=\"dateIssue\"\n                  mask=\"00/00/0000\" type=\"text\" pInputText placeholder=\"Data de emissão*\">\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input formControlName=\"NRenach\"\n                  type=\"text\" pInputText placeholder=\"Nº RENACH*\">\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input formControlName=\"emittingOrgan\"\n                  style=\"text-transform: uppercase;\" type=\"text\" pInputText placeholder=\"Orgão emissor*\">\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input formControlName=\"securityCode\" type=\"text\" pInputText placeholder=\"Código de segurança*\">\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input maxlength=\"2\" style=\"text-transform: uppercase;\" formControlName=\"state\"\n                  type=\"text\" pInputText placeholder=\"UF*\">\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Continuar\" (click)=\"this.stepper.next()\" [disabled]=\"!this.cnhFormGroup.valid\"\n                  class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Detalhes e Referências</h4>\n          <form [formGroup]=\"this.driverDetailsFormGroup\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-6 p-mb-lg-4\">\n                <input [dropSpecialCharacters]=\"false\" [hiddenInput]=\"true\" formControlName=\"firstTravel\"\n                  mask=\"00/00/0000\" type=\"text\" pInputText placeholder=\"Data primeira viagem\">\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-6 p-mb-lg-4\">\n                <p-dropdown [options]=\"options\" formControlName=\"thirdOrAggregate\" placeholder=\"Terceiro ou agregado*\">\n                </p-dropdown>\n              </div>\n            </div>\n            <div>\n              <div formArrayName=\"contactReferences\"\n                *ngFor=\"let item of this.driverDetailsFormGroup.get('contactReferences')['controls']; let idx = index;\">\n                <div class=\"p-col-12 p-mb-6 p-lg-4 p-mb-lg-2\">\n                  <h6>\n                    <i class=\"pi pi-times-circle\" style=\"cursor: pointer; font-size: 1rem\"\n                      *ngIf=\"this.driverDetailsFormGroup.get('contactReferences')['controls'].length > 1\" type=\"button\"\n                      (click)=\"this.removeReferences(idx)\"></i>\n                    Referencia:\n                    <span name=\"name\">\n                      <small>\n                        {{item.value.name}}\n                      </small>\n                    </span>\n                  </h6>\n                </div>\n                <div class=\"p-grid p-formgrid\" [formGroupName]=\"idx\">\n                  <div class=\"p-col-12 p-mb-4 p-lg-8 p-mb-lg-4\">\n                    <input name=\"name\" formControlName=\"name\" type=\"text\" pInputText placeholder=\"Nome*\">\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <input formControlName=\"relationshipKinship\" type=\"text\" pInputText\n                      placeholder=\"Relação/Parentesco*\">\n                  </div>\n                  <div formArrayName=\"contacts\" *ngFor=\"let item of this.driverDetailsFormGroup.get('contactReferences')['controls'][idx].get('contacts')['controls'];\n                let i = index;\" class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <div [formGroupName]=\"i\">\n                      <i class=\"pi pi-times-circle\" style=\"cursor: pointer; font-size: 1rem\"\n                        *ngIf=\"this.driverDetailsFormGroup.get('contactReferences')['controls'][idx].get('contacts')['controls'].length > 1\"\n                        (click)=\"this.removePhone(i)\"></i>\n                      <input formControlName=\"phone\" mask=\"(00) 00000-0000||(00) 0000-0000\" type=\"phone\" pInputText\n                        placeholder=\"Telefone*\">\n                    </div>\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <i title=\"Adicionar telefones\" class=\"material-icons\"\n                      style=\"cursor: pointer; font-size: 1.5rem;\" (click)=\"addPhones(idx)\">smartphone</i>+\n                  </div>\n                </div>\n              </div>\n            </div>\n          <!--   <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-6 p-mb-lg-4\">\n                <textarea formControlName=\"note\" pInputTextarea placeholder=\"Observações\">\n               </textarea>\n              </div>\n            </div> -->\n            <br>\n            <br>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Continuar\" (click)=\"this.stepper.next()\"\n                  [disabled]=\"!this.driverDetailsFormGroup.valid\" class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-0\">\n                <i title=\"Adicionar Referencia/parentesco\" class=\"material-icons\"\n                  style=\"cursor: pointer; font-size: 2.4rem;\" (click)=\"addReferences()\">people_alt</i>+\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Cursos</h4>\n          <div *ngIf=\"!this.addCours\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n              <h5>Deseja adiconar cursos <!-- do(a)\n                <span style=\"text-transform: capitalize;\">\n                  {{ storage.name }}?\n                </span> -->\n              </h5>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Sim\" (click)=\"this.addCours = true;\" type=\"button\"\n                  class=\"p-button-success p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-2 p-lg-2 p-mb-lg-0\">\n                <button  pButton label=\"Pular\" (click)=\"this.stepper.next()\" type=\"button\"\n                  class=\"p-mr-2 p-mb-2\"></button>\n              </div>\n            </div>\n          </div>\n          <form *ngIf=\"this.addCours\" [formGroup]=\"this.coursesFormGroup\">\n            <div>\n              <div formArrayName=\"courses\"\n                *ngFor=\"let item of this.coursesFormGroup.get('courses')['controls']; let i = index;\">\n                <div style=\"padding: 0 !important;\" class=\"p-col-12 p-mb-6 p-lg-4 p-mb-lg-2\">\n                  <h6>\n                    <i class=\"pi pi-times-circle\" style=\"cursor: pointer; font-size: 1rem\"\n                    *ngIf=\"this.coursesFormGroup.get('courses')['controls'].length > 1\"\n                    (click)=\"this.removeCurses(i)\"></i>\n                    Curso:\n                    <span name=\"name\">\n                      <small>\n                        {{item.value.type}}\n                      </small>\n                    </span>\n                  </h6>\n                </div>\n                <div class=\"p-grid p-formgrid\" [formGroupName]=\"i\">\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <input name=\"name\" formControlName=\"type\" pInputText placeholder=\"Curso\">\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <input type=\"text\" formControlName=\"decription\" pInputText placeholder=\"Descrição\" />\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <input type=\"text\" [dropSpecialCharacters]=\"false\"  formControlName=\"validity\" mask=\"00/00/0000\" pInputText\n                      placeholder=\"Data de validade\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Cancelar\" (click)=\"cancelCourse()\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Continuar\" (click)=\"this.stepper.next()\"\n                  [disabled]=\"!this.coursesFormGroup.valid\" type=\"button\" class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-0\">\n                <i title=\"Adicionar cursos\" class=\"material-icons\" style=\"cursor: pointer; font-size: 2rem;\"\n                  (click)=\"addCurses()\">lock_open</i>+\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Atorizações</h4>\n          <div *ngIf=\"!this.addAuth\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n              <h5>Deseja adiconar as autorizações do(a)\n                <span style=\"text-transform: capitalize;\">\n                  {{ storage.name }}?\n                </span>\n              </h5>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Sim\" (click)=\"this.addAuth = true;\" type=\"button\"\n                  class=\"p-button-success p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-2 p-lg-2 p-mb-lg-0\">\n                <button  pButton label=\"Pular\" (click)=\"this.stepper.next()\" type=\"button\"\n                  class=\"p-mr-2 p-mb-2\"></button>\n              </div>\n            </div>\n          </div>\n          <form *ngIf=\"this.addAuth\" [formGroup]=\"this.authorizationFormGroup\">\n            <div>\n              <div formArrayName=\"authorizations\"\n                *ngFor=\"let item of this.authorizationFormGroup.get('authorizations')['controls']; let i = index;\">\n                <div style=\"padding: 0 !important;\" class=\"p-col-12 p-mb-6 p-lg-4 p-mb-lg-2\">\n                  <h6>\n                    <i class=\"pi pi-times-circle\" style=\"cursor: pointer; font-size: 1rem\"\n                    *ngIf=\"this.authorizationFormGroup.get('authorizations')['controls'].length > 1\"\n                    (click)=\"this.removeAuthorizations(i)\"></i>\n                    Autorização:\n                    <span name=\"name\">\n                      <small>\n                        {{item.value.type}}\n                      </small>\n                    </span>\n                  </h6>\n                </div>\n                <div class=\"p-grid p-formgrid\" [formGroupName]=\"i\">\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <input name=\"name\" formControlName=\"type\" pInputText placeholder=\"Tipo de autorização\">\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <input type=\"text\" formControlName=\"number\" pInputText placeholder=\"Número\" />\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <input type=\"text\" [dropSpecialCharacters]=\"false\"  formControlName=\"validity\" mask=\"00/00/0000\" pInputText\n                      placeholder=\"Data de validade\" />\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <input type=\"text\" formControlName=\"decription\" pInputText placeholder=\"Descrição\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Cancelar\" (click)=\"cancelAuthorization()\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Continuar\" (click)=\"this.stepper.next()\"\n                  [disabled]=\"!this.authorizationFormGroup.valid\" type=\"button\" class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-0\">\n                <i title=\"Adicionar nova autorização\" class=\"material-icons\" style=\"cursor: pointer; font-size: 2rem;\"\n                  (click)=\"addAuthorizations()\">book</i>+\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Registrar</h4>\n          <br>\n          <form [ngStyle]=\"{'text-align' : 'center'}\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-12 p-lg-6 p-mb-lg-12\">\n                <h6>Concluir cadastro do(a) motorista! </h6>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-4\">\n                <p-button label=\"Continuar\" (click)=\"this.register(stepper)\" class=\"p-mr-2 p-mb-2\"></p-button>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <app-img [stepper]=\"stepper\" [id]=\"this.storage\" [apiPaths]=\"this.apiPathFile\"></app-img>\n        </mat-step>\n        <mat-step>\n          <h4>Alertas</h4>\n          <div *ngIf=\"!this.alertSh\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <h5>Deseja adiconar alertas?</h5>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Sim\" (click)=\"this.alertSh = true;\" type=\"button\"\n                  class=\"p-button-success p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-2 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Pular\" (click)=\"this.stepper.next()\" type=\"button\"\n                  class=\"p-mr-2 p-mb-2\"></button>\n              </div>\n            </div>\n          </div>\n          <div *ngIf=\"this.alertSh\">\n            <app-alert [loadApp]=\"true\" [id]=\"this.id\" [stepper]=\"stepper\" ></app-alert>\n          </div>\n        </mat-step>\n        <mat-step>\n          <h4>\n          <span style=\"text-transform: capitalize; font-weight: 400;\">\n            {{this.storage.name}}\n          </span>\n          Cadastrado(a) com sucesso! <i class=\"pi pi-check\" style=\"color: rgb(0, 180, 0); font-size: 1.5rem\"></i> </h4>\n          <br>\n          <form [ngStyle]=\"{'text-align' : 'center'}\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <h6>Cadastrar novo colaborador(a)</h6>\n                <div class=\"card\">\n                  <button routerLink=\"/register/employee\" pButton label=\"Voltar ao início\" type=\"button\" class=\"p-mr-2 p-mb-2 p-button-secondary\"></button>\n                </div>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <h6>Visualizar Colaboradores</h6>\n                <div class=\"card\">\n                  <p-button (click)=\"this.router.navigate(['/query/type/employee'])\" label=\"Colaboradores\" class=\"p-mr-2 p-mb-2\"></p-button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n      </mat-horizontal-stepper>\n      <div class=\"p-grid p-formgrid\">\n        <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-0\">\n          <small>Campos obrigatórios <span style=\"color: red;\">*</span></small>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { BUILD_WORD_KEY } from '../../../../shared/utils/builWordKey';\nimport { ValidateDate } from '../../../../shared/utils/validateDate';\n\nexport const BUILD_PAYLOAD_EMPLOYEE = function buildPayload($this) {\n  let payload = {\n    ...$this.personalDataFormGroup.value,\n    rg: $this.docFormGroup.value,\n    type: $this.professionalDataFormGroup.value.type,\n    perfil: $this.perfil,\n    contact: {\n      email: $this.contactFormGroup.value.email,\n\n      phones: $this.contactFormGroup.value.phones.map((result) => {\n        return result.phone;\n      }),\n    },\n    byUser:{\n     id: $this.loginCookieStorage.get().id,\n     name: $this.loginCookieStorage.get().name\n    },\n    adress: [$this.addressFormGroup.value],\n    professionalData: {\n      cnpj: $this.professionalDataFormGroup.value.cnpj,\n      office: [$this.office],\n      note: $this.professionalDataFormGroup.value.note,\n    },\n    wordKey: $this.personalDataFormGroup.value.wordkey,\n  };\n\n  payload.gender = payload.gender.code;\n  payload.birthday = ValidateDate.parseDate(payload.birthday);\n  payload.rg.rgDateEmitter = ValidateDate.parseDate(\n    payload.rg.rgDateEmitter\n  );\n\n  payload.wordKey = BUILD_WORD_KEY(payload);\n\n  return payload;\n};\n","export const MARITAL_STATUS = [\n  {label: 'Solteiro (a)', value: 'SOLTEIRO'},\n  {label: 'Casado (a)', value: 'CASADO'},\n];\n\nexport const GENDERS = [ {code: 'MASCULINO', name: 'Masculino'},\n                         {code: 'FEMININO', name: 'Feminino'} ];\n\nexport const DRIVER_TYPE_DEFAULTS = [{office: 'Motorista de Escolta', route: 'register/employee/driver' },\n                                     {office: 'Motorista de Transporte', route: 'register/employee/driver' }];\n","import { ApiPaths } from 'src/app/shared/enuns/api-paths.enum';\nimport { HttpParams } from '@angular/common/http';\nimport { LoginCookieStorage } from './../../../../core/cookieStorage/loginCookieStorage';\nimport { element } from 'protractor';\nimport { BUILD_PAYLOAD_EMPLOYEE } from './build_payload';\nimport { DeviceType } from '../../../../shared/utils/device-type';\nimport { CrudRegisterDriverStorage } from '../../../../shared/storage/crudStorageDriverRegister';\nimport { Router } from '@angular/router';\nimport { CepService } from '../../../../core/services/cep.service';\nimport { ValidateDate } from '../../../../shared/utils/validateDate';\nimport {\n  DRIVER_TYPE_DEFAULTS,\n  GENDERS,\n  MARITAL_STATUS,\n} from './constants-employee';\nimport {\n  SAVE_SUCESS,\n} from '../../../../core/menssages/menssagens';\nimport { ValidateDoc } from '../../../../shared/utils/validateDoc';\nimport { ApiService } from '../../../../core/services/api.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Subscription } from 'rxjs';\nimport { MsgService } from 'src/app/core/menssages/msg.service';\nimport { TOAST_ERROR, TOAST_SUCCESSO } from 'src/app/core/menssages/toastEvent';\nimport { BreadcrumbService } from 'src/app/shared/config/app.breadcrumb.service';\nimport { MatStepper } from '@angular/material/stepper';\nimport { HostListener } from '@angular/core';\nimport { ElementsResponse, Page } from 'src/app/shared/model/response/elementsResponse';\nimport { ImgService } from '../../img/img.service';\nimport { SimpleData } from 'src/app/shared/model/simple_data';\n\n@Component({\n  selector: 'app-register-employee',\n  templateUrl: './register-employee.component.html',\n  styleUrls: ['./register-employee.component.scss'],\n})\nexport class RegisterEmployeeComponent implements OnInit {\n  public personalDataFormGroup: FormGroup;\n  public professionalDataFormGroup: FormGroup;\n  public contactFormGroup: FormGroup;\n  public addressFormGroup: FormGroup;\n  public docFormGroup: FormGroup;\n  public alertFormGroup: FormGroup;\n  public genders = GENDERS;\n  private subscription = new Subscription();\n  public maritalStatus: any = MARITAL_STATUS;\n  public phones: FormArray;\n  public allowLogin: boolean = false;\n  public perfil: string = '';\n\n  public mobile = DeviceType.mobileType();\n\n  public alerts: FormArray;\n  public alertSh: boolean;\n  public office = '';\n  public pageTypeEmployee = new Page();\n  public pagePerfil = new Page();\n  public id: string;\n  public functions = [];\n  public apiPathFile = ApiPaths.EMPLOYEE_FILES;\n  public perfis = [];\n\n  public selectedMtStatus;\n  public isLinear = false;\n  public stepper: MatStepper;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private msg: MsgService,\n    private spinner: NgxSpinnerService,\n    private service: ApiService,\n    public loginCookieStorage: LoginCookieStorage,\n    public router: Router,\n    private cep: CepService,\n    public imgService: ImgService,\n    private breadcrumbService: BreadcrumbService\n  ) {\n    this.breadcrumbService.setItems([{ label: 'Registrar Colaborador' }]);\n  }\n\n  private loadFormGroup(): void {\n    this.personalDataFormGroup = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      gender: ['', [Validators.required]],\n      maritalStatus: ['', [Validators.required]],\n      birthday: ['', [Validators.required, ValidateDate.validateDateString]],\n      cpf: ['', [Validators.required, ValidateDoc.validateCPF]],\n    });\n\n    this.contactFormGroup = this.formBuilder.group({\n      phones: this.formBuilder.array([this.createFormPhone()]),\n      email: ['', Validators.email],\n    });\n\n    this.addressFormGroup = this.formBuilder.group({\n      postalCode: ['', [Validators.required]],\n      street: ['', [Validators.required]],\n      number: ['', [Validators.required]],\n      neighborhood: ['', [Validators.required]],\n      complement: [''],\n      city: ['', [Validators.required]],\n      state: ['', [Validators.required]],\n    });\n\n    this.professionalDataFormGroup = this.formBuilder.group({\n      cnpj: ['', [Validators.required, ValidateDoc.validateCNPJ]],\n      note: [''],\n    });\n\n    this.docFormGroup = this.formBuilder.group({\n      rg: ['', [Validators.required]],\n      rgEmitter: ['', [Validators.required]],\n      rgDateEmitter: ['', [Validators.required]],\n      motherName: ['', [Validators.required]],\n    });\n  }\n\n  public cancelAlert() {\n    this.alertSh = false;\n    this.alertFormGroup.reset();\n  }\n\n  public cancelConfigUser() {\n    this.perfil = '';\n    this.allowLogin = false;\n  }\n\n  public allowPerfil(){\n    this.perfil = '';\n    this.allowLogin = true;\n  }\n\n  public ifTypeEmployeeDrivre() {\n    if(this.office.toLowerCase().indexOf('motorista') > -1){\n      return true;\n    }\n\n    return false;\n  }\n\n  public createFormPhone(): FormGroup {\n    return this.formBuilder.group({\n      phone: ['', [Validators.required]],\n    });\n  }\n\n  public addPhone(): void {\n    this.phones = this.contactFormGroup.get('phones') as FormArray;\n    this.phones.push(this.createFormPhone());\n  }\n\n  public removePhone(i): void {\n    this.phones.removeAt(i);\n  }\n\n  public reset(stepper) {\n    this.loadFormGroup();\n    stepper.reset();\n  }\n\n  public keyUpcep(cep): void {\n    if (cep.length == 9) {\n      this.spinner.show();\n      this.cep.get(cep).subscribe((r) => {\n        if (!r.cep) {\n          this.msg.toast(TOAST_ERROR('CEP não encontrado!'));\n        }\n        this.spinner.hide();\n        this.addressFormGroup.get('city').setValue(r.city);\n        this.addressFormGroup.get('neighborhood').setValue(r.neighborhood);\n        this.addressFormGroup.get('state').setValue(r.state);\n        this.addressFormGroup.get('street').setValue(r.street);\n      });\n    }\n  }\n\n  public driverRegister(): void {\n\n    this.spinner.show();\n    this.service.post<void>(`${ApiPaths.EMPLOYEE}`, BUILD_PAYLOAD_EMPLOYEE(this))\n                .subscribe((r: any) => {\n        this.spinner.hide();\n\n        this.msg.toast(TOAST_SUCCESSO(SAVE_SUCESS));\n\n        CrudRegisterDriverStorage.set(r.id);\n        CrudRegisterDriverStorage.setType(this.office);\n\n        this.router.navigate(['register/employee/driver']);\n\n      });\n  }\n\n  /* end */\n\n  public scrollToEndTypeEmployee() {\n\n    if(this.functions.length < this.pageTypeEmployee.totalElements){\n      this.service.get(ApiPaths.TYPE_EMPLOYEE, {page: this.pageTypeEmployee.nextPage, size: this.pageTypeEmployee.size})\n      .subscribe((r: ElementsResponse) => {\n\n        this.pageTypeEmployee = r.page;\n\n        r.elements.forEach((element) => {\n          this.functions.push(element);\n         });\n      });\n    }\n  }\n\n  public loadTypeEmployee(stepper){\n    this.spinner.show();\n    this.service.get(ApiPaths.TYPE_EMPLOYEE, {page: 0, size: 10})\n                .subscribe((r: ElementsResponse) => {\n                   this.pageTypeEmployee = r.page;\n                   stepper.next();\n                   this.functions = r.elements;\n                     this.spinner.hide();\n                });\n  }\n\n  public scrollToEndPerfis() {\n\n    if(this.perfis.length < this.pageTypeEmployee.totalElements){\n      this.service.get(ApiPaths.PERFIL, {page: this.pagePerfil.nextPage, size: this.pagePerfil.size})\n      .subscribe((r: ElementsResponse) => {\n\n        this.pagePerfil = r.page;\n\n        r.elements.forEach((element) => {\n          this.perfis.push(element);\n         });\n      });\n    }\n  }\n\n  public loadPerfis(stpper){\n    this.spinner.show();\n    this.service.get(ApiPaths.PERFIL, {page: 0, size: 10})\n                .subscribe((r: ElementsResponse) => {\n                   stpper.next()\n                   this.pagePerfil = r.page;\n                   this.perfis = r.elements;\n                     this.spinner.hide();\n                });\n  }\n\n  public register(stepper?): void {\n    this.spinner.show();\n    this.professionalDataFormGroup.value.office = this.office;\n    const sub = this.service\n                    .post<SimpleData>(`${ApiPaths.EMPLOYEE}`, BUILD_PAYLOAD_EMPLOYEE(this))\n                    .subscribe((r) => {\n                       this.id = r.id;\n          stepper.next()\n\n        this.spinner.hide();\n        this.msg.toast(TOAST_SUCCESSO(SAVE_SUCESS));\n      });\n    this.subscription.add(sub);\n  }\n\n  ngOnInit(): void {\n    this.loadFormGroup();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<div *ngIf=\"!mobile\" class=\"p-grid p-fluid\">\n  <div class=\"p-col-12 p-md-12\">\n    <div class=\"card\">\n      <mat-horizontal-stepper [linear]=\"true\" #stepper>\n        <mat-step>\n          <h4>Dados Pessoais</h4>\n          <form [formGroup]=\"this.personalDataFormGroup\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input formControlName=\"name\" [ngStyle]=\"{'text-transform' : 'capitalize'}\" type=\"text\" pInputText\n                  placeholder=\"Nome*\">\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <p-dropdown [options]=\"maritalStatus\" formControlName=\"maritalStatus\" placeholder=\"Estado civíl*\">\n                </p-dropdown>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input [dropSpecialCharacters]=\"false\" [hiddenInput]=\"true\" formControlName=\"birthday\" mask=\"00/00/0000\"\n                  type=\"text\" pInputText placeholder=\"Data de nascimento*\">\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <p-selectButton [options]=\"this.genders\" formControlName=\"gender\" optionLabel=\"name\"></p-selectButton>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input type=\"text\" formControlName=\"cpf\" mask=\"000.000.000-00\" pInputText placeholder=\"CPF*\" />\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Continuar\" (click)=\"this.stepper.next()\"\n                  [disabled]=\"!this.personalDataFormGroup.valid\" class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>RG</h4>\n          <form [formGroup]=\"this.docFormGroup\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input type=\"text\" pKeyFilter=\"int\" formControlName=\"rg\" pInputText placeholder=\"RG*\" />\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input type=\"text\" style=\"text-transform: uppercase;\" formControlName=\"rgEmitter\" pInputText\n                  placeholder=\"Emissor/UF*\" />\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input type=\"text\" formControlName=\"rgDateEmitter\" mask=\"00/00/0000\" pInputText\n                  placeholder=\"Data de emissão*\" />\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input type=\"text\" name=\"name\" formControlName=\"motherName\" pInputText placeholder=\"Nome da mãe*\" />\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Continuar\" (click)=\"this.stepper.next()\" [disabled]=\"!this.docFormGroup.valid\"\n                  class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Endereço</h4>\n          <form [formGroup]=\"this.addressFormGroup\" [ngStyle]=\"{'text-align' : 'center'}\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input (keyup)=\"this.keyUpcep($event.target.value)\" formControlName=\"postalCode\" mask=\"00000-000\" type=\"text\"\n                  pInputText placeholder=\"CEP*\">\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input type=\"text\" formControlName=\"street\" pInputText placeholder=\"Rua*\" />\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input type=\"text\" pKeyFilter=\"int\" formControlName=\"number\" pInputText placeholder=\"Número*\" />\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input type=\"text\" formControlName=\"complement\" pInputText placeholder=\"Complemento\" />\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input type=\"text\" formControlName=\"neighborhood\" pInputText placeholder=\"Bairro*\" />\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input type=\"text\" formControlName=\"city\" pInputText placeholder=\"Cidade*\" />\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input formControlName=\"state\" type=\"text\" pInputText placeholder=\"UF*\">\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Continuar\" (click)=\"this.stepper.next()\"\n                  [disabled]=\"!this.addressFormGroup.valid\" type=\"button\" class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Contato</h4>\n          <form [formGroup]=\"this.contactFormGroup\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <br>\n                <input type=\"email\" formControlName=\"email\" pInputText placeholder=\"E-mail\" />\n              </div>\n              <div formArrayName=\"phones\"\n                *ngFor=\"let item of this.contactFormGroup.get('phones')['controls']; let i = index;\"\n                class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <div [formGroupName]=\"i\">\n                  <i class=\"pi pi-times-circle\" style=\"cursor: pointer; font-size: 1rem\"\n                    *ngIf=\"this.contactFormGroup.get('phones')['controls'].length > 1\"\n                    (click)=\"this.removePhone(i)\"></i>\n                  <br>\n                  <input formControlName=\"phone\" mask=\"(00) 00000-0000||(00) 0000-0000\" type=\"phone\" pInputText\n                    placeholder=\"Telefone*\">\n                </div>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Continuar\" (click)=\"loadTypeEmployee(stepper)\"\n                  [disabled]=\"!this.contactFormGroup.valid\" type=\"button\" class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <i title=\"Adicionar novo contato\" class=\"material-icons\" style=\"cursor: pointer; font-size: 2rem;\"\n                  (click)=\"addPhone()\">smartphone <small>+</small></i>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Dados profissionais</h4>\n          <form [formGroup]=\"this.professionalDataFormGroup\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input mask=\"00.000.000/0000-00\" formControlName=\"cnpj\" type=\"text\" pInputText\n                  placeholder=\"Número de cadastro MEI (CPNJ)*\">\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <ng-select bindLabel=\"name\" bindValue=\"id\" [searchable]=\"true\" [clearable]=\"false\"\n                  [placeholder]=\"'teste'\" [(ngModel)]=\"this.office\" [ngModelOptions]=\"{standalone: true}\"\n                  [virtualScroll]=\"true\" (scrollToEnd)=\"scrollToEndTypeEmployee()\">\n                  <ng-option *ngFor=\"let i of this.functions\" [value]=\"i.name\">{{i.name}}</ng-option>\n                </ng-select>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <textarea type=\"text\" formControlName=\"note\" pInputTextarea placeholder=\"Observações\"> </textarea>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Continuar\" (click)=\"this.loadPerfis(stepper)\"\n                  [disabled]=\"!this.office || !this.professionalDataFormGroup.valid\" type=\"button\"\n                  class=\"p-mr-2 p-mb-2\"></button>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Configurações</h4>\n          <div *ngIf=\"!allowLogin\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <h5>Deseja permitir que o colaborador\n                  <span style=\"text-transform: capitalize;\">\n                    {{this.personalDataFormGroup.value.name}}\n                  </span>\n                  tenha um usuário para login?\n                </h5>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                  class=\"p-button-secondary p-mr-1 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Sim\" (click)=\"this.allowPerfil()\" type=\"button\"\n                  class=\"p-button-success p-mr-1 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Pular\" (click)=\"this.stepper.next()\" type=\"button\"\n                  class=\"p-mr-1 p-mb-2\"></button>\n              </div>\n            </div>\n          </div>\n          <div *ngIf=\"allowLogin\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <ng-select bindLabel=\"name\" bindValue=\"id\" [searchable]=\"true\" [clearable]=\"false\"\n                  [(ngModel)]=\"this.perfil\" [ngModelOptions]=\"{standalone: true}\"\n                  [virtualScroll]=\"true\" (scrollToEnd)=\"scrollToEndTypeEmployee()\">\n                  <ng-option *ngFor=\"let i of this.perfis\" [value]=\"i.name\">{{i.name}}</ng-option>\n                </ng-select>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Cancelar\" (click)=\"cancelConfigUser()\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-2 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Continuar\" [disabled]=\"!this.perfil\" (click)=\"stepper.next()\" type=\"button\"\n                  class=\"p-mr-2 p-mb-2\"></button>\n              </div>\n            </div>\n          </div>\n        </mat-step>\n        <mat-step>\n          <h4>Registrar</h4>\n          <br>\n          <form *ngIf=\"this.ifTypeEmployeeDrivre()\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-12 p-lg-6 p-mb-lg-12\">\n                <h6>Continuar cadastro do colaborador(a)\n                  <span name=\"name\">\n                    {{this.personalDataFormGroup.value.name}}\n                  </span> como\n                  {{this.office}}.\n                </h6>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-4\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"voltar\" type=\"button\"\n                  class=\"p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-4\">\n                <p-button label=\"Continuar\" (click)=\"this.driverRegister()\" class=\"p-mr-2 p-mb-2\"></p-button>\n              </div>\n            </div>\n          </form>\n          <form *ngIf=\"!this.ifTypeEmployeeDrivre()\" [ngStyle]=\"{'text-align' : 'center'}\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-12 p-lg-6 p-mb-lg-12\">\n                <h6>Cadastrar colaborador(a)\n                 <span name=\"name\">\n                  {{this.personalDataFormGroup.value.name}}\n                </span>  como\n                  {{this.office}}. </h6>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-4\">\n                <p-button label=\"Continuar\" (click)=\"this.register(stepper)\" class=\"p-mr-2 p-mb-2\"></p-button>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step *ngIf=\"!this.ifTypeEmployeeDrivre()\">\n          <h4>Alertas</h4>\n          <div *ngIf=\"!this.alertSh\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <h5>Deseja adiconar alertas?</h5>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Sim\" (click)=\"this.alertSh = true;\" type=\"button\"\n                  class=\"p-button-success p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-2 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Pular\" (click)=\"this.stepper.next()\" type=\"button\"\n                  class=\"p-mr-2 p-mb-2\"></button>\n              </div>\n            </div>\n          </div>\n          <div *ngIf=\"this.alertSh\">\n            <app-alert [loadApp]=\"true\" [id]=\"this.id\" [stepper]=\"stepper\" ></app-alert>\n          </div>\n        </mat-step>\n        <mat-step *ngIf=\"!this.ifTypeEmployeeDrivre()\">\n            <app-img [stepper]=\"stepper\" [id]=\"this.id\" [apiPaths]=\"this.apiPathFile\"></app-img>\n        </mat-step>\n        <mat-step *ngIf=\"!this.ifTypeEmployeeDrivre()\">\n          <h4>\n            <span style=\"text-transform: capitalize; font-weight: 400;\">\n              {{this.personalDataFormGroup.value.name}}\n            </span>\n               Cadastrado com sucesso! <i class=\"pi pi-check\" style=\"color: rgb(0, 180, 0); font-size: 1.5rem\"></i>\n          </h4>\n          <br>\n          <form [ngStyle]=\"{'text-align' : 'center'}\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <h6>Cadastrar novo colaborador</h6>\n                <div class=\"card\">\n                  <button (click)=\"reset(stepper)\" pButton label=\"Voltar ao início\" type=\"submit\"\n                    class=\"p-mr-2 p-mb-2 p-button-secondary\"></button>\n                </div>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <h6>Visualizar Colaboradores</h6>\n                <div class=\"card\">\n                  <p-button (click)=\"this.router.navigate(['/query/type/employee'])\" label=\"Colaboradores\" class=\"p-mr-2 p-mb-2\"></p-button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n      </mat-horizontal-stepper>\n      <div class=\"p-grid p-formgrid\">\n        <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-0\">\n          <small>Campos obrigatórios <span style=\"color: red;\">*</span></small>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { SAVE_SUCESS } from 'src/app/core/menssages/menssagens';\nimport { MsgService } from 'src/app/core/menssages/msg.service';\nimport { TOAST_SUCCESSO } from 'src/app/core/menssages/toastEvent';\nimport { ApiService } from 'src/app/core/services/api.service';\nimport { BreadcrumbService } from 'src/app/shared/config/app.breadcrumb.service';\nimport { ApiPaths } from 'src/app/shared/enuns/api-paths.enum';\nimport { BUILD_WORD_KEY } from 'src/app/shared/utils/builWordKey';\n\n@Component({\n  selector: 'app-register-function',\n  templateUrl: './register-function.component.html',\n  styleUrls: ['./register-function.component.scss']\n})\nexport class RegisterFunctionComponent implements OnInit {\n\n  public functionFormGroup: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private msg: MsgService,\n    private spinner: NgxSpinnerService,\n    private service: ApiService,\n    private breadcrumbService: BreadcrumbService\n  ) {\n    this.breadcrumbService.setItems([{ label: 'Registrar tipo função de colaboradores'}]);\n  }\n\n\n  private loadFormGroup(): void {\n    this.functionFormGroup = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      description: ['', [Validators.required]],\n      wordKey: [''],\n    });\n  }\n\n  public register(){\n    this.functionFormGroup.value.wordKey = BUILD_WORD_KEY(this.functionFormGroup.value);\n    this.spinner.show();\n    this.service.post(ApiPaths.TYPE_EMPLOYEE, this.functionFormGroup.value)\n                .subscribe(() => {\n                  this.spinner.hide();\n                  this.msg.toast(TOAST_SUCCESSO(SAVE_SUCESS));\n                  this.functionFormGroup.reset();\n                });\n  }\n\n  ngOnInit(): void {\n    this.loadFormGroup();\n  }\n\n}\n","<div class=\"p-grid p-fluid\">\n  <div class=\"p-col-12 p-md-12\">\n    <div class=\"card\">\n      <form [formGroup]=\"this.functionFormGroup\">\n        <div class=\"p-grid p-formgrid\">\n          <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n            <h6 style=\"font-weight: 700;\">Registrar Função de colaborador</h6>\n          </div>\n        </div>\n        <div class=\"p-grid p-formgrid\">\n          <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n            <input name=\"name\" formControlName=\"name\" type=\"text\" pInputText placeholder=\"Nome*\">\n          </div>\n          <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n            <input formControlName=\"description\"\n             type=\"text\" pInputText placeholder=\"Descrição*\">\n          </div>\n        </div>\n        <div class=\"p-grid p-formgrid\">\n          <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n            <button pButton label=\"Cadastrar\" (click)=\"this.register()\" [disabled]=\"!this.functionFormGroup.valid\"\n              class=\"p-mr-2 p-mb-2\">\n            </button>\n          </div>\n        </div>\n      </form>\n      </div>\n      </div>\n      </div>\n","import { AutoCompleteService } from './../../../shared/search/autocomplete';\nimport { ElementsResponse } from './../../../shared/model/response/elementsResponse';\nimport { Expenses } from './../../../shared/model/expenses';\nimport { Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { fromEvent, Observable, Subscription } from 'rxjs';\nimport { INPUT_VALIDATE_ERROR, SAVE_SUCESS } from 'src/app/core/menssages/menssagens';\nimport { MsgService } from 'src/app/core/menssages/msg.service';\nimport { TOAST_ERROR, TOAST_SUCCESSO } from 'src/app/core/menssages/toastEvent';\nimport { ApiService } from 'src/app/core/services/api.service';\nimport { ApiPaths } from 'src/app/shared/enuns/api-paths.enum';\nimport {debounceTime, map, startWith} from 'rxjs/operators';\nimport { TimerSharp } from '@material-ui/icons';\nimport { BreadcrumbService } from 'src/app/shared/config/app.breadcrumb.service';\n\nconst TYPES_ACTIVITY =  [\n  {code: '', name: 'Selecionar tipo'},\n  {code: 'INSPECTION', name: 'Inspeção'},\n  {code: 'IUC', name: 'Imposto único de circulação'},\n  {code: 'PIECE_EXCHANGE', name: 'Troca de peças'},\n  {code: 'TRAFFIC_TICKET', name: 'Multa de trânsito'},\n  {code: 'TIRE_CHANGE', name: 'Mudaça de pneus'},\n  {code: 'VEHICLE_INSURANCE', name: 'Seguro do veículo'},\n  {code: 'FUEL', name: 'Combustível'},\n  {code: 'TOLL', name: 'Portagem'},\n  {code: 'OTHER', name: 'Outros'}\n];\n\n@Component({\n  selector: 'app-register-expenses',\n  templateUrl: './register-expenses.component.html',\n  styleUrls: ['./register-expenses.component.scss']\n})\nexport class RegisterExpensesComponent implements OnInit {\n\n  public registerFormGroup: FormGroup;\n  public blockSubmit = false;\n  public types = TYPES_ACTIVITY;\n  private subscription = new Subscription();\n  public carId: string;\n  public fuel = false;\n  cars = [];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private msg: MsgService,\n    private spinner: NgxSpinnerService,\n    private service: ApiService,\n    public autocompleService: AutoCompleteService,\n    private breadcrumbService: BreadcrumbService) {\n    this.breadcrumbService.setItems([{label: 'Registrar Despesa'}]);\n  }\n\n  private validatePayload(): void{\n\n    if(this.fuel && !this.registerFormGroup.get('litros').value){\n      throw new EvalError( this.msg.toast(TOAST_ERROR('Digite os litros para continuar')) );\n    }\n\n    if(!this.carId){\n      throw new EvalError( this.msg.toast(TOAST_ERROR(INPUT_VALIDATE_ERROR)) );\n    }\n\n    if( this.registerFormGroup.invalid ){\n      throw new EvalError( this.msg.toast(TOAST_ERROR(INPUT_VALIDATE_ERROR)) );\n    }\n  }\n\n  private loadFormGroup(): void {\n    this.registerFormGroup = this.formBuilder.group({\n      type: ['', [Validators.required]],\n      valor: ['',  [Validators.required]],\n      description: ['', [Validators.required]],\n      litros: ['']\n     },\n    );\n  }\n\n  private resetForm():void{\n    this.registerFormGroup.reset();\n    this.fuel = false;\n  }\n\n public filter(event) {\n    let query = event.query;\n    this.service.get(`${ApiPaths.CAR_SEARCH}/${query}`, {}).subscribe((r: ElementsResponse) => {\n      this.cars = this.buildResultfilter(query, r.elements);\n    }, () => { this.cars = [] });\n  }\n\n  private buildResultfilter(query, r: any[]): any[] {\n    let filtered: any[] = [];\n    for (let i = 0; i < r.length; i++) {\n      let value = r[i];\n      if (value.vehicleRegistration.toLowerCase().indexOf(query.toLowerCase()) == 0) {\n        filtered.push(value);\n      }\n    }\n    return filtered;\n  }\n\n  public onSelectAutoComplete(value: any): any {\n    setTimeout(() => {\n     let c: any = document.getElementById('AutoC');\n     c.value = value.vehicleRegistration;\n    }, 1);\n    this.carId = value.id;\n  }\n\n  public verifyTypeFuel( value: string ): void{\n      if(value == 'FUEL'){this.fuel = true};\n  }\n\n  public register(): void{\n\n    this.validatePayload();\n\n    this.spinner.show();\n    const sub = this.service.post<Expenses>( `${ApiPaths.EXPENSES}/${'5ef2c35a2313a7145beaa47f'}/${ApiPaths.CAR}/${this.carId}`, this.registerFormGroup.value )\n                            .subscribe(() => {\n                              this.spinner.hide();\n                              this.resetForm();\n                              this.msg.toast(TOAST_SUCCESSO(SAVE_SUCESS));\n                             });\n      this.subscription.add(sub);\n  }\n\n  ngOnInit(): void {\n/*     this.autocompleService.loadautoComplete(document);\n */    this.loadFormGroup();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<div class=\"p-grid p-fluid\">\n  <div class=\"p-col-12 p-md-12\">\n    <div class=\"card\">\n      <h4>Despesas</h4>\n\t\t\t<p>Pagination, sorting, filtering and checkbox selection.</p>\n      <form (ngSubmit)=\"this.register()\" [formGroup]=\"this.registerFormGroup\" [ngStyle]=\"{'text-align' : 'center'}\">\n        <div class=\"p-grid p-formgrid\">\n          <div class=\"p-col-6 p-mb-2 p-lg-2 p-mb-lg-0\"> </div>\n          <div class=\"p-col-12 p-mb-2 p-lg-4 p-mb-lg-0\">\n            <p-autoComplete [size]=\"30\" inputId=\"AutoC\" placeholder=\"Pesquisar por matrícula\" [suggestions]=\"cars\"\n              (completeMethod)=\"filter($event)\" (onSelect)=\"onSelectAutoComplete($event)\" name=\"estado\" [minLength]=\"1\">\n              <ng-template let-brand pTemplate=\"item\">\n                <div class=\"ui-helper-clearfix\" style=\"border-bottom:1px solid #D5D5D5\">\n                  <div class=\"autoComplete\">\n                    <span style=\"text-transform: capitalize;\">\n                      {{ brand.brand }}\n                    </span>\n                    <br>\n                    <span>\n                      {{ brand.vehicleRegistration }}\n                    </span>\n                  </div>\n                </div>\n              </ng-template>\n            </p-autoComplete>\n          </div>\n          <div class=\"p-col-12 p-mb-2 p-lg-4 p-mb-lg-0\">\n            <p-dropdown [options]=\"this.types\" formControlName=\"type\" optionLabel=\"Selecionar tipo\" optionLabel=\"name\"\n              optionValue=\"code\"></p-dropdown>\n          </div>\n        </div>\n        <br>\n        <br>\n        <div class=\"p-grid p-formgrid\">\n          <div class=\"p-col-6 p-mb-2 p-lg-2 p-mb-lg-0\"> </div>\n          <div class=\"p-col-12 p-mb-2 p-lg-4 p-mb-lg-0\">\n            <input formControlName=\"valor\" currencyMask pInputText placeholder=\"Valor\">\n          </div>\n          <div class=\"p-col-12 p-mb-2 p-lg-4 p-mb-lg-0\">\n            <textarea formControlName=\"description\" [rows]=\"2\" [cols]=\"30\" placeholder=\"Descição\" pInputTextarea\n              autoResize=\"autoResize\"></textarea>\n          </div>\n        </div>\n        <br>\n        <br>\n        <div class=\"p-grid p-formgrid\">\n          <div class=\"p-col-12 p-mb-2 p-lg-4 p-mb-lg-0\"> </div>\n          <div class=\"p-col-12 p-mb-2 p-lg-4 p-mb-lg-0\">\n            <p-button label=\"Salvar\" [disabled]=\"this.blockSubmit ?\n            !this.registerFormGroup.valid : false\" type=\"submit\" class=\"p-mr-2 p-mb-2\"></p-button>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { MsgService } from 'src/app/core/menssages/msg.service';\nimport { ApiService } from 'src/app/core/services/api.service';\nimport { CepService } from 'src/app/core/services/cep.service';\nimport { BreadcrumbService } from 'src/app/shared/config/app.breadcrumb.service';\nimport { DeviceType } from 'src/app/shared/utils/device-type';\n\n@Component({\n  selector: 'app-register-fuel',\n  templateUrl: './register-fuel.component.html',\n  styleUrls: ['./register-fuel.component.scss']\n})\nexport class RegisterFuelComponent implements OnInit {\n\n  public alertFormGroup: FormGroup;\n  public amountFormGroup: FormGroup;\n  public alerts: FormArray;\n  public values: FormArray;\n\n  public uploadedFiles = new Array<any>();\n  public formDataList = Array<FormData>();\n\n  public fuelTypes = [\n    {label: 'Gasolina comum', value: 'Master'},\n    {label: 'Gasolina aditivada', value: 'Master'},\n    {label: 'Gasolina premium', value: 'Master'},\n    {label: 'Etanol', value: 'Master'},\n    {label: 'Etanol aditivado', value: 'Master'},\n    {label: 'Diesel comum', value: 'Master'},\n    {label: 'Diesel S-10', value: 'Master'},\n    {label: 'Diesel aditivado', value: 'Master'},\n    {label: 'Diesel premium', value: 'Master'},\n    {label: 'GNV', value: 'Master'},\n    {label: 'Eletricidade', value: 'Master'},\n  ].sort(function (a, b) {\n    return a.label < b.label ? -1 : a.label > b.label ? 1 : 0;\n  }); //mock\n\n  public perfis = [\n    {label: 'Master', value: 'Master'},\n    {label: 'Admin', value: 'Admin'},\n  ] //mock\n\n  public provider = [\n    {label: 'Posto gentil', value: 'Master'},\n    {label: 'Posto rede souza', value: 'Admin'},\n  ] //mock\n\n  public results = [];\n  public results2 = [];\n  public alertSh: boolean;\n  public mobile = DeviceType.mobileType();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private msg: MsgService,\n    private spinner: NgxSpinnerService,\n    private service: ApiService,\n    private router: Router,\n    private cep: CepService,\n    private breadcrumbService: BreadcrumbService\n  ) {\n    this.breadcrumbService.setItems([{label: 'Registrar Abastecimento'}]);\n  }\n\n  private loadFormGroup(): void {\n    this.amountFormGroup = this.formBuilder.group({\n      amount: [0],\n      values: this.formBuilder.array([ this.createAmount() ]),\n    });\n\n    this.alertFormGroup = this.formBuilder.group({\n      alerts: this.formBuilder.array([ this.createAlerts() ]),\n    });\n  }\n\n      /* Alerts */\n\n      public createAlerts(): FormGroup {\n        return this.formBuilder.group({\n          title: ['', [Validators.required]],\n          date: ['', [Validators.required]],\n          note: ['', [Validators.required]],\n          priorityColor: ['', [Validators.required]],\n          namePriority: ['', [Validators.required]],\n          perfil: [''],\n          usersIds: []\n        });\n      }\n\n      public addAlert(): void {\n        this.alerts = this.alertFormGroup.get('alerts') as FormArray;\n        this.alerts.push(this.createAlerts());\n      }\n\n      public removeAlert(i): void {\n        this.alerts.removeAt(i);\n      }\n\n      public cancelAlert(){\n        this.alertFormGroup.reset();\n        this.alertSh = false;\n      }\n\n      /* amounts */\n\n      public createAmount(): FormGroup {\n      return this.formBuilder.group({\n        title: [''],\n        description: [''],\n        value: [0],\n      });\n    }\n\n    public addAmount(): void {\n      this.values = this.amountFormGroup.get('values') as FormArray;\n      this.values.push(this.createAmount());\n    }\n\n    public removeAmount(i): void {\n      this.values.removeAt(i);\n      this.calculate();\n    }\n\n    public cancelAmount(){\n      this.amountFormGroup.reset();\n    }/* IMG */\n\n  public onSelectImg(event): void {\n    this.uploadedFiles = event.currentFiles;\n  }\n\n  public onClear(): void {\n    this.uploadedFiles = [];\n  }\n\n  public buildFormDatas(stepper): void {\n    const fd = new Array<FormData>();\n\n    for (let file of this.uploadedFiles) {\n      const formData = new FormData();\n      formData.append('file', file);\n      fd.push(formData);\n    }\n\n    this.formDataList = fd;\n    console.log(this.formDataList);\n    stepper.next();\n  }\n\n  /* end */\n\n\n\n\n    public calculate(){\n      let total = this.amountFormGroup.value.values.reduce(getTotal, 0);\n      function getTotal(total, item) {\n        return total + item.value;\n      }\n      this.amountFormGroup.get('amount').setValue(total);\n    }\n\n  public driverSearch( value ){\n\n    console.log(value)\n\n    let x = [{name: 'Augusto'}, {name: 'Marcelo'}, {name: 'Ranulf'}].filter(({name}) => name.toLocaleLowerCase().match(new RegExp('(' + value.query.toLocaleLowerCase() + ')')));\n\n       this.results = x;\n\n          console.log(x)\n  }\n\n  public vehicleSearch( value ){\n\n    console.log(value)\n\n    let x = [{name: 'Hilux'}, {name: 'Onix'}, {name: 'X1'}].filter(({name}) => name.toLocaleLowerCase().match(new RegExp('(' + value.query.toLocaleLowerCase() + ')')));\n\n       this.results = x;\n\n          console.log(x)\n  }\n\n  public buildPayload(){\n    console.log(this.amountFormGroup.value);\n  }\n\n  ngOnInit(): void {\n       this.loadFormGroup();\n  }\n\n}\n","<div class=\"p-grid p-fluid\">\n  <div class=\"p-col-12 p-md-12\">\n    <div class=\"card\">\n      <mat-horizontal-stepper [linear]=\"true\" #stepper>\n        <mat-step>\n          <h4>Dados iniciais</h4>\n          <form>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <p-autoComplete placeholder=\"Selecionar motorista\" [suggestions]=\"results\"\n                  (completeMethod)=\"driverSearch($event)\" field=\"name\" [dropdown]=\"true\">\n                  <ng-template let-driver pTemplate=\"item\">\n                    <div class=\"country-item\">\n                     <!--  <img src=\"assets/showcase/images/demo/flag/flag_placeholder.png\"\n                        [class]=\"'flag flag-' + country.code.toLowerCase()\" /> -->\n                      <div>{{driver.name}}</div>\n                    </div>\n                  </ng-template>\n                </p-autoComplete>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <p-autoComplete placeholder=\"Selecionar veículo\" [suggestions]=\"results\"\n                  (completeMethod)=\"vehicleSearch($event)\" field=\"name\" [dropdown]=\"true\">\n                  <ng-template let-vehicle pTemplate=\"item\">\n                    <div class=\"country-item\">\n                     <!--  <img src=\"assets/showcase/images/demo/flag/flag_placeholder.png\"\n                        [class]=\"'flag flag-' + country.code.toLowerCase()\" /> -->\n                      <div>{{vehicle.name}}</div>\n                    </div>\n                  </ng-template>\n                </p-autoComplete>\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <p-dropdown [options]=\"this.fuelTypes\" placeholder=\"Tipo de combustivel*\">\n                </p-dropdown>\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <p-dropdown [options]=\"this.provider\" placeholder=\"Fornecedor*\">\n                </p-dropdown>\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input [dropSpecialCharacters]=\"false\" [hiddenInput]=\"true\" mask=\"00/00/0000\" type=\"text\" pInputText\n                  placeholder=\"Data do do abastecimento*\">\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <textarea type=\"text\" pInputTextarea placeholder=\"Observações\"> </textarea>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Continuar\" (click)=\"this.stepper.next()\" class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <form [formGroup]=\"this.amountFormGroup\">\n            <h4>Total:\n              <small>\n                {{this.amountFormGroup.value.amount.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })}}\n              </small>\n            </h4>\n            <div>\n              <div formArrayName=\"values\"\n                *ngFor=\"let item of this.amountFormGroup.get('values')['controls']; let i = index;\">\n                <div style=\"padding: 0 !important;\" class=\"p-col-12 p-mb-6 p-lg-4 p-mb-lg-2\">\n                  <h6>\n                    <i class=\"pi pi-times-circle\" style=\"cursor: pointer; font-size: 1rem\"\n                      *ngIf=\"this.amountFormGroup.get('values')['controls'].length > 1\"\n                      (click)=\"this.removeAmount(i)\"></i>\n                    Valor:\n                    <span name=\"name\">\n                      <small>\n                        {{item.value.value.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })}}\n                      </small>\n                    </span>\n                  </h6>\n                </div>\n                <div class=\"p-grid p-formgrid\" [formGroupName]=\"i\">\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <input name=\"name\" pKeyFilter=\"int\" formControlName=\"title\" pInputText placeholder=\"Litros*\">\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <input type=\"text\" formControlName=\"description\" pInputText placeholder=\"Descrição\" />\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <input type=\"text\" (keyup)=\"this.calculate()\"\n                      [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\" currencyMask formControlName=\"value\"\n                      pInputText placeholder=\"Valor\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Cancelar\" (click)=\"cancelAmount()\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton (click)=\"this.buildPayload()\" label=\"Concluir\" type=\"button\" class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-0\">\n                <i title=\"Adicionar novo valor\" class=\"material-icons\" style=\"cursor: pointer; font-size: 2rem;\"\n                  (click)=\"addAmount()\"> attach_money <small>+</small></i>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Alertas</h4>\n          <div *ngIf=\"!this.alertSh\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n              <h5>Deseja adiconar alertas?</h5>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Sim\" (click)=\"this.alertSh = true;\" type=\"button\"\n                  class=\"p-button-success p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-2 p-lg-2 p-mb-lg-0\">\n                <button  pButton label=\"Pular\" (click)=\"this.stepper.next()\" type=\"button\"\n                  class=\"p-mr-2 p-mb-2\"></button>\n              </div>\n            </div>\n          </div>\n          <form *ngIf=\"this.alertSh\" [formGroup]=\"this.alertFormGroup\">\n            <div>\n              <div formArrayName=\"alerts\"\n                *ngFor=\"let item of this.alertFormGroup.get('alerts')['controls']; let i = index;\">\n                <div style=\"padding: 0 !important;\" class=\"p-col-12 p-mb-6 p-lg-4 p-mb-lg-2\">\n                  <h6>\n                    <i class=\"pi pi-times-circle\" style=\"cursor: pointer; font-size: 1rem\"\n                    *ngIf=\"this.alertFormGroup.get('alerts')['controls'].length > 1\"\n                    (click)=\"this.removeAlert(i)\"></i>\n                    Total:\n                    <span name=\"name\">\n                      <small>\n                        {{item.value.title}}\n                      </small>\n                    </span>\n                  </h6>\n                </div>\n                <div class=\"p-grid p-formgrid\" [formGroupName]=\"i\">\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <input type=\"text\" mask=\"00/00/0000\" formControlName=\"date\" pInputText placeholder=\"Title\" />\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <input type=\"text\" formControlName=\"note\" pInputText\n                      placeholder=\"Descrição\" />\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <input type=\"text\" formControlName=\"note\" pInputText\n                      placeholder=\"valor\" />\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <p-multiSelect [filter]=\"!this.mobile\" placeholder=\"Selecionar perfis\" formControlName=\"perfil\" [options]=\"perfis\" ></p-multiSelect>\n                    <small> Serão notificados todos os associados aos perfis selecionados </small>\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <input name=\"name\" formControlName=\"namePriority\" pInputText placeholder=\"Grau de prioridade\">\n                  </div>\n                  <div class=\"p-col-12 p-mb-1 p-lg-2 p-mb-lg-1\">\n                    <br>\n                    <p-colorPicker [showTransitionOptions]=\"'0ms'\" [hideTransitionOptions]=\"'0ms'\" formControlName=\"priorityColor\"></p-colorPicker>\n                    <small> Selecionar cor de prioridade </small>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Cancelar\" (click)=\"cancelAlert()\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Concluir\" (click)=\"this.buildPayload(stepper)\"\n                  [disabled]=\"!this.alertFormGroup.valid\" type=\"button\" class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-0\">\n                <i title=\"Adicionar novo alerta\" class=\"material-icons\" style=\"cursor: pointer; font-size: 2rem;\"\n                  (click)=\"addAlert()\">warning <small>+</small></i>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Anexar documentos</h4>\n          <div>\n            <div>\n          <p-fileUpload name=\"demo[]\"\n              (onSelect)=\"this.onSelectImg($event)\"\n              (onClear)=\"this.onClear()\"\n              chooseLabel=\"Selecionar imagens\"\n              chooseIcon=\"pi pi-images\"\n              cancelLabel=\"Limpar\"\n              [showUploadButton]=\"false\"\n              multiple=\"multiple\" accept=\"image/*\" maxFileSize=\"1000000\">\n          </p-fileUpload>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Continuar\" (click)=\"buildFormDatas(stepper)\" class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n            </div>\n          </div>\n        </mat-step>\n        <mat-step>\n          <h4>\n          <span style=\"text-transform: capitalize; font-weight: 400;\">\n           <!--  {{this.personalDataFormGroup.value.name}} -->\n          </span>\n          Cadastrado com sucesso! <i class=\"pi pi-check\" style=\"color: rgb(0, 180, 0); font-size: 1.5rem\"></i> </h4>\n          <br>\n          <form [ngStyle]=\"{'text-align' : 'center'}\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <h6>Cadastrar novo abastecimento</h6>\n                <div class=\"card\">\n                  <button pButton label=\"Voltar ao início\" type=\"submit\" class=\"p-mr-2 p-mb-2 p-button-secondary\"></button>\n                </div>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <h6>Visualizar abastecimentos</h6>\n                <div class=\"card\">\n                  <p-button label=\"Abastecimentos\" class=\"p-mr-2 p-mb-2\"></p-button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n      </mat-horizontal-stepper>\n      <div class=\"p-grid p-formgrid\">\n        <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-0\">\n          <small>Campos obrigatórios <span style=\"color: red;\">*</span></small>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { ValidateDate } from './../../../shared/utils/validateDate';\n\nexport const BUILD_PAYLOAD_JOURNEY = function <Joruney>($this) {\n\n  return {\n     driver: {\n         id: $this.driver.id,\n         name: $this.driver.name\n     },\n     customer: {\n      id: $this.vehicle.id,\n      name: $this.vehicle.vehicleRegistration\n     },\n     vehicle: {\n         id: $this.vehicle.id,\n         name: $this.vehicle.vehicleRegistration\n     },\n     company: {\n        id: $this.vehicle.id,\n        name: \"DR SOUZA\"\n    },\n    origin: buildDestiny($this.originFormGroup),\n    destiny: buildDestiny($this.destinationFormGroup),\n    journeyId: $this.journeyKey,\n    tariff: $this.moneyFormGroup.tariff,\n    invoice: $this.moneyFormGroup.invoice,\n    byUser:{\n      id: $this.loginCookieStorage.get().id,\n      name: $this.loginCookieStorage.get().name\n     },\n  }\n}\n\nfunction buildDestiny( form ) {\n\n    let location = null;\n\n    if (form.value.latlng) {\n      const latlng: any[] = form.value.latlng.replace(' ', '').split(',');\n      location = { lat: latlng[0], lng: latlng[1] };\n    }\n\n    return {\n      day: ValidateDate.parseDate(form.value.day),\n      km: form.value.km ? form.value.km : null,\n      address: {\n        postalCode: form.value.postalCode,\n        street: form.value.street,\n        number: form.value.number,\n        neighborhood: form.value.neighborhood,\n        complement: form.value.complement,\n        city: form.value.city,\n        state: form.value.state,\n        location: location,\n      }\n    };\n}\n","import { BUILD_PAYLOAD_JOURNEY } from './build_payload';\nimport { FILTER_DEBOUNCE_TIME } from '../../../shared/utils/filterDebounceTime';\nimport { ElementsResponse } from './../../../shared/model/response/elementsResponse';\nimport { Journey } from './../../../shared/model/journey';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { MsgService } from 'src/app/core/menssages/msg.service';\nimport { ApiService } from 'src/app/core/services/api.service';\nimport { BreadcrumbService } from 'src/app/shared/config/app.breadcrumb.service';\nimport { TOAST_ERROR, TOAST_INFO, TOAST_SUCCESSO } from 'src/app/core/menssages/toastEvent';\nimport { ApiPaths } from 'src/app/shared/enuns/api-paths.enum';\nimport { SAVE_SUCESS } from 'src/app/core/menssages/menssagens';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BUILD_AUTOCOMPLETE } from 'src/app/shared/utils/buildListAutoCompl';\nimport { BUILD_LINK_GOOGLE_MAPS } from 'src/app/shared/utils/build_link_googleMaps';\nimport { Adress } from 'src/app/shared/model/adress';\nimport { CepService } from 'src/app/core/services/cep.service';\nimport { LoginCookieStorage } from 'src/app/core/cookieStorage/loginCookieStorage';\n\n@Component({\n  selector: 'app-register-journey',\n  templateUrl: './register-journey.component.html',\n  styleUrls: ['./register-journey.component.scss']\n})\nexport class RegisterJourneyComponent implements OnInit {\n\n  private loactionForm = {\n    day: ['', [Validators.required]],\n    postalCode: ['', [Validators.required]],\n    street: ['',  [Validators.required]],\n    number: ['', [Validators.required]],\n    neighborhood: ['', [Validators.required]],\n    complement: [''],\n    city: ['', [Validators.required]],\n    state: ['', [Validators.required]],\n    latlng: ['', [Validators.required]],\n    km: ['']\n  }\n\n  public originFormGroup: FormGroup;\n  public destinationFormGroup: FormGroup;\n  public managementFormGroup: FormGroup;\n  public moneyFormGroup: FormGroup;\n  public journeyKey;\n  public drivers = new Array<any>();\n  public vehicles = new Array<any>();\n  public vehicle: any = '';\n  public driver: any = '';\n  private subscription = new Subscription();\n\n  public origin = {lat: '', lng: ''};\n  public destination = {lat: '', lng: ''};\n\n  constructor(\n    private loginCookieStorage: LoginCookieStorage,\n    private formBuilder: FormBuilder,\n    private msg: MsgService,\n    private cep: CepService,\n    private spinner: NgxSpinnerService,\n    private service: ApiService,\n    private breadcrumbService: BreadcrumbService,\n  ) {\n    this.breadcrumbService.setItems([{label: 'Registrar Jornada'}]);\n  }\n\n  private loadFormGroup(): void {\n\n    this.originFormGroup = this.formBuilder.group(this.loactionForm);\n\n    this.destinationFormGroup = this.formBuilder.group(this.loactionForm);\n\n    this.managementFormGroup = this.formBuilder.group({\n      journeyKey: [''],\n      company: ['', [Validators.required]],\n      driver: [''],\n      vehicle: ['', [Validators.required]],\n      customer: ['', [Validators.required]]\n     }\n    );\n\n    this.moneyFormGroup = this.formBuilder.group({\n      tariff: ['', [Validators.required]],\n      invoice: ['', [Validators.required]],\n     },\n    );\n  }\n\n  public buildLinkGoogleMaps(form){\n    const addres: Adress =  form.value;\n    BUILD_LINK_GOOGLE_MAPS(addres, this)\n  }\n\n  public keyUpcep( cep, form ): void{\n    if( cep.length == 9 ){\n      this.spinner.show();\n      this.cep.get( cep ).subscribe((r) => {\n        if(!r.cep){ this.msg.toast(TOAST_ERROR('CEP não encontrado!')); }\n            this.spinner.hide();\n            form.get('city').setValue(r.city);\n            form.get('neighborhood').setValue(r.neighborhood);\n            form.get('state').setValue(r.state);\n            form.get('street').setValue(r.street);\n      });\n    }\n}\n\n  public onSelectVehicle(){\n    const msg = \"Antes de continuar associe um(a) motorista a este veículo!\";\n        if(!this.vehicle.associedDrivers){\n          this.msg.toast(TOAST_INFO(msg));\n          return;\n        }\n\n         this.driver = this.vehicle.associedDrivers.find(({using}) => using == true );\n\n        if(!this.driver){\n          this.msg.toast(TOAST_INFO(msg));\n          return\n        }\n\n        this.managementFormGroup.get('driver').setValue(this.driver.name);\n        this.originFormGroup.get('startKm').setValue(this.vehicle.currentKm);\n  }\n\n  public vehicleSearch(event) {\n\n    const sub1 = FILTER_DEBOUNCE_TIME('search_vehicle').subscribe((result) => {\n\n      if(result){\n        const sub = this.service.get(`${ApiPaths.VEHICLE}/${result}`, {})\n        .subscribe((r: Array<any>) => {\n          this.vehicles = r;\n        });\n\n        this.subscription.add(sub);\n      }\n      this.subscription.add(sub1)\n    });\n  }\n\n  public generateJourbey(stepper): void{\n         const customer: string = this.managementFormGroup.value.customer;\n         this.journeyKey = customer.split(' ')[0].toUpperCase() + Date.now().toString();\n         stepper.next();\n  }\n\n  public register(stepper){\n\n\n    console.log(BUILD_PAYLOAD_JOURNEY<any>(this))\n\n    return\n    this.spinner.show();\n\n    const sub = this.service.post<void>( `${ApiPaths.JOURNEY}`, BUILD_PAYLOAD_JOURNEY<Journey>(this) )\n                            .subscribe(() => {\n                              stepper.next();\n                              this.spinner.hide();\n                              this.msg.toast(TOAST_SUCCESSO(SAVE_SUCESS));\n                             });\n\n      this.subscription.add(sub);\n  }\n\n  ngOnInit(): void {\n    this.loadFormGroup();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}\n","<div class=\"p-grid p-fluid\">\n  <div class=\"p-col-12 p-md-12\">\n    <div class=\"card\">\n      <mat-horizontal-stepper [linear]=\"true\" #stepper>\n        <mat-step>\n          <h4>Dados da Jornada</h4>\n          <div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <p-autoComplete placeholder=\"pesquisar veículo\"\n                  [suggestions]=\"this.vehicles\"\n                  [(ngModel)]=\"this.vehicle\"\n                  inputId=\"search_vehicle\"\n                  (onSelect)=\"onSelectVehicle()\"\n                  (onFocus)=\"vehicleSearch($event)\"\n                  field=\"vehicleRegistration\">\n                  <ng-template let-vehicle pTemplate=\"item\">\n                    <div class=\"country-item\">\n                      <div>\n                        <strong>Nome: </strong> {{vehicle.name}}\n                        <br>\n                        <strong>Placa: </strong> {{vehicle.vehicleRegistration}}\n                      </div>\n                    </div>\n                  </ng-template>\n                </p-autoComplete>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Continuar\" [disabled]=\"!this.vehicle.associedDrivers\" (click)=\"this.stepper.next()\" class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n            </div>\n          </div>\n        </mat-step>\n        <mat-step>\n          <h4>Origem</h4>\n          <form [formGroup]=\"this.originFormGroup\">\n                <div class=\"p-grid p-formgrid\">\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <input formControlName=\"km\" pKeyFilter=\"money\" type=\"text\"  pInputText\n                      placeholder=\"Km Inicial*\">\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <input formControlName=\"day\" type=\"text\" mask=\"00/00/0000\" pInputText\n                      placeholder=\"Data de Inicio*\">\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <input (keyup)=\"this.keyUpcep($event.target.value, this.originFormGroup)\" formControlName=\"postalCode\" mask=\"00000-000\"\n                      type=\"text\" pInputText placeholder=\"CEP*\">\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <input type=\"text\" formControlName=\"street\" pInputText placeholder=\"Rua*\" />\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <input type=\"text\" pKeyFilter=\"int\" formControlName=\"number\" pInputText placeholder=\"Número*\" />\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <input type=\"text\" formControlName=\"complement\" pInputText placeholder=\"Complemento\" />\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <input type=\"text\" formControlName=\"neighborhood\" pInputText placeholder=\"Bairro*\" />\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <input type=\"text\" formControlName=\"city\" pInputText placeholder=\"Cidade*\" />\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <input formControlName=\"state\" type=\"text\" pInputText placeholder=\"UF*\">\n                    <br>\n                    <br>\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <input\n                    required\n                    formControlName=\"latlng\"\n                    type=\"text\"\n                    pInputText\n                    placeholder=\"Latitude/Longitude\">\n                  </div>\n                  <div class=\"p-col-12 p-mb-12 p-lg-12 p-mb-lg-12\">\n                    <a style=\"cursor: pointer;\" (click)=\"this.buildLinkGoogleMaps(this.originFormGroup)\" class=\"p-mr-2 p-mb-2\">\n                      <small>\n                        Obter latitude e longitude no google maps\n                      </small>\n                    </a>\n                    <br>\n                    <br>\n                  </div>\n                </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Continuar\" [disabled]=\"this.originFormGroup.invalid\" (click)=\"this.stepper.next()\" class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Destino</h4>\n          <form [formGroup]=\"this.destinationFormGroup\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input formControlName=\"day\" type=\"text\" mask=\"00/00/0000\" pInputText placeholder=\"Data Final*\">\n              </div>\n                 <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                  <input (keyup)=\"this.keyUpcep($event.target.value, this.destinationFormGroup)\" formControlName=\"postalCode\" mask=\"00000-000\"\n                    type=\"text\" pInputText placeholder=\"CEP*\">\n                </div>\n                <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                  <input type=\"text\" formControlName=\"street\" pInputText placeholder=\"Rua*\" />\n                </div>\n                <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                  <input type=\"text\" pKeyFilter=\"int\" formControlName=\"number\" pInputText placeholder=\"Número*\" />\n                </div>\n                <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                  <input type=\"text\" formControlName=\"complement\" pInputText placeholder=\"Complemento\" />\n                </div>\n                <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                  <input type=\"text\" formControlName=\"neighborhood\" pInputText placeholder=\"Bairro*\" />\n                </div>\n                <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                  <input type=\"text\" formControlName=\"city\" pInputText placeholder=\"Cidade*\" />\n                </div>\n                <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                  <input formControlName=\"state\" type=\"text\" pInputText placeholder=\"UF*\">\n                  <br>\n                  <br>\n                </div>\n                <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                  <input\n                  required\n                  formControlName=\"latlng\"\n                  type=\"text\"\n                  pInputText\n                  placeholder=\"Latitude/Longitude\">\n                </div>\n                <div class=\"p-col-12 p-mb-12 p-lg-12 p-mb-lg-12\">\n                  <a style=\"cursor: pointer;\" (click)=\"this.buildLinkGoogleMaps(this.destinationFormGroup)\" class=\"p-mr-2 p-mb-2\">\n                    <small>\n                      Obter latitude e longitude no google maps\n                    </small>\n                  </a>\n                  <br>\n                  <br>\n                </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Continuar\" [disabled]=\"this.destinationFormGroup.invalid\" (click)=\"this.stepper.next()\" class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Dados de Gestão</h4>\n          <form [formGroup]=\"this.managementFormGroup\">\n\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input formControlName=\"company\" type=\"text\" pInputText placeholder=\"Empresa*\">\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input disabled formControlName=\"driver\" type=\"text\" pInputText placeholder=\"Motorista*\">\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input formControlName=\"customer\" type=\"text\" pInputText placeholder=\"Cliente*\">\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Continuar\" (click)=\"this.generateJourbey(stepper)\" class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Dados de gestão financeira</h4>\n          <form [formGroup]=\"this.moneyFormGroup\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"this.journeyKey\" type=\"text\" readonly\n                  pInputText placeholder=\"chave da jornada*\">\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input formControlName=\"tariff\" currencyMask type=\"text\" pInputText placeholder=\"Tarifa*\">\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input formControlName=\"invoice\" type=\"text\" pInputText placeholder=\"Nfe*\">\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Continuar\" (click)=\"this.register(stepper)\" class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>\n          <span style=\"text-transform: capitalize; font-weight: 400;\">\n           <!--  {{this.personalDataFormGroup.value.name}} -->\n          </span>\n          Cadastrado com sucesso! <i class=\"pi pi-check\" style=\"color: rgb(0, 180, 0); font-size: 1.5rem\"></i> </h4>\n          <br>\n          <form [ngStyle]=\"{'text-align' : 'center'}\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <h6>Cadastrar nova Jornada</h6>\n                <div class=\"card\">\n                  <button pButton label=\"Voltar ao início\" type=\"submit\" class=\"p-mr-2 p-mb-2 p-button-secondary\"></button>\n                </div>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <h6>Visualizar Jornadas</h6>\n                <div class=\"card\">\n                  <p-button label=\"Jornadas\" class=\"p-mr-2 p-mb-2\"></p-button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n      </mat-horizontal-stepper>\n      <div class=\"p-grid p-formgrid\">\n        <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-0\">\n          <small>Campos obrigatórios <span style=\"color: red;\">*</span></small>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { HTTP_PARAMS } from './../../../core/config/httpParams';\nimport { ElementsResponse } from './../../../shared/model/response/elementsResponse';\nimport { SAVE_SUCESS } from './../../../core/menssages/menssagens';\nimport { CarResponse } from './../../../shared/model/response/carResponse';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { INPUT_VALIDATE_ERROR } from 'src/app/core/menssages/menssagens';\nimport { MsgService } from 'src/app/core/menssages/msg.service';\nimport { TOAST_ERROR, TOAST_SUCCESSO } from 'src/app/core/menssages/toastEvent';\nimport { ApiService } from 'src/app/core/services/api.service';\nimport { AutoCompleteService } from 'src/app/shared/search/autocomplete';\nimport { ApiPaths } from 'src/app/shared/enuns/api-paths.enum';\nimport { Subscription } from 'rxjs';\nimport { BreadcrumbService } from 'src/app/shared/config/app.breadcrumb.service';\n\n@Component({\n  selector: 'app-register-km',\n  templateUrl: './register-km.component.html',\n  styleUrls: ['./register-km.component.scss']\n})\nexport class RegisterKmComponent implements OnInit {\n\n  public blockSubmit = false;\n  public carList = new Array<CarResponse>();\n  public openKmDisplay: boolean;\n  public closeKmDisplay: boolean;\n  public km: number;\n  public employees = new Array<any>();\n  public employee = { id: null, name: null}\n  private subscription = new Subscription();\n\n  constructor(\n    private msg: MsgService,\n    private spinner: NgxSpinnerService,\n    private service: ApiService,\n    public autocompleService: AutoCompleteService,\n    private breadcrumbService: BreadcrumbService\n  ) {\n    this.breadcrumbService.setItems([{label: 'Registrar KM'}]);\n    this.loadEmployee();\n  }\n\n  private validatePayload(): void{\n    if( !this.employee.name ){\n      throw new EvalError( this.msg.toast(TOAST_ERROR('Escolha um motorista para continuar')) );\n    }\n\n    if( !this.km ){\n      throw new EvalError( this.msg.toast(TOAST_ERROR(INPUT_VALIDATE_ERROR)) );\n    }\n  }\n\n  private buildPayloadOpenKm(): any{\n    return {\n      \"carId\": this.carList[0].id,\n      \"userId\": '5ef5fbf44a09234df0a908b2',\n      \"openKm\": this.km,\n      \"driver\": this.employee\n  }\n }\n\n  private buildPayloadCloseKm(): any{\n    return {\n      \"userId\": '5ef5fbf44a09234df0a908b2',\n      \"closeKm\": this.km\n      }\n  }\n\n  private resetForm():void{\n     this.km = undefined;\n     this.closeKmDisplay = false;\n     this.openKmDisplay = false;\n  }\n\n  public setEmploye( value ): void{\n     this.employee = value;\n  }\n\n  private loadEmployee(): void{\n    this.service.get<ElementsResponse>(`${ApiPaths.EMPLOYEE}`, HTTP_PARAMS.set('size', '200')\n                                                                           .set('page', '0'))\n                .subscribe(r => {\n                   this.employees = r.elements;\n                });\n  }\n\n  public setValueAutoComplete( value: CarResponse ): void{\n    this.carList = [value];\n  }\n\n  public openKm(): void{\n\n    this.validatePayload();\n    this.spinner.show();\n\n   const sub = this.service.post( `${ApiPaths.KM}`, this.buildPayloadOpenKm() )\n                            .subscribe(() => {\n                              this.spinner.hide();\n                              this.resetForm();\n                              this.msg.toast(TOAST_SUCCESSO(SAVE_SUCESS));\n                             });\n      this.subscription.add(sub);\n  }\n\n  public closeKm(): void{\n\n    if( !this.km ){\n      throw new EvalError( this.msg.toast(TOAST_ERROR(INPUT_VALIDATE_ERROR)) );\n    }\n\n    this.spinner.show();\n\n   const sub = this.service.update( `${ApiPaths.KM}/5ef506af4a09234df0a908a9`, this.buildPayloadCloseKm() )\n                            .subscribe(() => {\n                              this.spinner.hide();\n                              this.resetForm();\n                              this.msg.toast(TOAST_SUCCESSO(SAVE_SUCESS));\n                             });\n      this.subscription.add(sub);\n  }\n\n  ngOnInit(): void {\n    this.autocompleService.loadautoComplete(document);\n  }\n}\n","<p-card class=\"col-md-12\" [ngStyle]=\"{'text-align' : 'center'}\">\n  <mat-form-field class=\"example-full-width\">\n    <input type=\"text\"\n           [ngStyle]=\"{'text-transform' : 'capitalize'}\"\n           placeholder=\"Pesuisar por matrícula\"\n           aria-label=\"Number\"\n           matInput\n           id=\"search\"\n           [matAutocomplete]=\"auto\">\n    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n      <mat-option (click)=\"this.setValueAutoComplete(option)\" *ngFor=\"let option of this.autocompleService.filteredOptions | async\" [value]=\"option.vehicleRegistration\">\n        <div class=\"box-autocomplete\">\n          <div class=\"title\">{{option.vehicleRegistration}}</div>\n          <div class=\"subTitle\" style=\"text-transform: capitalize;\">{{option.brand}}</div>\n        </div>\n      </mat-option>\n    </mat-autocomplete>\n    <mat-icon matSuffix>search</mat-icon>\n  </mat-form-field>\n\n  <button style=\"float: right;\" mat-button [matMenuTriggerFor]=\"menu\">\n    <mat-icon matSuffix>more_vert</mat-icon>\n  </button>\n  <mat-menu #menu=\"matMenu\">\n       <button class=\"item-menu\" (click)=\"openKmDisplay = true\" [disabled]=\"this.carList.length == 0\" mat-menu-item>Abrir KM</button>\n       <button  class=\"item-menu\" (click)=\"closeKmDisplay = true\" [disabled]=\"this.carList.length == 0\" mat-menu-item>Fechar KM</button>\n   </mat-menu>\n\n  <div class=\"form-group p-col-12 col-md-12\">\n    <div class=\"p-col-12 p-md-12\">\n\t\t\t<div class=\"card no-gutter widget-overview-box widget-overview-box-1\">\n        <div style=\"text-align: left;\">\n          <span class=\"overview-icon\">\n            <mat-icon matSuffix>airport_shuttle</mat-icon>\n          </span>\n            <span class=\"overview-title\">Veículo</span>\n        </div>\n\n\t\t\t\t<div *ngFor=\"let item of this.carList\" class=\"p-grid overview-detail\">\n          <div style=\"text-align: left;\" class=\"p-col-6 p-md-12\" >\n            <div class=\"overview-subtext\">Tipo: {{item.type}}</div>\n            <div class=\"overview-subtext\">Fabricante: {{item.brand}}</div>\n            <div class=\"overview-subtext\">Descrição: {{item.description}}</div>\n            <div class=\"overview-subtext\">Matrícula: {{item.vehicleRegistration}}</div>\n            <div class=\"overview-subtext\">Ano: {{item.year | date: 'dd/MM/yyyy'}}</div>\n            <div class=\"overview-subtext\">Km de registro: {{item.starRecordtKm}}</div>\n            <div class=\"overview-subtext\">Km atual: {{item.currentKm}}</div>\n            <br>\n            <div class=\"overview-subtext\">\n              <mat-form-field class=\"mat-select-p1\">\n                <mat-label>Motorista</mat-label>\n                <mat-select>\n                  <mat-option (click)=\"setEmploye(employee)\" [ngStyle]=\"{'text-transform': 'capitalize'}\" *ngFor=\"let employee of this.employees\" [value]=\"employee.name\">\n                   <div>\n                    {{employee.name}}\n                   </div>\n                  </mat-option>\n                </mat-select>\n                <mat-icon matSuffix>keyboard_arrow_down</mat-icon>\n              </mat-form-field>\n            </div>\n\t\t\t\t\t</div>\n        </div>\n\t\t\t</div>\n\t\t</div>\n\n  <!--   <div  *ngFor=\"let item of this.carList\">\n            <div>\n                <p-card class=\"col-12 my-2 card-content\">\n                    <div class=\"row align-items-center px-2 py-3\">\n                    <div style=\"text-align: initial;\" class=\"col-lg-9 py-2 py-lg-0\">\n                            <div class=\"row\">\n                                <div class=\"col-lg-5\">\n                                    <h2><strong>Tipo:</strong> {{item.type}}</h2>\n                                    <h2><strong>Fabricante:</strong> {{item.brand}}</h2>\n                                    <h2><strong>Descrição:</strong> {{item.description}}</h2>\n                                    <h2 ><strong>Matrícula:</strong> {{item.vehicleRegistration}}</h2>\n                                    <h2 ><strong>Ano:</strong> {{item.year | date: 'dd/MM/yyyy'}}</h2>\n                                </div>\n                                <div class=\"col-lg-7\">\n                                    <h2><strong>Km de registro: </strong> {{item.starRecordtKm}}</h2>\n                                    <h2><strong>Km atual: </strong> {{item.currentKm}}</h2>\n                                </div>\n                            </div>\n                        </div>\n           <div style=\"cursor: pointer;\" class=\"col-lg-3 py-2 py-lg-0 text-center\">\n                            <select *ngIf=\"user.type === 'ADMIN'\" (change)=\"setId($event)\" class=\"form-control\" name=\"peaple\">\n                                <option selected> Selecionar motorista </option>\n                                <option [value]=\"i.id\" *ngFor=\"let i of peaple\">\n                                <span style=\"text-transform: uppercase;\">\n                                   Nome: {{i.name}}\n                                   NIF: {{i.nif}}\n                                </span>\n                                </option>\n                            </select>\n                            <div style=\"font-size: 16px;\" *ngIf=\"user.type !== 'ADMIN'\">\n                             <b>Motorista: </b>\n                             <span style=\"text-transform: capitalize;\">\n                                {{Person.name}}\n                             </span>\n                            </div>\n                            <br>\n                            <br>\n                            <a style=\"color: white;\" class=\"btn btn-confirmar w-100\" (click)=\"getId(item, 1)\">Abrir Km</a>\n                            <br>\n                            <br>\n                            <a (click)=\"getId(item, 2)\" class=\"btn btn-cancelar w-100\">Fechar Km</a>\n                        </div>\n                    </div>\n            </p-card>\n        </div>\n    </div> -->\n</div>\n\n</p-card>\n\n\n<p-dialog header=\"Abrir KM\" [(visible)]=\"openKmDisplay\" modal=\"modal\" showEffect=\"fade\" [style]=\"{width: '400px'}\">\n  <div style=\"line-height: 1.5; text-align: center;\">\n    <mat-form-field>\n      <input\n          [(ngModel)]=\"this.km\"\n          type=\"number\"\n          matInput />\n      <mat-icon matSuffix>slow_motion_video</mat-icon>\n    </mat-form-field>\n <br>\n <br>\n    <button (click)=\"this.openKm()\" mat-raised-button [disabled]=\"this.blockSubmit\" type=\"submit\" color=\"primary\">\n            Salvar\n    </button>\n  </div>\n</p-dialog>\n\n<p-dialog header=\"Fechar KM\" [(visible)]=\"closeKmDisplay\" modal=\"modal\" showEffect=\"fade\" [style]=\"{width: '400px'}\">\n  <div style=\"line-height: 1.5; text-align: center;\">\n    <mat-form-field>\n      <input\n          [(ngModel)]=\"this.km\"\n          type=\"number\"\n          matInput />\n      <mat-icon matSuffix>slow_motion_video</mat-icon>\n    </mat-form-field>\n <br>\n <br>\n    <button (click)=\"this.closeKm()\" mat-raised-button [disabled]=\"this.blockSubmit\" type=\"submit\" color=\"primary\">\n            Salvar\n    </button>\n  </div>\n</p-dialog>\n","import { BUILD_WORD_KEY } from './../../../../shared/utils/builWordKey';\nimport { ValidateDate } from './../../../../shared/utils/validateDate';\nexport const BUILD_PAYLOAD_EXPENSE = function <Expense>($this) {\n\n  $this.managementFormGroup.value.journeyKey = $this.journeyKey;\n  $this.originFormGroup.value.origin = $this.origin;\n  $this.destinationFormGroup.value.destination = $this.destination;\n  $this.managementFormGroup.value.company = {\n    \"id\": \"83298392\",\n    \"name\": \"DR SOUZA\"\n  },\n\n  $this.managementFormGroup.value.driver = {\n    id: $this.driver.id,\n    name: $this.driver.name\n  },\n\n  $this.managementFormGroup.value.vehicle = {\n    id: $this.vehicle.id,\n    name: $this.vehicle.vehicleRegistration\n  },\n\n  $this.managementFormGroup.value.customer = {\n    \"id\": \"8329839da2\",\n    \"name\": \"Inup Systems\"\n  },\n\n  $this.originFormGroup.value.startDate = ValidateDate.parseDate($this.originFormGroup.value.startDate);\n  $this.destinationFormGroup.value.endDate = ValidateDate.parseDate($this.destinationFormGroup.value.endDate);\n\n  let payload = {\n                ...$this.originFormGroup.value,\n                ...$this.destinationFormGroup.value,\n                ...$this.managementFormGroup.value,\n                ...$this.moneyFormGroup.value,\n                byUser: {\n                  id: $this.loginCookieStorage.get().id,\n                  name: $this.loginCookieStorage.get().name,\n                },\n                wordKey: ''\n               }\n\n   payload.wordKey = BUILD_WORD_KEY(payload);\n\n  return payload;\n}\n","import { FormArray, FormGroup, Validators } from '@angular/forms';\n\nexport const CREATE_FORM_AMOUNT = function ($this): FormGroup {\n  return $this.formBuilder.group({\n    title: ['', Validators.required],\n    liters: ['', $this.typeExpense.liquid ? Validators.required : null],\n    description: ['', Validators.required],\n    value: ['', Validators.required],\n  });\n}\n\nexport const ADD_CONTROL = function ($this): void {\n  $this.values = $this.amountFormGroup.get('values') as FormArray;\n  $this.values.push(CREATE_FORM_AMOUNT($this));\n}\n\nexport const REMOVE_CONTROL = function ($this, i): void {\n  $this.values.removeAt(i);\n}\n","import { Expense } from './../../../../shared/model/expense_model';\nimport { GET_POSOTION } from './../../../../shared/utils/position';\nimport { LoginCookieStorage } from './../../../../core/cookieStorage/loginCookieStorage';\nimport { BUILD_AUTOCOMPLETE } from './../../../../shared/utils/buildListAutoCompl';\nimport { ApiPaths } from './../../../../shared/enuns/api-paths.enum';\nimport { ADD_CONTROL, CREATE_FORM_AMOUNT, REMOVE_CONTROL } from './controls_maintence';\nimport { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { MsgService } from 'src/app/core/menssages/msg.service';\nimport { ApiService } from 'src/app/core/services/api.service';\nimport { CepService } from 'src/app/core/services/cep.service';\nimport { BreadcrumbService } from 'src/app/shared/config/app.breadcrumb.service';\nimport { ADD_ALERT, FORM_BUILDER_ALERT, REMOVE_ALERT } from 'src/app/shared/FormBuilderControls/controls_alert_form';\nimport { ADD_DETAIL, FORM_BUILDER_DETAIL, REMOVE_DETAIL } from 'src/app/shared/FormBuilderControls/controls_detail_form';\nimport { DeviceType } from 'src/app/shared/utils/device-type';\nimport { FILTER_DEBOUNCE_TIME } from 'src/app/shared/utils/filterDebounceTime';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { ElementsResponse, Page } from 'src/app/shared/model/response/elementsResponse';\nimport { TOAST_INFO, TOAST_SUCCESSO } from 'src/app/core/menssages/toastEvent';\nimport { SAVE_SUCESS } from 'src/app/core/menssages/menssagens';\nimport { SimpleData } from 'src/app/shared/model/simple_data';\nimport { BUILD_PAYLOAD_EXPENSE } from './build_payload';\n\n@Component({\n  selector: 'app-maintenance',\n  templateUrl: './maintenance.component.html',\n  styleUrls: ['./maintenance.component.scss'],\n})\nexport class RegisterMaintenanceComponent implements OnInit {\n\n  public addDetails = ADD_DETAIL;\n  public removeDetails = REMOVE_DETAIL;\n\n  public addAlert = ADD_ALERT;\n  public removeAlert = REMOVE_ALERT;\n\n  public addAmount =  ADD_CONTROL;\n  public removeAmount = REMOVE_CONTROL;\n\n  private subscription = new Subscription();\n\n  public alertFormGroup: FormGroup;\n  public amountFormGroup: FormGroup;\n  public detailsFormGroup: FormGroup;\n\n  public typeExpense: any = '';\n  public qnt;\n  public note;\n  public km;\n  public date;\n  public id;\n\n  public details: FormArray;\n  public values: FormArray;\n\n  public maintSelected\n\n  public pageTypeExpense = new Page();\n\n  public uploadedFiles = new Array<any>();\n  public formDataList = Array<FormData>();\n  private position;\n  public filterParams = {filterKey: 'targeting', filterValue: null};\n\n  public typeExpenses = [];\n\n  public provider = [\n    { label: 'Posto gentil', value: 'Master' },\n    { label: 'Posto rede souza', value: 'Admin' },\n  ]; //mock\n\n  public drivers = new Array<any>();\n  public vehicles = new Array<any>();\n  public vehicle: any = '';\n  public driver: any = '';\n  public startSelected: boolean;\n  public apiPathFile: ApiPaths.EXPENSES_FILE;\n\n  public mobile = DeviceType.mobileType();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private msg: MsgService,\n    private spinner: NgxSpinnerService,\n    private service: ApiService,\n    private loginCookieStorage: LoginCookieStorage,\n    private router: Router,\n    private cep: CepService,\n    private breadcrumbService: BreadcrumbService\n  ) {\n    this.breadcrumbService.setItems([{ label: 'Registrar Despesas' }]);\n  }\n\n  private loadFormGroup(): void {\n    this.amountFormGroup = this.formBuilder.group({\n      amount: [0],\n      values: this.formBuilder.array([CREATE_FORM_AMOUNT(this)]),\n    });\n\n    this.detailsFormGroup = FORM_BUILDER_DETAIL(this);\n  }\n\n public calculate() {\n    let total = this.amountFormGroup.value.values.reduce(getTotal, 0);\n    function getTotal(total, item) {\n      return total + item.value;\n    }\n    this.amountFormGroup.get('amount').setValue(total);\n  }\n\n  public scrollToEndTypeExpense() {\n\n    const params = {\n                      page: this.pageTypeExpense.nextPage,\n                      size: this.pageTypeExpense.size,\n                      filterKey: this.filterParams.filterKey,\n                      filterValue:  this.filterParams.filterValue\n                    }\n\n    if(this.typeExpenses.length < this.pageTypeExpense.totalElements){\n      this.service.get(ApiPaths.TYPE_EMPLOYEE, params)\n      .subscribe((r: ElementsResponse) => {\n\n        this.pageTypeExpense = r.page;\n\n        this.typeExpenses = r.elements;\n      });\n    }\n  }\n\n  public loadTypeExpense(stepert, value) {\n\n      this.filterParams.filterValue = value;\n\n      const params = {\n                       page: 0,\n                       size: 10,\n                       filterKey: this.filterParams.filterKey,\n                       filterValue:  this.filterParams.filterValue\n                      }\n      this.spinner.show();\n      this.service.get(ApiPaths.TYPE_EXPENSE, params)\n                  .subscribe((r: ElementsResponse) => {\n                      stepert.next();\n                      this.pageTypeExpense = r.page;\n\n                      this.typeExpenses = r.elements;\n\n                      this.spinner.hide();\n                  });\n  }\n\n  public onChangeTypeExpense(event){\n       this.typeExpense = event\n  }\n\n  public onSelectDriver(){\n    this.startSelected = true;\n\n    const msg = 'Nenhum veículo associado a(o) motorista!';\n\n    if(this.driver.driver.associedVehicles){\n     const result = this.driver.driver.associedVehicles.find(({using}) => using == true);\n     if(!result){\n      this.msg.toast(TOAST_INFO(msg));\n      return;\n     }\n    }else{\n      this.msg.toast(TOAST_INFO(msg));\n    }\n  }\n\n  public onSelectVehicle(){\n    this.startSelected = true;\n    this.km = this.vehicle.currentKm;\n\n    const msg = 'Nenhum motorista associado a este veículo!';\n\n    if(!this.vehicle.associedDrivers){\n          this.msg.toast(TOAST_INFO(msg));\n          return;\n        }\n\n    this.driver = this.vehicle.associedDrivers.find(({using}) => using == true );\n\n    if(!this.driver){\n      this.msg.toast(TOAST_INFO(msg));\n      return\n    }\n  }\n\n  public driverSearch(event) {\n        const sub = this.service.search(`${ApiPaths.DRIVER}/${event.key}`)\n                                .subscribe((r: Array<any>) => {\n                                  this.drivers = r;\n                                });\n\n        this.subscription.add(sub);\n  }\n\n  public vehicleSearch(event) {\n\n        const sub = this.service.get(`${ApiPaths.VEHICLE}/${event.key}`, {})\n                                .subscribe((r: Array<any>) => {\n                                  this.vehicles = r;\n                                });\n\n        this.subscription.add(sub);\n  }\n\n  public nextToValue(stepper): void{\n    stepper.next();\n    this.loadFormGroup();\n  }\n\n  public register(stepper){\n\n    this.spinner.show();\n\n    const sub = this.service.post<SimpleData>( `${ApiPaths.EXPENSES}`, BUILD_PAYLOAD_EXPENSE<Expense>(this) )\n                            .subscribe((r) => {\n                              this.id = r.id;\n                              this.spinner.hide();\n                              this.msg.toast(TOAST_SUCCESSO(SAVE_SUCESS));\n                              stepper.next();\n                             });\n\n      this.subscription.add(sub);\n  }\n\n  /* end */\n\n  ngOnInit(): void {\n    GET_POSOTION().then((r) => { this.position = r.coords; });\n    this.loadFormGroup();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<div class=\"p-grid p-fluid\">\n  <div class=\"p-col-12 p-md-12\">\n    <div class=\"card\">\n      <mat-horizontal-stepper [linear]=\"true\" #stepper>\n        <mat-step>\n          <h4>\n            Iniciar Cadastro\n          </h4>\n          <br>\n          <form [ngStyle]=\"{'text-align' : 'center'}\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <div class=\"card\">\n                  <button pButton (click)=\"this.loadTypeExpense(stepper, 'DRIVER')\" label=\"Despesa do(a) Motorista\" type=\"button\" class=\"p-mr-2 p-mb-2 p-button-secondary\"></button>\n                </div>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <div class=\"card\">\n                  <p-button label=\"Despesa do Veículo\" (click)=\"this.loadTypeExpense(stepper, 'VEHICLE')\"  class=\"p-mr-2 p-mb-2\"></p-button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Dados iniciais</h4>\n          <div>\n            <div class=\"p-grid p-formgrid\">\n              <div *ngIf=\"this.filterParams.filterValue == 'VEHICLE'\" class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <p-autoComplete placeholder=\"pesquisar veículo\"\n                  [suggestions]=\"this.vehicles\"\n                  [(ngModel)]=\"this.vehicle\"\n                  inputId=\"search_vehicle\"\n                  (onSelect)=\"onSelectVehicle()\"\n                  (onKeyUp)=\"vehicleSearch($event)\"\n                  field=\"vehicleRegistration\">\n                  <ng-template let-vehicle pTemplate=\"item\">\n                    <div class=\"country-item\">\n                      <div>\n                        <strong>Nome: </strong> {{vehicle.name}}\n                        <br>\n                        <strong>Placa: </strong> {{vehicle.vehicleRegistration}}\n                      </div>\n                    </div>\n                  </ng-template>\n                </p-autoComplete>\n              </div>\n\n              <div *ngIf=\"this.filterParams.filterValue == 'DRIVER'\" class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <p-autoComplete placeholder=\"pesquisar motorista\"\n                  [suggestions]=\"this.drivers\"\n                  [(ngModel)]=\"this.driver\"\n                  inputId=\"search\"\n                  (onSelect)=\"onSelectDriver()\"\n                  (onKeyUp)=\"driverSearch($event)\"\n                  field=\"name\">\n                  <ng-template let-driver pTemplate=\"item\">\n                    <div class=\"country-item\">\n                      <div>\n                        <strong>Motorista: </strong> {{driver.name}}\n                      </div>\n                    </div>\n                  </ng-template>\n                </p-autoComplete>\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <ng-select\n                 bindLabel=\"name\"\n                 (change)=\"this.onChangeTypeExpense($event)\"\n                 [searchable]=\"true\"\n                 [clearable]=\"false\"\n                 placeholder=\"Tipo de despesa\"\n                 [virtualScroll]=\"true\" (scrollToEnd)=\"scrollToEndTypeExpense()\">\n                 <ng-option *ngFor=\"let i of this.typeExpenses\" [value]=\"i\">\n                   <span style=\"text-transform: capitalize;\">{{i.name}}</span>\n                 </ng-option>\n               </ng-select>\n             </div>\n\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton\n                        label=\"Continuar\"\n                        [disabled]=\"!this.startSelected || !this.typeExpense\"\n                        (click)=\"this.nextToValue(stepper)\"\n                        class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n            </div>\n          </div>\n        </mat-step>\n        <mat-step>\n          <h4>Dados iniciais</h4>\n          <div>\n            <div class=\"p-grid p-formgrid\">\n\n                <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                  <input *ngIf=\"this.driver\" readonly [(ngModel)]=\"this.driver.name\" type=\"text\" pInputText\n                    placeholder=\"Motorista\">\n\n                  <input *ngIf=\"!this.driver\" readonly value=\"Nenhum motorista associado\" type=\"text\" pInputText\n                    placeholder=\"Motorista\">\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <p-dropdown [options]=\"this.provider\" placeholder=\"Fornecedor*\">\n                </p-dropdown>\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input *ngIf=\"!this.typeExpense.liquid\" [(ngModel)]=\"this.qnt\" pKeyFilter=\"int\" type=\"text\" pInputText\n                  placeholder=\"Quantidade\">\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input title=\"km\" [(ngModel)]=\"this.km\" pKeyFilter=\"money\" type=\"text\" pInputText\n                  placeholder=\"Km\">\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input  [(ngModel)]=\"this.date\" [dropSpecialCharacters]=\"false\" [hiddenInput]=\"true\" mask=\"00/00/0000\" type=\"text\" pInputText\n                  placeholder=\"Data*\">\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <textarea type=\"text\" [(ngModel)]=\"this.note\" pInputTextarea placeholder=\"Observações\"> </textarea>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton\n                        [disabled]=\"!this.km || !this.date\"\n                        label=\"Continuar\"\n                        (click)=\"stepper.next()\"\n                        class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n            </div>\n          </div>\n        </mat-step>\n        <mat-step>\n          <form [formGroup]=\"this.amountFormGroup\">\n            <h4>Total:\n              <small>\n                {{this.amountFormGroup.value.amount.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })}}\n              </small>\n            </h4>\n            <div>\n              <div formArrayName=\"values\"\n                *ngFor=\"let item of this.amountFormGroup.get('values')['controls']; let i = index;\">\n                <div style=\"padding: 0 !important;\" class=\"p-col-12 p-mb-6 p-lg-4 p-mb-lg-2\">\n                  <h6>\n                    <i class=\"pi pi-times-circle\" style=\"cursor: pointer; font-size: 1rem\"\n                      *ngIf=\"this.amountFormGroup.get('values')['controls'].length > 1\"\n                      (click)=\"this.removeAmount(this, i)\"></i>\n                    Valor:\n                    <span name=\"name\">\n                      <small>\n                        {{item.value.value.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })}}\n                      </small>\n                    </span>\n                  </h6>\n                </div>\n                <div class=\"p-grid p-formgrid\" [formGroupName]=\"i\">\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <input name=\"name\" formControlName=\"title\" pInputText placeholder=\"Titulo\">\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <input type=\"text\" formControlName=\"description\" pInputText placeholder=\"Descrição\" />\n                  </div>\n                  <div *ngIf=\"this.typeExpense.liquid\" class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <input type=\"text\" pKeyFilter=\"money\" formControlName=\"liters\" pInputText placeholder=\"Litros\" />\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <input type=\"text\" (keyup)=\"this.calculate()\"\n                      [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\" currencyMask formControlName=\"value\"\n                      pInputText placeholder=\"Valor\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"stepper.next()\" pButton [disabled]=\"!this.amountFormGroup.valid\" label=\"Continuar\" type=\"button\" class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-0\">\n                <i title=\"Adicionar novo valor\" class=\"material-icons\" style=\"cursor: pointer; font-size: 2rem;\"\n                  (click)=\"addAmount(this)\"> attach_money <small>+</small></i>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Detalhes e Informações</h4>\n          <form  [formGroup]=\"this.detailsFormGroup\">\n            <div>\n              <div formArrayName=\"details\"\n                *ngFor=\"let item of this.detailsFormGroup.get('details')['controls']; let i = index;\">\n                <div style=\"padding: 0 !important;\" class=\"p-col-12 p-mb-6 p-lg-4 p-mb-lg-2\">\n                  <h6>\n                    <i class=\"pi pi-times-circle\" style=\"cursor: pointer; font-size: 1rem\"\n                    *ngIf=\"this.detailsFormGroup.get('details')['controls'].length > 1\"\n                    (click)=\"this.removeDetails(this, i)\"></i>\n                    Título:\n                    <span name=\"name\">\n                      <small>\n                        {{item.value.title}}\n                      </small>\n                    </span>\n                  </h6>\n                </div>\n                <div class=\"p-grid p-formgrid\" [formGroupName]=\"i\">\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <input name=\"name\" formControlName=\"title\" pInputText placeholder=\"Titulo*\">\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <textarea type=\"text\" formControlName=\"note\" pInputTextarea placeholder=\"Descrição*\">\n                    </textarea>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Continuar\" (click)=\"this.stepper.next()\"\n                  [disabled]=\"!this.detailsFormGroup.valid\" type=\"button\" class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-0\">\n                <i title=\"Adicionar detalhes e informaçoes\" class=\"material-icons\" style=\"cursor: pointer; font-size: 1.5rem;\"\n                  (click)=\"addDetails(this)\"> info <small>+</small></i>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Registrar</h4>\n          <br>\n          <form [ngStyle]=\"{'text-align' : 'center'}\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-12 p-lg-6 p-mb-lg-12\">\n                <h6 *ngIf=\"this.filterParams.filterValue == 'VHEICLE'\">Cadastrar Despesa\n                     do veículo,\n                     <span name=\"name\">\n                      {{this.vehicle.name}}\n                    </span>\n                     <span>\n                      {{this.vehicle.vehicleRegistration}}\n                    </span>.\n                </h6>\n\n                <h6>Cadastrar Despesa\n                  do(a) Motorista,\n                  <span name=\"name\">\n                   {{this.driver.name}}\n                 </span>\n             </h6>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-4\">\n                <p-button label=\"Continuar\" (click)=\"this.register(stepper)\" class=\"p-mr-2 p-mb-2\"></p-button>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <app-img [stepper]=\"stepper\" [id]=\"this.id\" [apiPaths]=\"this.apiPathFile\"></app-img>\n        </mat-step>\n        <mat-step>\n          <h4>\n          <span style=\"text-transform: capitalize; font-weight: 400;\">\n           <!--  {{this.personalDataFormGroup.value.name}} -->\n          </span>\n          Cadastrado com sucesso! <i class=\"pi pi-check\" style=\"color: rgb(0, 180, 0); font-size: 1.5rem\"></i> </h4>\n          <br>\n          <form [ngStyle]=\"{'text-align' : 'center'}\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <h6>Cadastrar nova Despesa</h6>\n                <div class=\"card\">\n                  <button pButton label=\"Voltar ao início\" type=\"submit\" class=\"p-mr-2 p-mb-2 p-button-secondary\"></button>\n                </div>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <h6>Visualizar despesas</h6>\n                <div class=\"card\">\n                  <p-button label=\"despesa\" class=\"p-mr-2 p-mb-2\"></p-button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n      </mat-horizontal-stepper>\n      <div class=\"p-grid p-formgrid\">\n        <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-0\">\n          <small>Campos obrigatórios <span style=\"color: red;\">*</span></small>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { BUILD_WORD_KEY } from './../../../../shared/utils/builWordKey';\nimport { ApiPaths } from './../../../../shared/enuns/api-paths.enum';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { MsgService } from 'src/app/core/menssages/msg.service';\nimport { ApiService } from 'src/app/core/services/api.service';\nimport { BreadcrumbService } from 'src/app/shared/config/app.breadcrumb.service';\nimport { TOAST_SUCCESSO } from 'src/app/core/menssages/toastEvent';\nimport { SAVE_SUCESS } from 'src/app/core/menssages/menssagens';\n\n@Component({\n  selector: 'app-type-maintenance',\n  templateUrl: './type-maintenance.component.html',\n  styleUrls: ['./type-maintenance.component.scss']\n})\nexport class RegisterTypeMaintenanceComponent implements OnInit {\n\n  public typeMaintenanceFormGroup: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private msg: MsgService,\n    private spinner: NgxSpinnerService,\n    private service: ApiService,\n    private breadcrumbService: BreadcrumbService\n  ) {\n    this.breadcrumbService.setItems([{ label: 'Registrar tipo de Despesa'}]);\n  }\n\n  private loadFormGroup(): void {\n    this.typeMaintenanceFormGroup = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      description: ['', [Validators.required]],\n      liquid: ['', [Validators.required]],\n      targeting: ['', [Validators.required]],\n      wordKey: ['']\n    });\n  }\n\n  public register(){\n\n    this.spinner.show();\n\n    this.typeMaintenanceFormGroup.value.wordKey = BUILD_WORD_KEY(this.typeMaintenanceFormGroup.value);\n    this.service.post<void>(ApiPaths.TYPE_EXPENSE,\n                            this.typeMaintenanceFormGroup.value)\n                .subscribe(() => {\n                  this.spinner.hide();\n                  this.msg.toast(TOAST_SUCCESSO(SAVE_SUCESS));\n                  this.typeMaintenanceFormGroup.reset();\n                });\n  }\n\n  ngOnInit(): void {\n    this.loadFormGroup();\n  }\n}\n","<div class=\"p-grid p-fluid\">\n  <div class=\"p-col-12 p-md-12\">\n    <div class=\"card\">\n      <form [formGroup]=\"this.typeMaintenanceFormGroup\">\n        <div class=\"p-grid p-formgrid\">\n          <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n            <h6 style=\"font-weight: 700;\">Registrar tipo de Despesa</h6>\n          </div>\n        </div>\n        <div class=\"p-grid p-formgrid\">\n          <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n            <input name=\"name\" formControlName=\"name\" type=\"text\" pInputText placeholder=\"Nome*\">\n          </div>\n          <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n            <input formControlName=\"description\" type=\"text\" pInputText placeholder=\"Descrição*\">\n          </div>\n        </div>\n        <div class=\"p-grid p-formgrid\">\n          <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n            <h6>Dispesa direcionada a:</h6>\n            <input type=\"radio\" id=\"y\" formControlName=\"targeting\" [value]=\"'VEHICLE'\">\n            <label for=\"y\">Veículo</label><br>\n            <input type=\"radio\" id=\"n\" formControlName=\"targeting\" [value]=\"'DRIVER'\">\n            <label for=\"n\">Motorista</label><br>\n          </div>\n          <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n            <h6>É um tipo de liquido?</h6>\n            <input type=\"radio\" id=\"y\" formControlName=\"liquid\" [value]=\"true\">\n            <label for=\"y\">Sim</label><br>\n            <input type=\"radio\" id=\"n\" formControlName=\"liquid\" [value]=\"false\">\n            <label for=\"n\">Não</label><br>\n          </div>\n        </div>\n        <div class=\"p-grid p-formgrid\">\n          <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n            <button pButton label=\"Register\" (click)=\"this.register()\" [disabled]=\"!this.typeMaintenanceFormGroup.valid\"\n              class=\"p-mr-2 p-mb-2\">\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { MsgService } from 'src/app/core/menssages/msg.service';\nimport { ApiService } from 'src/app/core/services/api.service';\nimport { BreadcrumbService } from 'src/app/shared/config/app.breadcrumb.service';\nimport { ApiPaths } from 'src/app/shared/enuns/api-paths.enum';\nimport { MenuModel } from 'src/app/shared/menu/app.menu.model';\n\n@Component({\n  selector: 'app-register-perfil',\n  templateUrl: './register-perfil.component.html',\n  styleUrls: ['./register-perfil.component.scss']\n})\nexport class RegisterPerfilComponent implements OnInit {\n\n  public perfilFormGroup: FormGroup;\n  public loadRecurses = [];\n  public menuItes = [];\n  public searchText = '';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private msg: MsgService,\n    private spinner: NgxSpinnerService,\n    private service: ApiService,\n    public menuModel: MenuModel,\n    private breadcrumbService: BreadcrumbService\n  ) {\n    this.breadcrumbService.setItems([{ label: 'Registrar Perfil' }]);\n  }\n\n  private loadFormGroup(): void {\n    this.perfilFormGroup = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      description: ['', [Validators.required]],\n      wordKey: [],\n      menuItens: ['']\n    });\n  }\n\n  public onChangeHb(event, value) {\n\n    if (event.checked) {\n\n      this.menuItes.push(value.key);\n\n      for (var i = 0; i < value.items.length; i++) {\n        value.items[i].show = true;\n        this.menuItes.push(value.items[i].key)\n      }\n\n      for (var i = 0; i < value?.otherKeys?.length; i++) {\n\n        value.otherKeys[i].show = true;\n        this.menuItes.push(value.otherKeys[i].key);\n      }\n\n    } else {\n\n      const keyIndex = this.menuItes.indexOf(value.key);\n      this.menuItes.splice(keyIndex, 1);\n\n      for (var i = 0; i < value.items.length; i++) {\n        const keyIndex = this.menuItes.indexOf(value.items[i].key);\n        if (keyIndex > -1) {\n          value.items[i].show = false;\n          this.menuItes.splice(keyIndex, 1);\n        }\n\n        for (var i = 0; i < value?.otherKeys.length; i++) {\n          const keyIndex = this.menuItes.indexOf(value.otherKeys[i].key);\n          if (keyIndex > -1) {\n            value.otherKeys[i].show = false;\n            this.menuItes.splice(keyIndex, 1);\n          }\n        }\n      }\n    }\n  }\n\n  public onChange(event, value) {\n\n    if (event.checked) {\n      this.menuItes.push(value.key)\n    } else {\n      const i = this.menuItes.indexOf(value.key);\n      this.menuItes.splice(i, 1);\n    }\n  }\n\n  public register() {\n    this.perfilFormGroup.value.menuItens = this.menuItes;\n    this.perfilFormGroup.value.wordKey = this.perfilFormGroup.value.name;\n\n    this.spinner.show();\n    this.service.post(ApiPaths.PERFIL, this.perfilFormGroup.value)\n      .subscribe(() => {\n        this.spinner.hide();\n      });\n  }\n\n  ngOnInit(): void {\n    this.loadRecurses = [...this.menuModel.model];\n    this.loadFormGroup();\n  }\n\n}\n","<div class=\"p-grid p-fluid\">\n  <div class=\"p-col-12 p-md-12\">\n    <div class=\"card\">\n      <form [formGroup]=\"this.perfilFormGroup\">\n\n        <div class=\"card\">\n          <div class=\"p-grid p-formgrid\">\n            <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n              <h5 style=\"font-weight: 700;\">Perfil</h5>\n            </div>\n          </div>\n          <div class=\"p-grid p-formgrid\">\n            <div class=\"p-col-12 p-mb-4 p-lg-6 p-mb-lg-4\">\n              <input pInputText name=\"name\" formControlName=\"name\" placeholder=\"Nome\">\n            </div>\n            <div class=\"p-col-12 p-mb-4 p-lg-6 p-mb-lg-4\">\n              <textarea pInputTextarea name=\"name\" formControlName=\"description\" placeholder=\"Descrição\">\n              </textarea>\n            </div>\n          </div>\n         </div>\n\n         <div class=\"p-grid p-formgrid\">\n          <div class=\"p-col-12 p-mb-4 p-lg-6 p-mb-lg-4\">\n            <h4>Conceder permissões</h4>\n            <small>Conceda permissões aos recursos e eles serão liberados ao\n                   colaborador vinculado a este perfil.</small>\n          </div>\n         </div>\n\n         <div class=\"p-grid p-formgrid\">\n          <div class=\"p-col-12 p-mb-4 p-lg-6 p-mb-lg-4\">\n            <input pInputText [ngModelOptions]=\"{standalone: true}\"\n                              [(ngModel)]=\"this.searchText\" placeholder=\"Pesquisar Recurso\">\n          </div>\n        </div>\n\n       <div class=\"card\" *ngFor=\"let i of this.loadRecurses[0]['items'] | filter: this.searchText \">\n        <div class=\"p-grid p-formgrid\">\n          <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n            <h5 style=\"font-weight: 700;\">\n              {{i.label}}\n              <p-inputSwitch (onChange)=\"this.onChangeHb($event, i)\"> </p-inputSwitch>\n            </h5>\n          </div>\n        </div>\n        <div class=\"p-grid p-formgrid\">\n          <div *ngIf=\"!i.items\" class=\"p-col-3 p-mb-2 p-lg-2 p-mb-lg-3\">\n            <div >\n             <h6>{{i.label}}</h6>\n            <p-inputSwitch (onChange)=\"this.onChange($event, i)\"> </p-inputSwitch>\n            </div>\n          </div>\n            <div *ngFor=\"let im of i.items\" class=\"p-col-3 p-mb-2 p-lg-2 p-mb-lg-3\">\n              <div *ngIf=\"this.menuItes.indexOf(i.key) > -1\">\n               <h6>{{im.label}}</h6>\n              <p-inputSwitch [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"im.show\"  (onChange)=\"this.onChange($event, im)\"> </p-inputSwitch>\n              </div>\n            </div>\n            <div *ngFor=\"let e of i.otherKeys\" class=\"p-col-3 p-mb-2 p-lg-2 p-mb-lg-3\">\n              <div *ngIf=\"this.menuItes.indexOf(e.key) > -1\">\n               <h6>{{e.label}}</h6>\n              <p-inputSwitch [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"e.show\" (onChange)=\"this.onChange($event, e)\"> </p-inputSwitch>\n              </div>\n            </div>\n        </div>\n       </div>\n\n       <div class=\"card\" *ngFor=\"let i of this.loadRecurses[2]['items'] | filter: this.searchText \">\n        <div class=\"p-grid p-formgrid\">\n          <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n            <h5 style=\"font-weight: 700;\">\n              {{i.label}}\n              <p-inputSwitch (onChange)=\"this.onChangeHb($event, i)\"> </p-inputSwitch>\n            </h5>\n          </div>\n        </div>\n        <div class=\"p-grid p-formgrid\">\n          <div *ngIf=\"!i.items\" class=\"p-col-3 p-mb-2 p-lg-2 p-mb-lg-3\">\n            <div >\n             <h6>{{i.label}}</h6>\n            <p-inputSwitch (onChange)=\"this.onChange($event, i)\"> </p-inputSwitch>\n            </div>\n          </div>\n            <div *ngFor=\"let im of i.items\" class=\"p-col-3 p-mb-2 p-lg-2 p-mb-lg-3\">\n              <div *ngIf=\"this.menuItes.indexOf(i.key) > -1\">\n               <h6>{{im.label}}</h6>\n              <p-inputSwitch [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"im.show\"  (onChange)=\"this.onChange($event, im)\"> </p-inputSwitch>\n              </div>\n            </div>\n        </div>\n       </div>\n\n     <div class=\"p-grid p-formgrid\">\n          <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n            <button pButton label=\"Cadastrar\" (click)=\"this.register()\" [disabled]=\"!this.perfilFormGroup.valid\"\n              class=\"p-mr-2 p-mb-2\">\n            </button>\n          </div>\n        </div>\n      </form>\n      </div>\n      </div>\n      </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register-report',\n  templateUrl: './register-report.component.html',\n  styleUrls: ['./register-report.component.scss']\n})\nexport class RegisterReportComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>register-report works!</p>\n","import { ROUTES_CORES } from './../../core/routes/routesCore';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  imports: [RouterModule.forChild(ROUTES_CORES.registerRoutes)],\n  exports: [RouterModule],\n})\nexport class RegisterRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register-scheduling',\n  templateUrl: './register-scheduling.component.html',\n  styleUrls: ['./register-scheduling.component.scss']\n})\nexport class RegisterSchedulingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>register-scheduling works!</p>\n","import { BUILD_WORD_KEY } from './../../../shared/utils/builWordKey';\n\nexport const BUILD_PAYLOAD_SUPPLIER = function ($this) {\n  let payload = {\n    ...$this.companyFormGroup.value,\n    byUser: {\n      id: $this.loginCookieStorage.get().id,\n      name: $this.loginCookieStorage.get().name,\n    },\n    companyData: buildCompanyData($this),\n\n    wordKey: BUILD_WORD_KEY({ ...$this.companyFormGroup.value }),\n  };\n\n  return payload;\n};\n\nfunction buildCompanyData($this) {\n  return $this.addressFormGroup.value.address.map((a) => {\n    let location = null;\n\n    if (a.latlng) {\n      const latlng: any[] = a.latlng.replace(' ', '').split(',');\n      location = { lat: latlng[0], lng: latlng[1] };\n    }\n    return {\n      address: {\n        postalCode: a.postalCode,\n        street: a.street,\n        number: a.number,\n        neighborhood: a.neighborhood,\n        complement: a.complement,\n        city: a.city,\n        state: a.state,\n        location: location,\n      },\n      contact: {\n        email: a.email,\n        phones: a.phones.map((result) => {\n          return result.phone;\n        }),\n      },\n    };\n  });\n}\n","import { BUILD_LINK_GOOGLE_MAPS } from './../../../shared/utils/build_link_googleMaps';\nimport { BUILD_PAYLOAD_SUPPLIER } from './build_payload';\nimport { LoginCookieStorage } from 'src/app/core/cookieStorage/loginCookieStorage';\nimport { FormGroup, FormArray, FormBuilder, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { MsgService } from 'src/app/core/menssages/msg.service';\nimport { ApiService } from 'src/app/core/services/api.service';\nimport { CepService } from 'src/app/core/services/cep.service';\nimport { BreadcrumbService } from 'src/app/shared/config/app.breadcrumb.service';\nimport { DeviceType } from 'src/app/shared/utils/device-type';\nimport { Subscription } from 'rxjs';\nimport { MatStepper } from '@angular/material/stepper';\nimport { ValidateDoc } from 'src/app/shared/utils/validateDoc';\nimport { TOAST_ERROR, TOAST_SUCCESSO } from 'src/app/core/menssages/toastEvent';\nimport { ApiPaths } from 'src/app/shared/enuns/api-paths.enum';\nimport { SAVE_SUCESS } from 'src/app/core/menssages/menssagens';\nimport { ADD_DETAIL, FORM_BUILDER_DETAIL, REMOVE_DETAIL } from 'src/app/shared/FormBuilderControls/controls_detail_form';\nimport { SimpleData } from 'src/app/shared/model/simple_data';\nimport { Adress } from 'src/app/shared/model/adress';\n@Component({\n  selector: 'app-register-supplier',\n  templateUrl: './register-supplier.component.html',\n  styleUrls: ['./register-supplier.component.scss']\n})\nexport class RegisterSupplierComponent implements OnInit {\n\n  public companyFormGroup: FormGroup;\n  public detailsFormGroup: FormGroup;\n  public contactFormGroup: FormGroup;\n  public addressFormGroup: FormGroup;\n\n  public apiPathFile: ApiPaths.SUPPLIERS_FILE;\n\n  public addDetail = ADD_DETAIL;\n  public removeDetail = REMOVE_DETAIL;\n\n  private subscription = new Subscription();\n  public id: string;\n\n  public phones: FormArray;\n  public details: FormArray;\n  public address: FormArray;\n\n  public mobile =  DeviceType.mobileType();\n\n  public alerts: FormArray;\n  public alertSh: boolean;\n\n  public selectedMtStatus;\n  public isLinear = false;\n  public stepper: MatStepper;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private loginCookieStorage: LoginCookieStorage,\n    private msg: MsgService,\n    private spinner: NgxSpinnerService,\n    private service: ApiService,\n    private router: Router,\n    private cep: CepService,\n    private breadcrumbService: BreadcrumbService\n  ) {\n    this.breadcrumbService.setItems([{ label: 'Registrar Fornecedor' }]);\n  }\n\n  private loadFormGroup(): void {\n    this.companyFormGroup = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      fantasyName: ['', [Validators.required]],\n      taxId: ['', [ValidateDoc.validateCNPJ]],\n      stateRegistration: ['', [Validators.required]],\n      municipalRegistration: ['', [Validators.required]]\n     }\n    );\n\n    this.addressFormGroup = this.formBuilder.group({\n      address: this.formBuilder.array([ this.createFormAddress() ]),\n     }\n   );\n\n    this.detailsFormGroup = FORM_BUILDER_DETAIL(this)\n  }\n\n  public createFormPhone(): FormGroup {\n    return this.formBuilder.group({\n      phone: ['', [Validators.required]]\n    });\n  }\n\n  public addPhone(i): void {\n    this.phones = this.addressFormGroup.get('address')['controls'][i].get('phones')['controls'] as FormArray;\n    this.phones.push(this.createFormPhone());\n  }\n\n  public removePhone(i): void {\n    this.phones.removeAt(i);\n  }\n\n  public createFormAddress(): FormGroup {\n    return this.formBuilder.group({\n      postalCode: ['', [Validators.required]],\n      street: ['',  [Validators.required]],\n      number: ['', [Validators.required]],\n      neighborhood: ['', [Validators.required]],\n      complement: [''],\n      city: ['', [Validators.required]],\n      state: ['', [Validators.required]],\n      phones: this.formBuilder.array([ this.createFormPhone() ]),\n      email: [''],\n      latlng: ['', [Validators.required]]\n     }\n    );\n  }\n\n  public buildLinkGoogleMaps(index){\n    const addres: Adress =  this.addressFormGroup.get('address')['controls'][index].value;\n    BUILD_LINK_GOOGLE_MAPS(addres, this);\n  }\n\n  public addPhoneAddress(): void {\n    this.phones = this.addressFormGroup.get('address')['controls'].get('phones')['controls'] as FormArray;\n    this.phones.push(this.createFormPhone());\n  }\n\n  public addPAddress(): void {\n    this.address = this.addressFormGroup.get('address') as FormArray;\n    this.address.push(this.createFormAddress());\n  }\n\n  public removeAddress(i): void {\n    this.address.removeAt(i);\n  }\n\n  public cancelAlert() {\n    this.alertSh = false;\n  }\n\n  public reset(stepper){\n    this.loadFormGroup();\n     stepper.reset();\n  }\n\n  public keyUpcep( cep, index ): void{\n      if( cep.length == 9 ){\n        this.spinner.show();\n        this.cep.get( cep ).subscribe((r) => {\n          if(!r.cep){ this.msg.toast(TOAST_ERROR('CEP não encontrado!')); }\n              this.spinner.hide();\n              this.addressFormGroup.get('address')['controls'][index].get('city').setValue(r.city);\n              this.addressFormGroup.get('address')['controls'][index].get('neighborhood').setValue(r.neighborhood);\n              this.addressFormGroup.get('address')['controls'][index].get('state').setValue(r.state);\n              this.addressFormGroup.get('address')['controls'][index].get('street').setValue(r.street);\n        });\n      }\n  }\n\n  public register(stepper): void{\n\n    this.spinner.show();\n    const sub = this.service\n                    .post<SimpleData>(`${ApiPaths.SUPPLIERS}`, BUILD_PAYLOAD_SUPPLIER(this))\n                    .subscribe((r) => {\n                       this.id = r.id;\n          stepper.next()\n        this.spinner.hide();\n        this.msg.toast(TOAST_SUCCESSO(SAVE_SUCESS));\n      });\n    this.subscription.add(sub);\n    return\n  }\n\n  ngOnInit(): void {\n    this.loadFormGroup();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<div *ngIf=\"!mobile\" class=\"p-grid p-fluid\">\n  <div class=\"p-col-12 p-md-12\">\n    <div class=\"card\">\n      <mat-horizontal-stepper [linear]=\"true\" #stepper>\n        <mat-step>\n          <h4>Dados Iniciais</h4>\n          <form [formGroup]=\"this.companyFormGroup\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input mask=\"00.000.000/0000-00\" formControlName=\"taxId\" type=\"text\" pInputText placeholder=\"CNPJ*\">\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input formControlName=\"name\" [ngStyle]=\"{'text-transform' : 'capitalize'}\" type=\"text\" pInputText\n                  placeholder=\"Razão social*\">\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input formControlName=\"fantasyName\" [ngStyle]=\"{'text-transform' : 'capitalize'}\" type=\"text\"\n                  pInputText placeholder=\"Nome fantasia*\">\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input formControlName=\"stateRegistration\" [ngStyle]=\"{'text-transform' : 'capitalize'}\" type=\"text\"\n                  pInputText placeholder=\"Inscrição estadual*\">\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input formControlName=\"municipalRegistration\" [ngStyle]=\"{'text-transform' : 'capitalize'}\" type=\"text\"\n                  pInputText placeholder=\"Inscrição municipal*\">\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Continuar\" (click)=\"this.stepper.next()\"\n                  [disabled]=\"!this.companyFormGroup.valid\" class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Endereço</h4>\n          <form [formGroup]=\"this.addressFormGroup\">\n            <div>\n              <div formArrayName=\"address\"\n                *ngFor=\"let item of this.addressFormGroup.get('address')['controls']; let i = index;\">\n                <div style=\"padding: 0 !important;\" class=\"p-col-12 p-mb-6 p-lg-4 p-mb-lg-2\">\n                  <i class=\"pi pi-times-circle\" style=\"cursor: pointer; font-size: 1rem\"\n                    *ngIf=\"this.addressFormGroup.get('address')['controls'].length > 1\"\n                    (click)=\"this.removeAddress(i)\"></i>\n                </div>\n                <div class=\"p-grid p-formgrid\" [formGroupName]=\"i\">\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <input (keyup)=\"this.keyUpcep($event.target.value, i)\" formControlName=\"postalCode\" mask=\"00000-000\"\n                      type=\"text\" pInputText placeholder=\"CEP*\">\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <input type=\"text\" formControlName=\"street\" pInputText placeholder=\"Rua*\" />\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <input type=\"text\" pKeyFilter=\"int\" formControlName=\"number\" pInputText placeholder=\"Número*\" />\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <input type=\"text\" formControlName=\"complement\" pInputText placeholder=\"Complemento\" />\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <input type=\"text\" formControlName=\"neighborhood\" pInputText placeholder=\"Bairro*\" />\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <input type=\"text\" formControlName=\"city\" pInputText placeholder=\"Cidade*\" />\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <input formControlName=\"state\" type=\"text\" pInputText placeholder=\"UF*\">\n                    <br>\n                    <br>\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <input\n                    required\n                    formControlName=\"latlng\"\n                    type=\"text\"\n                    pInputText\n                    placeholder=\"Latitude/Longitude\">\n                  </div>\n                  <div class=\"p-col-12 p-mb-12 p-lg-12 p-mb-lg-12\">\n                    <a style=\"cursor: pointer;\" (click)=\"this.buildLinkGoogleMaps(i)\" class=\"p-mr-2 p-mb-2\">\n                      <small>\n                        Obter latitude e longitude no google maps\n                      </small>\n                    </a>\n                    <br>\n                    <br>\n                  </div>\n                  <div class=\"p-col-12 p-mb-12 p-lg-12 p-mb-lg-12\">\n                    <strong>Contatos</strong>\n                    <br>\n                    <br>\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br\n                      *ngIf=\"this.addressFormGroup.get('address')['controls'][i].get('phones')['controls'].length > 1\">\n                    <input formControlName=\"email\" type=\"text\" pInputText placeholder=\"E-mail\">\n                  </div>\n                  <div formArrayName=\"phones\"\n                    *ngFor=\"let item of this.addressFormGroup.get('address')['controls'][i].get('phones')['controls']; let iph = index;\"\n                    class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <div [formGroupName]=\"iph\">\n                      <i class=\"pi pi-times-circle\" style=\"cursor: pointer; font-size: 1rem\"\n                        *ngIf=\"this.addressFormGroup.get('address')['controls'][i].get('phones')['controls'].length > 1\"\n                        (click)=\"this.removePhone(i)\"></i>\n                      <input formControlName=\"phone\" mask=\"(00) 00000-0000||(00) 0000-0000\" type=\"phone\" pInputText\n                        placeholder=\"Telefone*\">\n                    </div>\n                  </div>\n                </div>\n                <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                  <i title=\"Adicionar novo contato\" class=\"material-icons\" style=\"cursor: pointer; font-size: 2rem;\"\n                    (click)=\"addPhone(i)\">smartphone <small>+</small></i>\n                </div>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Continuar\" (click)=\"this.stepper.next()\"\n                  [disabled]=\"!this.addressFormGroup.valid\" type=\"button\" class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-0\">\n                <i title=\"Adicionar detalhes e informaçoes\" class=\"material-icons\"\n                  style=\"cursor: pointer; font-size: 1.5rem;\" (click)=\"this.addPAddress()\"> info <small>+</small></i>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Detalhes e Informações</h4>\n          <form [formGroup]=\"this.detailsFormGroup\">\n            <div>\n              <div formArrayName=\"details\"\n                *ngFor=\"let item of this.detailsFormGroup.get('details')['controls']; let i = index;\">\n                <div style=\"padding: 0 !important;\" class=\"p-col-12 p-mb-6 p-lg-4 p-mb-lg-2\">\n                  <h6>\n                    <i class=\"pi pi-times-circle\" style=\"cursor: pointer; font-size: 1rem\"\n                      *ngIf=\"this.detailsFormGroup.get('details')['controls'].length > 1\"\n                      (click)=\"this.removeDetail(this, i)\"></i>\n                    Título:\n                    <span name=\"name\">\n                      <small>\n                        {{item.value.title}}\n                      </small>\n                    </span>\n                  </h6>\n                </div>\n                <div class=\"p-grid p-formgrid\" [formGroupName]=\"i\">\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <input name=\"name\" formControlName=\"title\" pInputText placeholder=\"Titulo*\">\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <textarea type=\"text\" formControlName=\"note\" pInputTextarea placeholder=\"Descrição*\">\n                  </textarea>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Continuar\" (click)=\"this.stepper.next()\"\n                  [disabled]=\"!this.detailsFormGroup.valid\" type=\"button\" class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-0\">\n                <i title=\"Adicionar detalhes e informaçoes\" class=\"material-icons\"\n                  style=\"cursor: pointer; font-size: 1.5rem;\" (click)=\"this.addDetail(this)\"> info <small>+</small></i>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Registrar</h4>\n          <br>\n          <form>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-12 p-lg-6 p-mb-lg-12\">\n                <h6>Continuar cadastro do cliente\n                  <span name=\"name\">\n                    {{this.companyFormGroup.value.fantasyName}}\n                  </span>.\n\n                </h6>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-4\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"voltar\" type=\"button\"\n                  class=\"p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-4\">\n                <p-button label=\"Continuar\" (click)=\"this.register(stepper)\" class=\"p-mr-2 p-mb-2\"></p-button>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Alertas</h4>\n          <div *ngIf=\"!this.alertSh\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <h5>Deseja adiconar alertas?</h5>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Sim\" (click)=\"this.alertSh = true;\" type=\"button\"\n                  class=\"p-button-success p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-2 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Pular\" (click)=\"this.stepper.next()\" type=\"button\"\n                  class=\"p-mr-2 p-mb-2\"></button>\n              </div>\n            </div>\n          </div>\n          <div *ngIf=\"this.alertSh\">\n            <app-alert [loadApp]=\"true\" [id]=\"this.id\" [stepper]=\"stepper\"></app-alert>\n          </div>\n        </mat-step>\n        <mat-step>\n          <app-img [stepper]=\"stepper\" [id]=\"this.id\" [apiPaths]=\"this.apiPathFile\"></app-img>\n        </mat-step>\n        <mat-step>\n          <h4>\n            <span style=\"text-transform: capitalize; font-weight: 400;\">\n              {{this.companyFormGroup.value.fantasyName}}\n            </span>\n            Cadastrado com sucesso! <i class=\"pi pi-check\" style=\"color: rgb(0, 180, 0); font-size: 1.5rem\"></i>\n          </h4>\n          <br>\n          <form [ngStyle]=\"{'text-align' : 'center'}\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <h6>Cadastrar novo cliente</h6>\n                <div class=\"card\">\n                  <button (click)=\"reset(stepper)\" pButton label=\"Voltar ao início\" type=\"submit\"\n                    class=\"p-mr-2 p-mb-2 p-button-secondary\"></button>\n                </div>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <h6>Visualizar Fornecedores</h6>\n                <div class=\"card\">\n                  <p-button (click)=\"this.router.navigate(['/query/type/supplier'])\" label=\"Fornecedores\"\n                    class=\"p-mr-2 p-mb-2\"></p-button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n      </mat-horizontal-stepper>\n      <div class=\"p-grid p-formgrid\">\n        <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-0\">\n          <small>Campos obrigatórios <span style=\"color: red;\">*</span></small>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { BUILD_WORD_KEY } from './../../../shared/utils/builWordKey';\nexport const BUILD_PAYLOAD_VEHICLE = function buildPayload<Vehicle>($this) {\n\n    let driver\n\n    if($this.driver){\n      const thirdOrAggregates = $this.driver.driver.typeAssociation[$this.driver.driver.typeAssociation.length -1].thirdOrAggregates;\n      driver = { id: $this.driver.id,  name: $this.driver.name, thirdOrAggregates: thirdOrAggregates }\n    }\n\n    return {\n      notifys: $this.notifys,\n      ...$this.vehicleFormGroup.value,\n      controls: $this.controlsFormGroup.value.controls,\n      details: $this.detailsFormGroup.value.details,\n      associedDriver: $this.driver ? driver : null,\n       wordKey: BUILD_WORD_KEY($this.vehicleFormGroup.value) +\n      ' '\n      +\n      BUILD_WORD_KEY($this.detailsFormGroup.value.details) +\n      ' '\n      +\n      BUILD_WORD_KEY(driver)\n    }\n}\n","import { FormArray, FormGroup, Validators } from '@angular/forms';\n\nexport const CREATE_FORM_CONTROLS = function create(component): FormGroup {\n  return component.formBuilder.group({\n    title: ['', [Validators.required]],\n    km: ['', [Validators.required]],\n    decription: ['', [Validators.required]],\n  });\n}\n\nexport const ADD_CONTROL = function add(component): void {\n  component.controls = component.controlsFormGroup.get('controls') as FormArray;\n  component.controls.push(CREATE_FORM_CONTROLS(component));\n}\n\nexport const REMOVE_CONTROL = function remove(component, i): void {\n  component.controls.removeAt(i);\n}\n","import { ADD_ALERT, REMOVE_ALERT } from './../../../shared/FormBuilderControls/controls_alert_form';\nimport { ADD_DETAIL, CREATE_FORM_DETAIL, FORM_BUILDER_DETAIL, REMOVE_DETAIL } from '../../../shared/FormBuilderControls/controls_detail_form';\nimport { FORM_BUILDER_ALERT } from '../../../shared/FormBuilderControls/controls_alert_form';\n\nimport { CREATE_FORM_CONTROLS, ADD_CONTROL, REMOVE_CONTROL } from './controls_controls_form';\nimport { BUILD_PAYLOAD_VEHICLE } from './build_payload';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Subscription } from 'rxjs';\nimport { INPUT_VALIDATE_ERROR, INVALID_DATE, SAVE_SUCESS } from 'src/app/core/menssages/menssagens';\nimport { MsgService } from 'src/app/core/menssages/msg.service';\nimport { TOAST_ERROR, TOAST_SUCCESSO } from 'src/app/core/menssages/toastEvent';\nimport { ApiService } from 'src/app/core/services/api.service';\nimport { ApiPaths } from 'src/app/shared/enuns/api-paths.enum';\nimport { BreadcrumbService } from 'src/app/shared/config/app.breadcrumb.service';\nimport { DeviceType } from 'src/app/shared/utils/device-type';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { FILTER_DEBOUNCE_TIME } from 'src/app/shared/utils/filterDebounceTime';\nimport { SimpleData } from 'src/app/shared/model/simple_data';\nimport { ElementsResponse } from 'src/app/shared/model/response/elementsResponse';\nimport { Router } from '@angular/router';\n\nconst TYPE_VEHICLES = [ {value: 'CAR', name: 'Carro'},\n                        {value: 'VAN', name: 'Carrinha'},\n                        {value: 'TRUCK', name: 'Caminhão'},\n                        {value: 'MOTORCYCLE', name: 'Motociclos'},\n                        {value: 'OUTHER', name: 'Outros'}];\n\n@Component({\n  selector: 'app-register-vehicles',\n  templateUrl: './register-vehicles.component.html',\n  styleUrls: ['./register-vehicles.component.scss']\n})\nexport class RegisterVehiclesComponent implements OnInit {\n\n  public addControl = ADD_CONTROL;\n  public removeControl = REMOVE_CONTROL;\n\n  public addDetail = ADD_DETAIL;\n  public removeDetail = REMOVE_DETAIL;\n\n  public addAlert = ADD_ALERT;\n  public removeAlert = REMOVE_ALERT;\n\n  public vehicleFormGroup: FormGroup;\n  public detailsFormGroup: FormGroup;\n  public alertFormGroup: FormGroup;\n  public controlsFormGroup: FormGroup;\n\n  public details: FormArray;\n  public controls: FormArray;\n  public alerts: FormArray;\n\n  public blockSubmit = false;\n  public type_vehicles = TYPE_VEHICLES;\n  private subscription = new Subscription();\n\n  public mobile = DeviceType.mobileType();\n\n  public driver;\n  public drivers = [];\n\n  public uploadedFiles = new Array<any>();\n  public formDataList = Array<FormData>();\n\n  public addDriver: boolean;\n  public alertSh: boolean;\n  public vehicle: any = '';\n  public apiPathFile = ApiPaths.VEHICLE_FILE;\n  public perfis = [];\n  public notifys;\n\n  public vehicles_type = [\n    {label: 'Aventureiro compacto', value: 'Aventureiro compacto'},\n    {label: 'Hatch subcompacto', value: 'Hatch subcompacto'},\n    {label: 'Hatch compacto', value: 'Hatch compacto'},\n    {label: 'Hatch médio', value: 'Hatch médio'},\n    {label: 'Sedã compacto', value: 'Sedã compacto'},\n    {label: 'Sedã médio', value: 'Sedã médio'},\n    {label: 'Sedã grande', value: 'Sedã grande'},\n    {label: 'Familiar compacto', value: 'Familiar compacto'},\n    {label: 'Familiar médio', value: 'Familiar médio'},\n    {label: 'Familiar grande', value: 'Familiar grande'},\n    {label: 'Picape compacta', value: 'Picape compacta'},\n    {label: 'Picape média', value: 'Picape média'},\n    {label: 'Picape grande', value: 'Picape grande'},\n    {label: 'SUV compacto', value: 'SUV compacto'},\n    {label: 'SUV médio', value: 'SUV médio'},\n    {label: 'SUV grande', value: 'SUV grande'},\n    {label: 'Esportivo compacto', value: 'Esportivo compacto'},\n    {label: 'Esportivo médio', value: 'Esportivo médio'},\n    {label: 'Esportivo grande', value: 'Esportivo grande'},\n    {label: 'Conversível compacto', value: 'Conversível compacto'},\n    {label: 'Conversível médio', value: 'Conversível médio'},\n    {label: 'Conversível grande', value: 'Conversível grande'},\n    {label: 'Van média', value: 'Van média'},\n    {label: 'Van grande', value: 'Van grande'},\n    {label: 'Jipe', value: 'Jipe'},\n    {label: 'Furgão compacto', value: 'Furgão compacto'},\n    {label: 'Furgão médio', value: 'Furgão médio'},\n    {label: 'Caminhão urbano', value: 'Caminhão urbano'},\n    {label: 'Trator', value: 'Trator'},\n  ].sort(function (a, b) {\n    return a.label < b.label ? -1 : a.label > b.label ? 1 : 0;\n  }); //mock\n\n  public fuelTypes = [\n    {label: 'Gasolina', value: 'Gasolina'},\n    {label: 'Etanol', value: 'Etanol'},\n    {label: 'Diesel ', value: 'Diesel'},\n    {label: 'GNV', value: 'GNV'},\n    {label: 'Eletricidade', value: 'Eletricidade'},\n  ].sort(function (a, b) {\n    return a.label < b.label ? -1 : a.label > b.label ? 1 : 0;\n  }); //mock\n\n  public vehiclesTypeFunction = [\n    {label: 'Escolta', value: 'Escolta'},\n    {label: 'Transporte', value: 'Transporte'},\n    {label: 'Outros', value: 'Outros'},\n  ] // mock\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private msg: MsgService,\n    public router: Router,\n    private spinner: NgxSpinnerService,\n    private service: ApiService,\n    private breadcrumbService: BreadcrumbService,\n    public domSanitizer: DomSanitizer\n  ) {\n    this.breadcrumbService.setItems([{label: 'Registrar veículo'}]);\n  }\n\n  private loadFormGroup(): void {\n    this.vehicleFormGroup = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      brand: ['', [Validators.required]],\n      currentKm: ['', [Validators.required]],\n      type: ['', [Validators.required]],\n      fuelType: ['', [Validators.required]],\n      vehicleRegistration: ['', [Validators.required]],\n      yearManufacture: ['', [Validators.required]],\n      yaerModel: ['', [Validators.required]],\n      uf: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      country: ['', [Validators.required]],\n      axleQuantity: ['', [Validators.required]],\n      color: ['', [Validators.required]],\n      consumptionCoefficient: ['', [Validators.required]],\n      tankCapacity: ['', [Validators.required]],\n      chassisNumber: ['', [Validators.required]],\n      vehicleFunction: ['', [Validators.required]],\n      description: [''],\n     // driver: ['']\n     },\n    );\n\n    this.detailsFormGroup = FORM_BUILDER_DETAIL(this)\n\n    this.controlsFormGroup = this.formBuilder.group({\n      controls: this.formBuilder.array([ CREATE_FORM_CONTROLS(this) ]),\n    });\n  }\n\n    public cancelAlert(){\n      this.alertSh = false;\n      this.alertFormGroup.reset();\n    }\n\n  /* END */\n\n  public driverCancel(){\n    this.addDriver = false;\n    this.driver = null;\n  }\n\n  public onClick(){\n    this.loadPerfis();\n }\n\n  public reset(stepper) {\n    this.loadFormGroup();\n    stepper.reset();\n  }\n\n  public searchDriver(event): void{\n\n      this.service.get(`${ApiPaths.DRIVER}/${event.key}`, {})\n                  .subscribe((r: Array<any>) => {\n                    this.drivers = r;\n                  });\n  }\n\n  private resetForm():void{\n    this.vehicleFormGroup.reset();\n }\n\n public loadPerfis(){\n    this.spinner.show();\n    this.service.get(ApiPaths.PERFIL, {page: 0, size: 1000})\n                .subscribe((r: ElementsResponse) => {\n\n                this.perfis = r.elements.map((r) => {\n                                  return {label: r.name, value: r.name};\n                              });\n\n                 this.spinner.hide();\n\n                });\n}\n\n\n  public register(stepper): void{\n\n      this.spinner.show();\n\n     const sub = this.service.post<SimpleData>( `${ApiPaths.VEHICLE}`, BUILD_PAYLOAD_VEHICLE(this) )\n                             .subscribe((r) => {\n                                  console.log(r)\n                                  this.vehicle = r;\n                                  stepper.next()\n                                  this.spinner.hide();\n                                  this.msg.toast(TOAST_SUCCESSO(SAVE_SUCESS));\n                                  this.resetForm();\n                             });\n\n      this.subscription.add(sub);\n  }\n\n  ngOnInit(): void {\n    this.loadFormGroup();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","\n<div class=\"p-grid p-fluid\">\n  <div class=\"p-col-12 p-md-12\">\n    <div class=\"card\">\n      <mat-horizontal-stepper [linear]=\"true\" #stepper>\n        <mat-step>\n          <h4>Veículo</h4>\n          <form [formGroup]=\"this.vehicleFormGroup\">\n            <div class=\"p-grid p-formgrid\">\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input name=\"name\" formControlName=\"name\" type=\"text\" pInputText placeholder=\"Nome*\">\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input formControlName=\"brand\"\n                 type=\"text\" pInputText placeholder=\"Fabricante*\">\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input pKeyFilter=\"int\" formControlName=\"currentKm\"\n                 type=\"text\" pInputText placeholder=\"Km atual*\">\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <p-dropdown  formControlName=\"type\" [options]=\"this.vehicles_type\" placeholder=\"Tipo de veículo*\">\n                </p-dropdown>\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <p-dropdown formControlName=\"fuelType\" [options]=\"this.fuelTypes\" placeholder=\"Tipo de combustível*\">\n                </p-dropdown>\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input name=\"upper\" formControlName=\"vehicleRegistration\"\n                  type=\"text\" pInputText placeholder=\"Placa*\">\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input formControlName=\"yearManufacture\"\n                  type=\"text\" [dropSpecialCharacters]=\"false\" [hiddenInput]=\"true\" mask=\"0000\"  pInputText placeholder=\"Ano de fabricação*\">\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input formControlName=\"yaerModel\"\n                  type=\"text\" [dropSpecialCharacters]=\"false\" [hiddenInput]=\"true\" mask=\"0000\" pInputText placeholder=\"Ano do modelo*\">\n              </div>\n\n              <div  class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input name=\"upper\" maxlength=\"2\" formControlName=\"uf\"\n                  type=\"text\" pInputText placeholder=\"UF*\">\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input formControlName=\"city\"\n                  type=\"text\" pInputText placeholder=\"Cidade*\">\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input formControlName=\"country\"\n                  type=\"text\" pInputText placeholder=\"País*\">\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input pKeyFilter=\"int\" formControlName=\"axleQuantity\"\n                  type=\"text\" pInputText placeholder=\"Quantidade de eixo*\">\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input formControlName=\"color\"\n                  type=\"text\" pInputText placeholder=\"Cor*\">\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input pKeyFilter=\"int\" formControlName=\"consumptionCoefficient\"\n                  type=\"text\" pInputText placeholder=\"Coeficiente de consumo*\">\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input pKeyFilter=\"int\" formControlName=\"tankCapacity\"\n                  type=\"text\" pInputText placeholder=\"Capacidade do tanque*\">\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input name=\"upper\" formControlName=\"chassisNumber\"\n                  type=\"text\" pInputText placeholder=\"Número de chassi\">\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <p-dropdown formControlName=\"vehicleFunction\" [options]=\"this.vehiclesTypeFunction\" placeholder=\"Função do veículo*\">\n                </p-dropdown>\n              </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <textarea formControlName=\"description\"\n                  type=\"text\" pInputTextarea placeholder=\"Descrição*\">\n                </textarea>\n              </div>\n\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Continuar\" (click)=\"this.stepper.next()\" [disabled]=\"!this.vehicleFormGroup.valid\"\n                  class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Adicionar Controles</h4>\n          <div class=\"p-col-12 p-mb-6 p-lg-6 p-mb-lg-6\">\n            <br>\n            <p-multiSelect\n              (onPanelShow)=\"onClick()\"\n              placeholder=\"Selecionar perfis\"\n              [(ngModel)]=\"this.notifys\"\n              [options]=\"this.perfis\" >\n            </p-multiSelect>\n            <small> Serão notificados todos os associados aos perfis selecionados</small>\n          </div>\n          <form  [formGroup]=\"this.controlsFormGroup\">\n            <div>\n              <div formArrayName=\"controls\"\n                *ngFor=\"let item of this.controlsFormGroup.get('controls')['controls']; let i = index;\">\n                <div class=\"p-col-12 p-mb-6 p-lg-4 p-mb-lg-2\">\n                  <h6>\n                    <i class=\"pi pi-times-circle\" style=\"cursor: pointer; font-size: 1rem\"\n                    *ngIf=\"this.controlsFormGroup.get('controls')['controls'].length > 1\"\n                    (click)=\"this.removeControl(this, i)\"></i>\n                    Título:\n                    <span name=\"name\">\n                      <small>\n                        {{item.value.title}}\n                      </small>\n                    </span>\n                  </h6>\n                </div>\n                <div class=\"p-grid p-formgrid\" [formGroupName]=\"i\">\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <input name=\"name\" formControlName=\"title\" pInputText placeholder=\"Titulo*\">\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <input pKeyFilter=\"money\" formControlName=\"km\" pInputText placeholder=\"km*\">\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <textarea type=\"text\" formControlName=\"decription\" pInputTextarea placeholder=\"Descrição*\">\n                    </textarea>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Continuar\"\n                  (click)=\"this.stepper.next()\"\n                  [disabled]=\"!this.controlsFormGroup.valid\" type=\"button\" class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-0\">\n                <span title=\"Adicionar controles\" (click)=\"this.addControl(this)\" class=\"material-icons\">\n                  hdr_strong\n                  <small>+</small>\n                  </span>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Detalhes e Informações</h4>\n          <form  [formGroup]=\"this.detailsFormGroup\">\n            <div>\n              <div formArrayName=\"details\"\n                *ngFor=\"let item of this.detailsFormGroup.get('details')['controls']; let i = index;\">\n                <div class=\"p-col-12 p-mb-6 p-lg-4 p-mb-lg-2\">\n                  <h6>\n                    <i class=\"pi pi-times-circle\" style=\"cursor: pointer; font-size: 1rem\"\n                    *ngIf=\"this.detailsFormGroup.get('details')['controls'].length > 1\"\n                    (click)=\"this.removeDetail(this, i)\"></i>\n                    Título:\n                    <span name=\"name\">\n                      <small>\n                        {{item.value.title}}\n                      </small>\n                    </span>\n                  </h6>\n                </div>\n                <div class=\"p-grid p-formgrid\" [formGroupName]=\"i\">\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <input name=\"name\" formControlName=\"title\" pInputText placeholder=\"Titulo*\">\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <textarea type=\"text\" formControlName=\"note\" pInputTextarea placeholder=\"Descrição*\">\n                    </textarea>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Continuar\"\n                  (click)=\"this.stepper.next()\"\n                  [disabled]=\"!this.detailsFormGroup.valid\" type=\"button\" class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-0\">\n                <i title=\"Adicionar detalhes e informaçoes\" class=\"material-icons\" style=\"cursor: pointer; font-size: 1.5rem;\"\n                  (click)=\"addDetail(this)\"> info  <small>+</small></i>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Motorista</h4>\n          <div *ngIf=\"!this.addDriver\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n              <h5>Deseja vincular um motorista ao veículo\n                <span style=\"text-transform: capitalize;\">\n                  {{this.vehicleFormGroup.value.name}} -\n                 {{this.vehicleFormGroup.value.vehicleRegistration}}?\n                </span>\n              </h5>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Sim\" (click)=\"this.addDriver = true;\" type=\"button\"\n                  class=\"p-button-success p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-2 p-lg-2 p-mb-lg-0\">\n                <button  pButton label=\"Pular\" (click)=\"this.stepper.next()\" type=\"button\"\n                  class=\"p-mr-2 p-mb-2\"></button>\n              </div>\n            </div>\n          </div>\n          <div *ngIf=\"this.addDriver\" >\n            <div>\n                <div class=\"p-grid p-formgrid\" >\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <p-autoComplete\n                    inputId=\"search\"\n                    field=\"name\"\n                    [(ngModel)]=\"this.driver\"\n                    placeholder=\"Pesquisar por matrícula\"\n                    [suggestions]=\"this.drivers\"\n                    (onKeyUp)=\"searchDriver($event)\"\n                    [size]=\"30\"\n                    name=\"search\"\n                    [minLength]=\"1\">\n                    <ng-template let-driver pTemplate=\"item\">\n                        <div class=\"ui-helper-clearfix\"\n                            style=\"border-bottom:1px solid #D5D5D5\">\n                            <div class=\"autoComplete\">\n                                <span style=\"text-transform: capitalize;\">\n                                    {{ driver.name }}\n                                </span>\n                            </div>\n                        </div>\n                    </ng-template>\n                   </p-autoComplete>\n                  </div>\n                </div>\n            </div>\n\n           <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Cancelar\" (click)=\"this.driverCancel()\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Continuar\" [disabled]=\"!this.driver\" (click)=\"this.stepper.next()\"\n                   type=\"button\" class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n            </div>\n          </div>\n        </mat-step>\n        <mat-step>\n          <h4>Registrar</h4>\n          <br>\n          <form>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-12 p-lg-6 p-mb-lg-12\">\n                <h6>Continuar cadastro do veículo\n                  <span name=\"name\">\n                    {{this.vehicleFormGroup.value.name}}\n                  </span>\n                  {{this.vehicleFormGroup.value.vehicleRegistration}}.\n                </h6>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-4\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"voltar\" type=\"button\"\n                  class=\"p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-4\">\n                <p-button label=\"Continuar\" (click)=\"this.register(stepper)\" class=\"p-mr-2 p-mb-2\"></p-button>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Alertas</h4>\n          <div *ngIf=\"!this.alertSh\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <h5>Deseja adiconar alertas?</h5>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Sim\" (click)=\"this.alertSh = true;\" type=\"button\"\n                  class=\"p-button-success p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-2 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Pular\" (click)=\"this.stepper.next()\" type=\"button\"\n                  class=\"p-mr-2 p-mb-2\"></button>\n              </div>\n            </div>\n          </div>\n          <div *ngIf=\"this.alertSh\">\n            <app-alert [loadApp]=\"true\" [vehicle]=\"this.vehicle\" [stepper]=\"stepper\" ></app-alert>\n          </div>\n        </mat-step>\n        <mat-step>\n            <app-img [stepper]=\"stepper\" [id]=\"this.vehicle.id\" [apiPaths]=\"this.apiPathFile\"></app-img>\n        </mat-step>\n        <mat-step>\n          <h4>\n          <span style=\"text-transform: capitalize; font-weight: 400;\">\n            {{this.vehicleFormGroup.value.name}} -\n            {{this.vehicleFormGroup.value.vehicleRegistration}}\n          </span>\n          Cadastrado com sucesso! <i class=\"pi pi-check\" style=\"color: rgb(0, 180, 0); font-size: 1.5rem\"></i> </h4>\n          <br>\n          <form [ngStyle]=\"{'text-align' : 'center'}\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <h6>Cadastrar novo veículo</h6>\n                <div class=\"card\">\n                  <button (click)=\"reset(stepper)\" pButton label=\"Voltar ao início\" type=\"submit\" class=\"p-mr-2 p-mb-2 p-button-secondary\"></button>\n                </div>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <h6>Visualizar veículos</h6>\n                <div class=\"card\">\n                  <p-button (click)=\"this.router.navigate(['/query/type/vehicle'])\" label=\"Veículos\" class=\"p-mr-2 p-mb-2\"></p-button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n      </mat-horizontal-stepper>\n      <div class=\"p-grid p-formgrid\">\n        <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-0\">\n          <small>Campos obrigatórios <span style=\"color: red;\">*</span></small>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n","import { RegisterVehicleAccidentTypeComponent } from './vehicle-accident/register-vehicle-accident-type/register-vehicle-accident-type.component';\nimport { RegisterSupplierComponent } from './register-supplier/register-supplier.component';\nimport { DateFormatePipe } from './../../shared/pipes/dateFormate.pipe';\nimport { CustomCurrencyMaskConfig } from './../../core/config/currencyMask';\nimport { RegisterRoutingModule } from './register-routing.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegisterEmployeeComponent } from './register-employee/register-employee/register-employee.component';\nimport { RegisterKmComponent } from './register-km/register-km.component';\nimport { RegisterSchedulingComponent } from './register-scheduling/register-scheduling.component';\nimport { RegisterExpensesComponent } from './register-expenses/register-expenses.component';\nimport { RegisterVehiclesComponent } from './register-vehicles/register-vehicles.component';\nimport { RegisterReportComponent } from './register-report/register-report.component';\nimport {MatMenuModule} from '@angular/material/menu';\n\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatSelectModule} from '@angular/material/select';\nimport {CardModule} from 'primeng/card';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatIconModule} from '@angular/material/icon';\nimport { NgxMaskModule, IConfig } from 'ngx-mask'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport { TableModule } from 'primeng/table';\nimport { CurrencyMaskModule, CURRENCY_MASK_CONFIG } from \"ng2-currency-mask\";\nimport {DialogModule} from 'primeng/dialog';\nimport { InputTextModule } from 'primeng/inputtext';\nimport {DropdownModule} from 'primeng/dropdown';\nimport {SelectButtonModule} from 'primeng/selectbutton';\nimport {ButtonModule} from 'primeng/button';\nimport {InputTextareaModule} from 'primeng/inputtextarea';\nimport {AutoCompleteModule} from 'primeng/autocomplete';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {KeyFilterModule} from 'primeng/keyfilter';\nimport {FileUploadModule} from 'primeng/fileupload';\nimport {MultiSelectModule} from 'primeng/multiselect';\nimport { RegisterFunctionComponent } from './register-employee/register-function/register-function.component';\nimport { RegisterPerfilComponent } from './register-perfil/register-perfil.component';\nimport {InputSwitchModule} from 'primeng/inputswitch';\nimport { AlertComponent } from './alert/alert.component';\nimport {ColorPickerModule} from 'primeng/colorpicker';\nimport { RegisterTypeMaintenanceComponent } from './register-maintenance/type-maintenance/type-maintenance.component';\nimport { RegisterMaintenanceComponent } from './register-maintenance/maintenance/maintenance.component';\nimport { RegisterDriverComponent } from '../register/register-employee/register-driver/register-driver.component';\nimport { RegisterVehicleAccidentComponent } from './vehicle-accident/register-vehicle-accident/register-vehicle-accident.component';\nimport { RegisterFuelComponent } from './register-fuel/register-fuel.component';\nimport { RegisterCustomerComponent } from './register-customer/register-customer.component';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { RegisterJourneyComponent } from './register-journey/register-journey.component';\nimport {RadioButtonModule} from 'primeng/radiobutton';\nimport { ImgComponent } from './img/img.component';\n\nexport const options: Partial<IConfig> | (() => Partial<IConfig>) = null;\n\n@NgModule({\n  declarations: [\n    RegisterEmployeeComponent,\n    RegisterKmComponent,\n    RegisterSchedulingComponent,\n    RegisterExpensesComponent,\n    RegisterVehiclesComponent,\n    RegisterReportComponent,\n    DateFormatePipe,\n    RegisterDriverComponent,\n    RegisterFunctionComponent,\n    RegisterPerfilComponent,\n    AlertComponent,\n    RegisterTypeMaintenanceComponent,\n    RegisterMaintenanceComponent,\n    RegisterVehicleAccidentComponent,\n    RegisterFuelComponent,\n    RegisterSupplierComponent,\n    RegisterCustomerComponent,\n    RegisterJourneyComponent,\n    ImgComponent,\n    RegisterVehicleAccidentTypeComponent,\n  ],\n  imports: [\n    RadioButtonModule,\n    ButtonModule,\n    CommonModule,\n    MatSelectModule,\n    CardModule,\n    TableModule,\n    MatInputModule,\n    MatIconModule,\n    InputTextModule,\n    ReactiveFormsModule,\n    CurrencyMaskModule,\n    FormsModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatMenuModule,\n    DialogModule,\n    InputTextareaModule,\n    DropdownModule,\n    SelectButtonModule,\n    AutoCompleteModule,\n    MatStepperModule,\n    KeyFilterModule,\n    FileUploadModule,\n    MultiSelectModule,\n    InputSwitchModule,\n    ColorPickerModule,\n    Ng2SearchPipeModule,\n    NgSelectModule,\n    NgxMaskModule.forRoot(),\n    RegisterRoutingModule\n  ],\n  providers:[{ provide: CURRENCY_MASK_CONFIG, useValue: CustomCurrencyMaskConfig } ]\n})\nexport class RegisterModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { SAVE_SUCESS } from 'src/app/core/menssages/menssagens';\nimport { MsgService } from 'src/app/core/menssages/msg.service';\nimport { TOAST_SUCCESSO } from 'src/app/core/menssages/toastEvent';\nimport { ApiService } from 'src/app/core/services/api.service';\nimport { BreadcrumbService } from 'src/app/shared/config/app.breadcrumb.service';\nimport { ApiPaths } from 'src/app/shared/enuns/api-paths.enum';\nimport { BUILD_WORD_KEY } from 'src/app/shared/utils/builWordKey';\n\n@Component({\n  selector: 'app-register-vehicle-accident-type',\n  templateUrl: './register-vehicle-accident-type.component.html',\n  styleUrls: ['./register-vehicle-accident-type.component.scss']\n})\nexport class RegisterVehicleAccidentTypeComponent implements OnInit {\n\n  public registerFormGroup: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private msg: MsgService,\n    private spinner: NgxSpinnerService,\n    private service: ApiService,\n    private breadcrumbService: BreadcrumbService\n  ) {\n    this.breadcrumbService.setItems([{ label: 'Registrar tipo de sinistros'}]);\n  }\n\n\n  private loadFormGroup(): void {\n    this.registerFormGroup = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      description: ['', [Validators.required]],\n      wordKey: [''],\n    });\n  }\n\n  public register(){\n    this.registerFormGroup.value.wordKey = BUILD_WORD_KEY(this.registerFormGroup.value);\n    this.spinner.show();\n    this.service.post(ApiPaths.TYPE_VEHICLE_ACCIDENT, this.registerFormGroup.value)\n                .subscribe(() => {\n                  this.spinner.hide();\n                  this.msg.toast(TOAST_SUCCESSO(SAVE_SUCESS));\n                  this.registerFormGroup.reset();\n                });\n  }\n\n  ngOnInit(): void {\n    this.loadFormGroup();\n  }\n\n}\n","<div class=\"p-grid p-fluid\">\n  <div class=\"p-col-12 p-md-12\">\n    <div class=\"card\">\n      <form [formGroup]=\"this.registerFormGroup\">\n        <div class=\"p-grid p-formgrid\">\n          <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n            <h6 style=\"font-weight: 700;\">Registrar Tipo de sinistros</h6>\n          </div>\n        </div>\n        <div class=\"p-grid p-formgrid\">\n          <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n            <input name=\"name\" formControlName=\"name\" type=\"text\" pInputText placeholder=\"Nome*\">\n          </div>\n          <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n            <input formControlName=\"description\"\n             type=\"text\" pInputText placeholder=\"Descrição*\">\n          </div>\n        </div>\n        <div class=\"p-grid p-formgrid\">\n          <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n            <button pButton label=\"Cadastrar\" (click)=\"this.register()\" [disabled]=\"!this.registerFormGroup.valid\"\n              class=\"p-mr-2 p-mb-2\">\n            </button>\n          </div>\n        </div>\n      </form>\n      </div>\n      </div>\n      </div>\n","import { BUILD_WORD_KEY } from './../../../../shared/utils/builWordKey';\nimport { ValidateDate } from './../../../../shared/utils/validateDate';\nexport const BUILD_PAYLOAD_ACCIDENT = function <Accident>($this) {\n\n  let payload = {\n                driver:{\n                 id: $this.driver.id,\n                 name: $this.driver.name\n                },\n                vehicle:{\n                  id: $this.vehicle.id,\n                  vehicleRegistration: $this.vehicle.vehicleRegistration\n                 },\n                 amount: $this.amountFormGroup.value.amount,\n                 type:{\n                  id: $this.typeAccident.id,\n                  name: $this.typeAccident.name\n                 },\n                 date: ValidateDate.parseDate($this.accidentDate),\n                  byUser: {\n                    id: $this.loginCookieStorage.get().id,\n                    name: $this.loginCookieStorage.get().name,\n                  },\n                wordKey: ''\n               }\n\n   payload.wordKey = BUILD_WORD_KEY({a: $this.driver.name, b:$this.vehicle.vehicleRegistration, c:$this.typeAccident.name});\n\n  return payload;\n}\n","import { ValidateDate } from './../../../../shared/utils/validateDate';\nimport { BUILD_PAYLOAD_ACCIDENT } from './build_payload';\nimport { ApiPaths } from './../../../../shared/enuns/api-paths.enum';\nimport { Page } from './../../../../shared/model/response/elementsResponse';\nimport { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { MsgService } from 'src/app/core/menssages/msg.service';\nimport { ApiService } from 'src/app/core/services/api.service';\nimport { CepService } from 'src/app/core/services/cep.service';\nimport { BreadcrumbService } from 'src/app/shared/config/app.breadcrumb.service';\nimport { ElementsResponse } from 'src/app/shared/model/response/elementsResponse';\nimport { DeviceType } from 'src/app/shared/utils/device-type';\nimport { LoginCookieStorage } from 'src/app/core/cookieStorage/loginCookieStorage';\nimport { SimpleData } from 'src/app/shared/model/simple_data';\nimport { TOAST_SUCCESSO } from 'src/app/core/menssages/toastEvent';\nimport { Subscription } from 'rxjs';\nimport { SAVE_SUCESS } from 'src/app/core/menssages/menssagens';\n\n@Component({\n  selector: 'app-register-vehicle-accident',\n  templateUrl: './register-vehicle-accident.component.html',\n  styleUrls: ['./register-vehicle-accident.component.scss']\n})\nexport class RegisterVehicleAccidentComponent implements OnInit {\n\n  public alertFormGroup: FormGroup;\n  public amountFormGroup: FormGroup;\n  public alerts: FormArray;\n  public values: FormArray;\n\n  private subscription = new Subscription();\n  public typeAccident: any;\n  public typeAccidents = new Array<any>();\n  public apiPathFile: ApiPaths.VEHICLE_ACCIDENT_FILE\n  public vehicles = new Array<any>();\n  public vehicle\n  public carId: any;\n  public driver: any;\n  public ValidateDate =  ValidateDate\n  public accidentDate: any;\n  public drivers = new Array<any>();\n  public pageAccident = new Page();\n  public id: any;\n\n  public alertSh: boolean;\n  public mobile = DeviceType.mobileType();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private msg: MsgService,\n    private spinner: NgxSpinnerService,\n    private service: ApiService,\n    private loginCookieStorage: LoginCookieStorage,\n    public router: Router,\n    private cep: CepService,\n    private breadcrumbService: BreadcrumbService\n  ) {\n    this.breadcrumbService.setItems([{label: 'Registrar Sinistro'}]);\n  }\n\n  private loadFormGroup(): void {\n    this.amountFormGroup = this.formBuilder.group({\n      amount: [0],\n      values: this.formBuilder.array([ this.createAmount() ]),\n    });\n  }\n\n      /* amounts */\n\n      public createAmount(): FormGroup {\n      return this.formBuilder.group({\n        title: ['', Validators.required],\n        description: [''],\n        value: ['', Validators.required],\n      });\n    }\n\n    public addAmount(): void {\n      this.values = this.amountFormGroup.get('values') as FormArray;\n      this.values.push(this.createAmount());\n    }\n\n    public removeAmount(i): void {\n      this.values.removeAt(i);\n      this.calculate();\n    }\n\n    public cancelAmount(){\n      this.amountFormGroup.reset();\n    }\n\n    public calculate(){\n      let total = this.amountFormGroup.value.values.reduce(getTotal, 0);\n      function getTotal(total, item) {\n        return total + item.value;\n      }\n      this.amountFormGroup.get('amount').setValue(total);\n    }\n\n    public searchDriver(event): void{\n\n      this.service.get(`${ApiPaths.DRIVER}/${event.key}`, {})\n                  .subscribe((r: Array<any>) => {\n                    this.drivers = r;\n                  });\n  }\n\n  public filter(event) {\n    let query = event.query;\n\n    this.service.get(`${ApiPaths.VEHICLE}/${query}`, {})\n    .subscribe((r: Array<any>) => {\n      this.vehicles = r;\n    });\n  }\n\n  public onSelectAutoComplete(value: any): any {\n    setTimeout(() => {\n     let c: any = document.getElementById('AutoC');\n     c.value = value.vehicleRegistration;\n    }, 1);\n    this.carId = value.id;\n  }\n\n  public scrollToEndTypeEmployee() {\n\n    if(this.typeAccident.length < this.pageAccident.totalElements){\n      this.service.get(ApiPaths.TYPE_VEHICLE_ACCIDENT, {page: this.pageAccident.nextPage, size: this.pageAccident.size})\n      .subscribe((r: ElementsResponse) => {\n\n        this.pageAccident = r.page;\n\n        r.elements.forEach((element) => {\n          this.typeAccident.push(element);\n         });\n      });\n    }\n  }\n\n  public loadAccident(){\n    this.spinner.show();\n    this.service.get(ApiPaths.TYPE_VEHICLE_ACCIDENT, {page: 0, size: 10})\n                .subscribe((r: ElementsResponse) => {\n                   this.pageAccident = r.page;\n                   this.typeAccidents = r.elements;\n                     this.spinner.hide();\n                });\n  }\n\n  public register(stepper?): void {\n    this.spinner.show();\n    const sub = this.service\n                    .post<SimpleData>(`${ApiPaths.VEHICLE_ACCIDENT}`, BUILD_PAYLOAD_ACCIDENT(this))\n                    .subscribe((r) => {\n                       this.id = r.id;\n\n                       stepper.next()\n                       this.spinner.hide();\n                       this.msg.toast(TOAST_SUCCESSO(SAVE_SUCESS));\n      });\n    this.subscription.add(sub);\n  }\n\n  ngOnInit(): void {\n       this.loadFormGroup();\n       this.loadAccident();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n\n","<div class=\"p-grid p-fluid\">\n  <div class=\"p-col-12 p-md-12\">\n    <div class=\"card\">\n      <mat-horizontal-stepper [linear]=\"true\" #stepper>\n        <mat-step>\n          <h4>Dados iniciais</h4>\n          <form>\n            <div class=\"p-grid p-formgrid\">\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <p-autoComplete\n                    inputId=\"search\"\n                    field=\"name\"\n                    [(ngModel)]=\"this.driver\"\n                    placeholder=\"Pesquisar por Motorista\"\n                    [suggestions]=\"this.drivers\"\n                    (onKeyUp)=\"searchDriver($event)\"\n                    [size]=\"30\"\n                    name=\"search\"\n                    [minLength]=\"1\">\n                    <ng-template let-driver pTemplate=\"item\">\n                        <div class=\"ui-helper-clearfix\"\n                            style=\"border-bottom:1px solid #D5D5D5\">\n                            <div class=\"autoComplete\">\n                                <span style=\"text-transform: capitalize;\">\n                                    {{ driver.name }}\n                                </span>\n                            </div>\n                        </div>\n                    </ng-template>\n                   </p-autoComplete>\n                  </div>\n                  <div class=\"p-col-12 p-mb-2 p-lg-4 p-mb-lg-0\">\n                    <p-autoComplete [size]=\"30\" inputId=\"AutoC\" placeholder=\"Pesquisar por matrícula\" [suggestions]=\"this.vehicles\"\n                      (completeMethod)=\"filter($event)\"\n                      [(ngModel)]=\"this.vehicle\"\n                      (onSelect)=\"onSelectAutoComplete($event)\" name=\"estado\" [minLength]=\"1\">\n                      <ng-template let-brand pTemplate=\"item\">\n                        <div class=\"ui-helper-clearfix\" style=\"border-bottom:1px solid #D5D5D5\">\n                          <div class=\"autoComplete\">\n                            <span>\n                              {{ brand.vehicleRegistration }}\n                            </span>\n                          </div>\n                        </div>\n                      </ng-template>\n                    </p-autoComplete>\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <ng-select bindLabel=\"name\" [searchable]=\"true\" [clearable]=\"false\"\n                      [placeholder]=\"'Tipo Sinistro'\" [(ngModel)]=\"this.typeAccident\" [ngModelOptions]=\"{standalone: true}\"\n                      [virtualScroll]=\"true\" (scrollToEnd)=\"scrollToEndTypeEmployee()\">\n                      <ng-option *ngFor=\"let i of this.typeAccidents\" [value]=\"i\">{{i.name}}</ng-option>\n                    </ng-select>\n                  </div>\n\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <input [dropSpecialCharacters]=\"false\" name=\"accidenta\" [(ngModel)]=\"this.accidentDate\" [hiddenInput]=\"true\" mask=\"00/00/0000\" type=\"text\" pInputText\n                  placeholder=\"Data do sinistro*\">\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n\n                <button pButton label=\"Continuar\"\n                [disabled]=\"!this.driver || !this.vehicle || !this.typeAccident || this.ValidateDate.invalidDate(this.ValidateDate.parseDate(accidentDate))\"\n                (click)=\"this.stepper.next()\" class=\"p-mr-2 p-mb-2\">\n                </button>\n\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <form [formGroup]=\"this.amountFormGroup\">\n            <h4>Total:\n              <small>\n                {{this.amountFormGroup.value.amount.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })}}\n              </small>\n            </h4>\n            <div>\n              <div formArrayName=\"values\"\n                *ngFor=\"let item of this.amountFormGroup.get('values')['controls']; let i = index;\">\n                <div style=\"padding: 0 !important;\" class=\"p-col-12 p-mb-6 p-lg-4 p-mb-lg-2\">\n                  <h6>\n                    <i class=\"pi pi-times-circle\" style=\"cursor: pointer; font-size: 1rem\"\n                      *ngIf=\"this.amountFormGroup.get('values')['controls'].length > 1\"\n                      (click)=\"this.removeAmount(i)\"></i>\n                    Valor:\n                    <span name=\"name\">\n                      <small>\n                        {{item.value.value.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })}}\n                      </small>\n                    </span>\n                  </h6>\n                </div>\n                <div class=\"p-grid p-formgrid\" [formGroupName]=\"i\">\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <input name=\"name\" formControlName=\"title\" pInputText placeholder=\"Titulo\">\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <textarea type=\"text\" formControlName=\"description\" pInputTextarea placeholder=\"Descrição\">\n                    </textarea>\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <br>\n                    <input type=\"text\" (keyup)=\"this.calculate()\"\n                      [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\" currencyMask formControlName=\"value\"\n                      pInputText placeholder=\"Valor\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Cancelar\" (click)=\"cancelAmount()\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton (click)=\"this.register(stepper)\" [disabled]=\"this.amountFormGroup.invalid\" label=\"Concluir\" type=\"button\" class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-0\">\n                <i title=\"Adicionar novo valor\" class=\"material-icons\" style=\"cursor: pointer; font-size: 2rem;\"\n                  (click)=\"addAmount()\">flag <small>+</small></i>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step>\n          <h4>Alertas</h4>\n          <div *ngIf=\"!this.alertSh\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n              <h5>Deseja adiconar alertas?</h5>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Sim\" (click)=\"this.alertSh = true;\" type=\"button\"\n                  class=\"p-button-success p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-2 p-lg-2 p-mb-lg-0\">\n                <button  pButton label=\"Pular\" (click)=\"this.stepper.next()\" type=\"button\"\n                  class=\"p-mr-2 p-mb-2\"></button>\n              </div>\n            </div>\n          </div>\n          <form *ngIf=\"this.alertSh\" [formGroup]=\"this.alertFormGroup\">\n            <div>\n              <h4>Alertas</h4>\n              <div *ngIf=\"!this.alertSh\">\n                <div class=\"p-grid p-formgrid\">\n                  <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                    <h5>Deseja adiconar alertas?</h5>\n                  </div>\n                </div>\n                <div class=\"p-grid p-formgrid\">\n                  <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                    <button (click)=\"this.stepper.previous()\" pButton label=\"Voltar\" type=\"button\"\n                      class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n                  </div>\n                  <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                    <button pButton label=\"Sim\" (click)=\"this.alertSh = true;\" type=\"button\"\n                      class=\"p-button-success p-mr-2 p-mb-2\"></button>\n                  </div>\n                  <div class=\"p-col-12 p-mb-2 p-lg-2 p-mb-lg-0\">\n                    <button pButton label=\"Pular\" (click)=\"this.stepper.next()\" type=\"button\"\n                      class=\"p-mr-2 p-mb-2\"></button>\n                  </div>\n                </div>\n              </div>\n              <div *ngIf=\"this.alertSh\">\n                <app-alert [loadApp]=\"true\" [id]=\"this.id\" [stepper]=\"stepper\" ></app-alert>\n              </div>\n            </div>\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Cancelar\" (click)=\"cancelAlert()\" type=\"button\"\n                  class=\"p-button-secondary p-mr-2 p-mb-2\"></button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-2 p-mb-lg-0\">\n                <button pButton label=\"Concluir\" (click)=\"this.buildPayload(stepper)\"\n                  [disabled]=\"!this.alertFormGroup.valid\" type=\"button\" class=\"p-mr-2 p-mb-2\">\n                </button>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-0\">\n                <i title=\"Adicionar novo alerta\" class=\"material-icons\" style=\"cursor: pointer; font-size: 2rem;\"\n                  (click)=\"addAlert()\">warning <small>+</small></i>\n              </div>\n            </div>\n          </form>\n          <mat-step>\n            <app-img [stepper]=\"stepper\" [id]=\"this.id\" [apiPaths]=\"this.apiPathFile\"></app-img>\n        </mat-step>\n        </mat-step>\n        <mat-step>\n          <h4>\n          <span style=\"text-transform: capitalize; font-weight: 400;\">\n           <!--  {{this.personalDataFormGroup.value.name}} -->\n          </span>\n          Cadastrado com sucesso! <i class=\"pi pi-check\" style=\"color: rgb(0, 180, 0); font-size: 1.5rem\"></i> </h4>\n          <br>\n          <form [ngStyle]=\"{'text-align' : 'center'}\">\n            <div class=\"p-grid p-formgrid\">\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <h6>Cadastrar novo sinistro</h6>\n                <div class=\"card\">\n                  <button pButton label=\"Voltar ao início\" type=\"submit\" class=\"p-mr-2 p-mb-2 p-button-secondary\"></button>\n                </div>\n              </div>\n              <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-4\">\n                <h6>Visualizar sinistros</h6>\n                <div class=\"card\">\n                  <p-button (click)=\"this.router.navigate(['/query/type/vehicle-accident'])\" label=\"Sinistros\" class=\"p-mr-2 p-mb-2\"></p-button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n      </mat-horizontal-stepper>\n      <div class=\"p-grid p-formgrid\">\n        <div class=\"p-col-12 p-mb-4 p-lg-4 p-mb-lg-0\">\n          <small>Campos obrigatórios <span style=\"color: red;\">*</span></small>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { FormArray, FormGroup, Validators } from '@angular/forms';\n\nexport const CREATE_FORM_ALERT = function create($this): FormGroup {\n  return $this.formBuilder.group({\n    title: ['', [Validators.required]],\n    date: ['', [Validators.required]],\n    note: ['', [Validators.required]],\n    priorityColor: ['', [Validators.required]],\n    namePriority: ['', [Validators.required]],\n    perfil: [''],\n    usersIds: []\n  });\n}\n\nexport const ADD_ALERT = function add($this): void {\n  $this.alerts = this.alertFormGroup.get('alerts') as FormArray;\n  $this.alerts.push(CREATE_FORM_ALERT($this));\n}\n\nexport const REMOVE_ALERT = function remove($this, i): void {\n  $this.alerts.removeAt(i);\n}\n\nexport const FORM_BUILDER_ALERT = function formBuild($this){\n  return $this.formBuilder.group({\n    alerts: $this.formBuilder.array([ CREATE_FORM_ALERT($this) ]),\n  });\n}\n\n","import { FormArray, FormGroup, Validators } from '@angular/forms';\n\nexport const CREATE_FORM_DETAIL = function create($this): FormGroup {\n  return $this.formBuilder.group({\n    title: ['', [Validators.required]],\n    note: ['', [Validators.required]],\n  });\n}\n\nexport const ADD_DETAIL = function add($this): void {\n  $this.details = $this.detailsFormGroup.get('details') as FormArray;\n  $this.details.push(CREATE_FORM_DETAIL($this));\n}\n\nexport const REMOVE_DETAIL = function remove($this, i): void {\n  $this.details.removeAt(i);\n}\n\nexport const FORM_BUILDER_DETAIL = function formBuild($this){\n  return $this.formBuilder.group({\n    details: $this.formBuilder.array([ CREATE_FORM_DETAIL($this) ]),\n  });\n}\n\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { ValidateDate } from '../utils/validateDate';\n\n@Pipe({\n  name: 'dateFormate'\n})\nexport class DateFormatePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n      return ((i) => {\n        return ValidateDate.parseDateBrFormat(i)\n      })\n  }\n\n}\n","import { ApiService } from '../../core/services/api.service';\nimport { ApiPaths } from './../enuns/api-paths.enum';\nimport { debounceTime, map, startWith} from 'rxjs/operators';\nimport { fromEvent, Observable } from 'rxjs';\nimport { Injectable, OnInit } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AutoCompleteService{\n\n public filteredOptions: Observable<any[]>;\n\n  constructor(private service: ApiService) {}\n\n  public loadautoComplete(doc){\n\n    const searchBox = doc.getElementById('search');\n    const keyup$ = fromEvent(searchBox, 'keyup');\n\n    keyup$.pipe( map((i: any) => i.currentTarget.value), debounceTime(300))\n          .subscribe((r) => {\n\n          if(!r){\n            this.filteredOptions = null;\n            return;\n           }\n\n          this.filteredOptions = this.service\n                                   .search(`${ApiPaths.CAR_SEARCH}/${r}`)\n                                   .pipe(map(x => x));\n      });\n  }\n}\n","\nexport class CrudRegisterDriverStorage {\n  private static DVREG = 'DVREG';\n\n  public static set(data: any): void {\n    sessionStorage.setItem(CrudRegisterDriverStorage.DVREG, JSON.stringify(data));\n  }\n\n  public static get(): any {\n   return JSON.parse(sessionStorage.getItem(CrudRegisterDriverStorage.DVREG));\n  }\n\n  public static remove(): void {\n     sessionStorage.removeItem(CrudRegisterDriverStorage.DVREG);\n  }\n\n\n  private static TYPE_EMPLOYEE = 'TPL';\n\n  public static setType(data: any): void {\n    sessionStorage.setItem(CrudRegisterDriverStorage.TYPE_EMPLOYEE, JSON.stringify(data));\n  }\n\n  public static getType(): any {\n   return JSON.parse(sessionStorage.getItem(CrudRegisterDriverStorage.TYPE_EMPLOYEE));\n  }\n\n  public static removeType(): void {\n     sessionStorage.removeItem(CrudRegisterDriverStorage.TYPE_EMPLOYEE);\n  }\n\n}\n","export const BUILD_WORD_KEY = function (x){\n  let s = [];\n  for(let e in x){\n    if(typeof x[e] === 'object' && x[e] !== null && x[e] !== ''){\n      for(let y in x[e]){\n        s.push(x[e][y]);\n      }\n    }else{\n      if(x[e] !== null && x[e] !== ''){\n        s.push(x[e]);\n      }\n    }\n  }\n  return s.toString().replace(',', ' ');\n}\n","import { TOAST_ERROR } from '../../../app/core/menssages/toastEvent';\nimport { Adress } from '../../../app/shared/model/adress';\n\nexport const BUILD_LINK_GOOGLE_MAPS = function (addres: Adress, $this){\n\n if( !addres.city || !addres.number){\n  $this.msg.toast(TOAST_ERROR(\"Preencha todos campos do endereço para continuar\"));\n  return;\n }\n  window.open(`${'https://www.google.com/maps/place'}/${addres.street}, ${addres.number} - ${addres.neighborhood} - ${addres.city} - ${addres.state},${addres.postalCode},674m/data=!3m1!1e3!4m5!3m4!1s0x0:0x0!8m2!3d!4d`)\n}\n","import { Observable, fromEvent } from 'rxjs';\nimport { debounceTime, map } from 'rxjs/operators';\n\nexport const FILTER_DEBOUNCE_TIME = function (id): Observable<any>{\n  const searchBox = document.getElementById(id);\n  const keyup$ = fromEvent(searchBox, 'keyup');\n\n return keyup$.pipe(map((i: any) => i.currentTarget.value), debounceTime(500))\n}\n","\n\n\nexport const GET_POSOTION = function (options?: PositionOptions): Promise<any> {\n  return new Promise((resolve, reject) =>\n      navigator.geolocation.getCurrentPosition(resolve, reject, options)\n  );\n}\n","import { AbstractControl } from \"@angular/forms\";\n\nexport class ValidateDate {\npublic static validateDateString (value: AbstractControl) {\n\n  let date = value.value;\n\n  if (date == null || date == '' || date == undefined) {\n    return {\n      date: {\n        valid: false\n      }\n    };\n  }\n\n  let d: any;\n\n  if (date.indexOf('-') > -1) {\n    d = date;\n  } else {\n    d = ValidateDate.parseDate(date);\n  }\n\n  d = new Date(d);\n\n  if (d == 'Invalid Date') {\n    return {\n      date: {\n        valid: false\n      }\n    };\n  }\n\n  return null;\n};\n\npublic static invalidDate(value): boolean{\n  let d: any = new Date(value);\n  if (d == 'Invalid Date') {\n    return true;\n    };\n\n   return false;\n}\n\npublic static parseDate (date: string) {\n  if(!date){\n    return '';\n  }\n  date = date.replace(/\\D+/g, '');\n\n  let dd = date.substring(0, 2);\n  let mm = date.substring(2, 4) + '-';\n  let yy = date.substring(4, 9) + '-';\n\n  return yy + mm + dd;\n}\n\npublic static parseDateBrFormat (date: string) {\n  date = date.replace(/\\D+/g, '');\n\n  let dd = date.substring(0, 2);\n  let mm = date.substring(2, 4) + '/';\n  let yy = date.substring(4, 9) + '/';\n\n  return dd + mm  + yy;\n}\n}\n","export const environment = {\n  production: true,\n  url: 'http://35.193.49.38:8881/api/drsouza/v1',\n  googleKey: '',\n  cep: {\n     url: 'https://viacep.com.br/ws',\n     response_type: 'json'\n  }\n};\n"],"sourceRoot":"webpack:///"}